{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/source/class/hkollmann/mobilegrid/ui/container/Grid.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "mobile",
    "core",
    "Widget",
    "construct",
    "__items",
    "events",
    "addCell",
    "addRow",
    "properties",
    "defaultCssClass",
    "refine",
    "init",
    "members",
    "getCell",
    "aRow",
    "aCol",
    "res",
    "getRowCount",
    "length",
    "getColCount",
    "__maxcols",
    "add",
    "aItem",
    "aLayoutProperties",
    "Error",
    "row",
    "col",
    "$$layoutProperties",
    "bom",
    "element",
    "getContentElement",
    "style",
    "Style",
    "setStyles",
    "__render",
    "clear",
    "r",
    "c",
    "_disposeObjects",
    "_getTagName",
    "_setHtml",
    "maxcols",
    "i",
    "tr",
    "dom",
    "Element",
    "create",
    "td",
    "fireEvent",
    "hkollmann",
    "mobilegrid",
    "event",
    "type",
    "GridEvent",
    "item",
    "colspan",
    "Attribute",
    "set",
    "rowspan",
    "e",
    "getContainerElement",
    "appendChild",
    "_domUpdated",
    "destruct",
    "container",
    "Grid"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo mobile grid\n   https://github.com/hkollmann/hkollmann.mobilegrid\n   \n   Copyright:\n     2018 Henner Kollmann (Henner.Kollmann@gmx.de)\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n\n     This software is provided under the same licensing terms as Qooxdoo,\n     please see the LICENSE file in the Qooxdoo project's top-level directory\n     for details.\n\n   Authors:\n    Henner Kollmann (Henner.Kollmann@gmx.de)\n\n************************************************************************ */\n/*\n * @require(hkollmann.mobilegrid.event.type.GridEvent)\n * @asset(hkollmann/mobilegrid/*)\n */\n/**\n *\n * @type Grid\n * a widget to generate a grid for mobile framework. Cell content can be any\n * mobile wigdet. Each cell can be styled by css class or css style.\n */\nqx.Class.define(\"hkollmann.mobilegrid.ui.container.Grid\", {\n  extend: qx.ui.mobile.core.Widget,\n  construct() {\n    super();\n    this.__items = [];\n  },\n  events: {\n    addCell: \"hkollmann.mobilegrid.event.type.GridEvent\",\n    addRow: \"hkollmann.mobilegrid.event.type.GridEvent\",\n  },\n\n  properties: {\n    /**\n     * overridden\n     */\n    defaultCssClass: {\n      refine: true,\n      init: \"grid\",\n    },\n  },\n\n  members: {\n    /**\n     * get the cell widget at row/col\n     *\n     * @param aRow {Array} row to fetch\n     * @param aCol {Array} col to fetch\n     * @return {var} widget at row/col\n     */\n    getCell(aRow, aCol) {\n      var res = null;\n      if (this.__items) {\n        if (this.__items[aRow]) {\n          res = this.__items[aRow][aCol];\n        }\n      }\n      return res;\n    },\n\n    /**\n     * count of rows\n     *\n     * @return {var} count of rows\n     */\n    getRowCount() {\n      return this.__items.length;\n    },\n\n    /**\n     * count of cols\n     *\n     * @return {var} count of cols\n     */\n    getColCount() {\n      return this.__maxcols;\n    },\n\n    /**\n     * add an widget to the grid\n     *\n     * @param aItem {Widget} the widget to add\n     * @param aLayoutProperties {Object} define properties of the widget:<br/>\n     *         col    : col where widget should be inserted<br/>\n     *         row    : row where widget should be inserted<br/>\n     *         colspan: count of cols to span<br/>\n     *         rowspan: count of rows to span<br/>\n     *         class  : class for div element, default: cell<br/>\n     *         style  : special style for div element\n     * @return {var} the added item\n     */\n    add(aItem, aLayoutProperties) {\n      if (aLayoutProperties === null) {\n        throw new Error(\"No properties given\");\n      }\n      if (aLayoutProperties.row === null) {\n        throw new Error(\"No row given\");\n      }\n      if (aLayoutProperties.col === null) {\n        throw new Error(\"No col given\");\n      }\n      if (!this.__items[aLayoutProperties.row]) {\n        this.__items[aLayoutProperties.row] = [];\n      }\n      this.__items[aLayoutProperties.row][aLayoutProperties.col] = aItem;\n      aItem.$$layoutProperties = aLayoutProperties;\n      qx.bom.element.Class.add(\n        aItem.getContentElement(),\n        aLayoutProperties.class || \"cell\"\n      );\n      if (aLayoutProperties.style) {\n        qx.bom.element.Style.setStyles(\n          aItem.getContentElement(),\n          aLayoutProperties.style\n        );\n      }\n      this.__render();\n      return this.__items[aLayoutProperties.row][aLayoutProperties.col];\n    },\n\n    /**\n     * clears the whole grid\n     * @return\n     */\n    clear() {\n      for (var r = 0; r < this.__items.length; r++) {\n        if (this.__items[r]) {\n          for (var c = 0; c < this.__items[r].length; c++) {\n            this._disposeObjects(this.__items[r][c]);\n          }\n        }\n      }\n      this.__render();\n    },\n\n    /**\n     *  overridden\n     */\n    _getTagName() {\n      return \"table\";\n    },\n\n    /**\n     * renders the grid\n     *\n     */\n    __render() {\n      this._setHtml(\"\");\n      var maxcols = 0;\n      if (this.__items) {\n        for (var i = 0; i < this.__items.length; i++) {\n          if (this.__items[i]) {\n            maxcols =\n              this.__items[i].length > maxcols\n                ? this.__items[i].length\n                : maxcols;\n          }\n        }\n        this.__maxcols = maxcols;\n        for (var r = 0; r < this.__items.length; r++) {\n          if (this.__items[r]) {\n            var tr = qx.dom.Element.create(\"tr\");\n            var td;\n            qx.bom.element.Class.add(tr, \"grid-row\");\n            var c = -1;\n            this.fireEvent(\n              \"addRow\",\n              hkollmann.mobilegrid.event.type.GridEvent,\n              [this, tr, r, c]\n            );\n            for (c = 0; c < this.__items[r].length; c++) {\n              td = qx.dom.Element.create(\"td\");\n              qx.bom.element.Class.add(td, \"grid-cell\");\n              this.fireEvent(\n                \"addCell\",\n                hkollmann.mobilegrid.event.type.GridEvent,\n                [this, td, r, c]\n              );\n              var item = this.__items[r][c];\n              if (item) {\n                if (\n                  item.$$layoutProperties.colspan &&\n                  item.$$layoutProperties.colspan > 1\n                ) {\n                  qx.bom.element.Attribute.set(\n                    td,\n                    \"colspan\",\n                    item.$$layoutProperties.colspan\n                  );\n                  c += item.$$layoutProperties.colspan - 1;\n                }\n                if (\n                  item.$$layoutProperties.rowspan &&\n                  item.$$layoutProperties.rowspan > 1\n                ) {\n                  qx.bom.element.Attribute.set(\n                    td,\n                    \"rowspan\",\n                    item.$$layoutProperties.rowspan\n                  );\n                }\n                var e = item.getContainerElement();\n                td.appendChild(e);\n              }\n              tr.appendChild(td);\n            }\n            for (; c < maxcols; c++) {\n              td = qx.dom.Element.create(\"td\");\n              tr.appendChild(td);\n            }\n            this.getContainerElement().appendChild(tr);\n          }\n        }\n      }\n      this._domUpdated();\n    },\n\n    /**\n     * destructor\n     */\n    destruct() {\n      this.clear();\n    },\n    __items: null,\n    __maxcols: null,\n  },\n});\n"
  ]
}