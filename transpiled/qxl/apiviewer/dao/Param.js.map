{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/qx_packages/qooxdoo_qxl_apiviewer_v2_0_0/source/class/qxl/apiviewer/dao/Param.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "construct",
    "meta",
    "method",
    "_meta",
    "_method",
    "_types",
    "type",
    "lang",
    "Array",
    "toNativeArray",
    "map",
    "arrayDimensions",
    "dimensions",
    "m",
    "match",
    "length",
    "members",
    "_arrayDimensions",
    "getMethod",
    "getClass",
    "getName",
    "paramName",
    "getTypes",
    "getArrayDimensions",
    "getDefaultValue",
    "defaultValue",
    "isOptional",
    "Boolean",
    "optional",
    "getDescription",
    "description",
    "body",
    "qxl",
    "apiviewer",
    "dao",
    "Param"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2018 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (johnspackman)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Represents a parameter or return type, taken from JSDoc meta data\n *\n * Example data:\n *      qooxdoo style\n        \"@param\": [\n          {\n            \"name\": \"@param\",\n            \"body\": \"options {Map?null} Optional layout data for widget.\",\n            \"paramName\": \"options\",\n            \"description\": \" Optional layout data for widget.\",\n            \"optional\": true,\n            \"defaultValue\": \"null\",\n            \"type\": \"Map\"\n          }\n        ],\n        jsdoc style\n        \"@param\": [\n          {\n            \"name\": \"@param\",\n            \"body\": \"{Map?null} options Optional layout data for widget.\",\n            \"paramName\": \"options\",\n            \"description\": \" Optional layout data for widget.\",\n            \"optional\": true,\n            \"defaultValue\": \"null\",\n            \"type\": \"Map\"\n          }\n        ],\n        \"@return\": [\n          {\n            \"name\": \"@return\",\n            \"body\": \"{Integer} The index position or <code>-1</code> when\\nthe given widget is no child of this layout.\",\n            \"docComment\": \"\",\n            \"type\": \"Integer\",\n            \"desc\": \" The index position or <code>-1</code> when\\nthe given widget is no child of this layout.\"\n          }\n        ]\n */\nqx.Class.define(\"qxl.apiviewer.dao.Param\", {\n  extend: qx.core.Object,\n\n  construct(meta, method) {\n    this.base(arguments);\n    this._meta = meta;\n    this._method = method;\n    this._types = [{ type: \"var\" }];\n    if (meta.type) {\n      this._types = qx.lang.Array.toNativeArray(meta.type).map((type) => {\n        if (typeof type === \"object\") {\n          return { type: type.type, arrayDimensions: type.dimensions };\n        }\n        var m = type.match(/^([^[]+)((\\[\\])+)?$/);\n        if (m && m[2]) {\n          return { type: m[1], arrayDimensions: m[2].length / 2 };\n        }\n        return { type: type };\n      });\n    }\n  },\n\n  members: {\n    _method: null,\n    _meta: null,\n    _types: null,\n    _arrayDimensions: 0,\n\n    getMethod() {\n      return this._method;\n    },\n\n    getClass() {\n      return this._method.getClass();\n    },\n\n    getName() {\n      return this._meta.paramName;\n    },\n\n    getTypes() {\n      return this._types;\n    },\n\n    getArrayDimensions() {\n      return this._arrayDimensions;\n    },\n\n    getDefaultValue() {\n      return this._meta.defaultValue;\n    },\n\n    isOptional() {\n      return Boolean(this._meta.optional);\n    },\n    getDescription() {\n      return this._meta.description || this._meta.body;\n    },\n  },\n});\n"
  ]
}