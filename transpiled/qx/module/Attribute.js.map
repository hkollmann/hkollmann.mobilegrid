{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/module/Attribute.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "members",
    "getHtml",
    "nodeType",
    "bom",
    "element",
    "Attribute",
    "get",
    "setHtml",
    "html",
    "Html",
    "fixEmptyTags",
    "_forEachElement",
    "item",
    "set",
    "setAttribute",
    "name",
    "value",
    "getAttribute",
    "removeAttribute",
    "setAttributes",
    "attributes",
    "getAttributes",
    "names",
    "i",
    "length",
    "removeAttributes",
    "l",
    "setProperty",
    "getProperty",
    "setProperties",
    "properties",
    "removeProperties",
    "removeProperty",
    "getProperties",
    "undefined",
    "getValue",
    "Input",
    "setValue",
    "defer",
    "statics",
    "qxWeb",
    "$attachAll",
    "module"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2011-2012 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n     * Daniel Wagner (danielwagner)\n\n************************************************************************ */\n\n/**\n * Attribute/Property handling for DOM elements.\n * @group (Core)\n */\nqx.Bootstrap.define(\"qx.module.Attribute\", {\n  members: {\n    /**\n     * Returns the HTML content of the first item in the collection\n     * @attach {qxWeb}\n     * @return {String|null} HTML content or null if the collection is empty\n     */\n    getHtml() {\n      if (this[0] && this[0].nodeType === 1) {\n        return qx.bom.element.Attribute.get(this[0], \"html\");\n      }\n      return null;\n    },\n\n    /**\n     * Sets the HTML content of each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param html {String} HTML string\n     * @return {qxWeb} The collection for chaining\n     */\n    setHtml(html) {\n      html = qx.bom.Html.fixEmptyTags(html);\n      this._forEachElement(function (item) {\n        qx.bom.element.Attribute.set(item, \"html\", html);\n      });\n      return this;\n    },\n\n    /**\n     * Sets an HTML attribute on each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Attribute name\n     * @param value {var} Attribute value\n     * @return {qxWeb} The collection for chaining\n     */\n    setAttribute(name, value) {\n      this._forEachElement(function (item) {\n        qx.bom.element.Attribute.set(item, name, value);\n      });\n      return this;\n    },\n\n    /**\n     * Returns the value of the given attribute for the first item in the\n     * collection.\n     *\n     * @attach {qxWeb}\n     * @param name {String} Attribute name\n     * @return {var} Attribute value\n     */\n    getAttribute(name) {\n      if (this[0] && this[0].nodeType === 1) {\n        return qx.bom.element.Attribute.get(this[0], name);\n      }\n      return null;\n    },\n\n    /**\n     * Removes the given attribute from all elements in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Attribute name\n     * @return {qxWeb} The collection for chaining\n     */\n    removeAttribute(name) {\n      this._forEachElement(function (item) {\n        qx.bom.element.Attribute.set(item, name, null);\n      });\n      return this;\n    },\n\n    /**\n     * Sets multiple attributes for each item in the collection.\n     *\n     * @attach {qxWeb}\n     * @param attributes {Map} A map of attribute name/value pairs\n     * @return {qxWeb} The collection for chaining\n     */\n    setAttributes(attributes) {\n      for (var name in attributes) {\n        this.setAttribute(name, attributes[name]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the values of multiple attributes for the first item in the collection\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} List of attribute names\n     * @return {Map} Map of attribute name/value pairs\n     */\n    getAttributes(names) {\n      var attributes = {};\n      for (var i = 0; i < names.length; i++) {\n        attributes[names[i]] = this.getAttribute(names[i]);\n      }\n      return attributes;\n    },\n\n    /**\n     * Removes multiple attributes from each item in the collection.\n     *\n     * @attach {qxWeb}\n     * @param attributes {String[]} List of attribute names\n     * @return {qxWeb} The collection for chaining\n     */\n    removeAttributes(attributes) {\n      for (var i = 0, l = attributes.length; i < l; i++) {\n        this.removeAttribute(attributes[i]);\n      }\n      return this;\n    },\n\n    /**\n     * Sets a property on each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Property name\n     * @param value {var} Property value\n     * @return {qxWeb} The collection for chaining\n     */\n    setProperty(name, value) {\n      for (var i = 0; i < this.length; i++) {\n        this[i][name] = value;\n      }\n      return this;\n    },\n\n    /**\n     * Returns the value of the given property for the first item in the\n     * collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Property name\n     * @return {var} Property value\n     */\n    getProperty(name) {\n      if (this[0]) {\n        return this[0][name];\n      }\n      return null;\n    },\n\n    /**\n     * Sets multiple properties for each item in the collection.\n     *\n     * @attach {qxWeb}\n     * @param properties {Map} A map of property name/value pairs\n     * @return {qxWeb} The collection for chaining\n     */\n    setProperties(properties) {\n      for (var name in properties) {\n        this.setProperty(name, properties[name]);\n      }\n      return this;\n    },\n\n    /**\n     * Removes multiple properties for each item in the collection.\n     *\n     * @attach {qxWeb}\n     * @param properties {String[]} An array of property names\n     * @return {qxWeb} The collection for chaining\n     */\n    removeProperties(properties) {\n      for (var i = 0; i < properties.length; i++) {\n        this.removeProperty(properties[i]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the values of multiple properties for the first item in the collection\n     *\n     * @attach {qxWeb}\n     * @param names {String[]} List of property names\n     * @return {Map} Map of property name/value pairs\n     */\n    getProperties(names) {\n      var properties = {};\n      for (var i = 0; i < names.length; i++) {\n        properties[names[i]] = this.getProperty(names[i]);\n      }\n      return properties;\n    },\n\n    /**\n     * Deletes a property from each item in the collection\n     *\n     * @attach {qxWeb}\n     * @param name {String} Property name\n     * @return {qxWeb} The collection for chaining\n     */\n    removeProperty(name) {\n      if (this[0]) {\n        this[0][name] = undefined;\n      }\n      return this;\n    },\n\n    /**\n     * Returns the currently configured value for the first item in the collection.\n     * Works with simple input fields as well as with select boxes or option\n     * elements. Returns an array for select boxes with multi selection. In all\n     * other cases, a string is returned.\n     *\n     * @attach {qxWeb}\n     * @return {String|String[]} String value or Array of string values (for multiselect)\n     */\n    getValue() {\n      if (this[0] && this[0].nodeType === 1) {\n        return qx.bom.Input.getValue(this[0]);\n      }\n      return null;\n    },\n\n    /**\n     * Applies the given value to each element in the collection.\n     * Normally the value is given as a string/number value and applied to the\n     * field content (textfield, textarea) or used to detect whether the field\n     * is checked (checkbox, radiobutton).\n     * Supports array values for selectboxes (multiple selection) and checkboxes\n     * or radiobuttons (for convenience).\n     *\n     * Please note: To modify the value attribute of a checkbox or radiobutton\n     * use {@link #setAttribute} instead and manipulate the <code>checked</code> attribute.\n     *\n     * @attach {qxWeb}\n     * @param value {String|Number|Array} The value to apply\n     * @return {qxWeb} The collection for chaining\n     */\n    setValue(value) {\n      this._forEachElement(function (item) {\n        qx.bom.Input.setValue(item, value);\n      });\n\n      return this;\n    }\n  },\n\n  defer(statics) {\n    qxWeb.$attachAll(this);\n  }\n});\n"
  ]
}