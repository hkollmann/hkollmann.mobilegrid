{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/bom/element/Clip.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "compile",
    "map",
    "left",
    "top",
    "width",
    "height",
    "right",
    "bottom",
    "get",
    "element",
    "mode",
    "clip",
    "bom",
    "Style",
    "trim",
    "test",
    "result",
    "RegExp",
    "$1",
    "split",
    "parseInt",
    "Error",
    "set",
    "style",
    "reset",
    "Clip"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * Contains methods to control and query the element's clip property\n *\n * @require(qx.lang.normalize.String)\n */\nqx.Bootstrap.define(\"qx.bom.element.Clip\", {\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * Compiles the given clipping into a CSS compatible string. This\n     * is a simple square which describes the visible area of an DOM element.\n     * Changing the clipping does not change the dimensions of\n     * an element.\n     *\n     * @param map {Map}  Map which contains <code>left</code>, <code>top</code>\n     *   <code>width</code> and <code>height</code> of the clipped area.\n     * @return {String} CSS compatible string\n     */\n    compile(map) {\n      if (!map) {\n        return \"clip:auto;\";\n      }\n\n      var left = map.left;\n      var top = map.top;\n      var width = map.width;\n      var height = map.height;\n\n      var right, bottom;\n\n      if (left == null) {\n        right = width == null ? \"auto\" : width + \"px\";\n        left = \"auto\";\n      } else {\n        right = width == null ? \"auto\" : left + width + \"px\";\n        left = left + \"px\";\n      }\n\n      if (top == null) {\n        bottom = height == null ? \"auto\" : height + \"px\";\n        top = \"auto\";\n      } else {\n        bottom = height == null ? \"auto\" : top + height + \"px\";\n        top = top + \"px\";\n      }\n\n      return (\n        \"clip:rect(\" + top + \",\" + right + \",\" + bottom + \",\" + left + \");\"\n      );\n    },\n\n    /**\n     * Gets the clipping of the given element.\n     *\n     * @param element {Element} DOM element to query\n     * @param mode {Number} Choose one of the modes {@link qx.bom.element.Style#COMPUTED_MODE},\n     *   {@link qx.bom.element.Style#CASCADED_MODE}, {@link qx.bom.element.Style#LOCAL_MODE}.\n     *   The computed mode is the default one.\n     * @return {Map} Map which contains <code>left</code>, <code>top</code>\n     *   <code>width</code> and <code>height</code> of the clipped area.\n     *   Each one could be null or any integer value.\n     */\n    get(element, mode) {\n      var clip = qx.bom.element.Style.get(element, \"clip\", mode, false);\n\n      var left, top, width, height;\n      var right, bottom;\n\n      if (typeof clip === \"string\" && clip !== \"auto\" && clip !== \"\") {\n        clip = clip.trim();\n\n        // Do not use \"global\" here. This will break Firefox because of\n        // an issue that the lastIndex will not be reset on separate calls.\n        if (/\\((.*)\\)/.test(clip)) {\n          var result = RegExp.$1;\n\n          // Process result\n          // Some browsers store values space-separated, others comma-separated.\n          // Handle both cases by means of feature-detection.\n          if (/,/.test(result)) {\n            var split = result.split(\",\");\n          } else {\n            var split = result.split(\" \");\n          }\n\n          top = split[0].trim();\n          right = split[1].trim();\n          bottom = split[2].trim();\n          left = split[3].trim();\n\n          // Normalize \"auto\" to null\n          if (left === \"auto\") {\n            left = null;\n          }\n\n          if (top === \"auto\") {\n            top = null;\n          }\n\n          if (right === \"auto\") {\n            right = null;\n          }\n\n          if (bottom === \"auto\") {\n            bottom = null;\n          }\n\n          // Convert to integer values\n          if (top != null) {\n            top = parseInt(top, 10);\n          }\n\n          if (right != null) {\n            right = parseInt(right, 10);\n          }\n\n          if (bottom != null) {\n            bottom = parseInt(bottom, 10);\n          }\n\n          if (left != null) {\n            left = parseInt(left, 10);\n          }\n\n          // Compute width and height\n          if (right != null && left != null) {\n            width = right - left;\n          } else if (right != null) {\n            width = right;\n          }\n\n          if (bottom != null && top != null) {\n            height = bottom - top;\n          } else if (bottom != null) {\n            height = bottom;\n          }\n        } else {\n          throw new Error(\"Could not parse clip string: \" + clip);\n        }\n      }\n\n      // Return map when any value is available.\n      return {\n        left: left || null,\n        top: top || null,\n        width: width || null,\n        height: height || null\n      };\n    },\n\n    /**\n     * Sets the clipping of the given element. This is a simple\n     * square which describes the visible area of an DOM element.\n     * Changing the clipping does not change the dimensions of\n     * an element.\n     *\n     * @param element {Element} DOM element to modify\n     * @param map {Map} A map with one or more of these available keys:\n     *   <code>left</code>, <code>top</code>, <code>width</code>, <code>height</code>.\n     */\n    set(element, map) {\n      if (!map) {\n        element.style.clip = \"rect(auto,auto,auto,auto)\";\n        return;\n      }\n\n      var left = map.left;\n      var top = map.top;\n      var width = map.width;\n      var height = map.height;\n\n      var right, bottom;\n\n      if (left == null) {\n        right = width == null ? \"auto\" : width + \"px\";\n        left = \"auto\";\n      } else {\n        right = width == null ? \"auto\" : left + width + \"px\";\n        left = left + \"px\";\n      }\n\n      if (top == null) {\n        bottom = height == null ? \"auto\" : height + \"px\";\n        top = \"auto\";\n      } else {\n        bottom = height == null ? \"auto\" : top + height + \"px\";\n        top = top + \"px\";\n      }\n\n      element.style.clip =\n        \"rect(\" + top + \",\" + right + \",\" + bottom + \",\" + left + \")\";\n    },\n\n    /**\n     * Resets the clipping of the given DOM element.\n     *\n     * @param element {Element} DOM element to modify\n     */\n    reset(element) {\n      element.style.clip = \"rect(auto, auto, auto, auto)\";\n    }\n  }\n});\n"
  ]
}