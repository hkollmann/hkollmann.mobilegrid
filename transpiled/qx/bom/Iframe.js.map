{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/bom/Iframe.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "DEFAULT_ATTRIBUTES",
    "frameBorder",
    "frameSpacing",
    "marginWidth",
    "marginHeight",
    "hspace",
    "vspace",
    "border",
    "allowTransparency",
    "create",
    "attributes",
    "win",
    "lang",
    "Object",
    "clone",
    "initValues",
    "bom",
    "Iframe",
    "key",
    "elem",
    "dom",
    "Element",
    "onload",
    "event",
    "handler",
    "onevent",
    "getWindow",
    "iframe",
    "contentWindow",
    "ex",
    "getDocument",
    "contentDocument",
    "document",
    "getBody",
    "doc",
    "getElementsByTagName",
    "setSource",
    "source",
    "Hierarchy",
    "isRendered",
    "core",
    "Environment",
    "get",
    "stop",
    "location",
    "replace",
    "src",
    "__rememberUrl",
    "log",
    "Logger",
    "warn",
    "queryCurrentUrl",
    "href",
    "callback",
    "Event",
    "removeNativeListener",
    "$$url",
    "addNativeListener"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Jonathan Wei√ü (jonathan_rass)\n     * Christian Hagendorn (Chris_schmidt)\n\n************************************************************************ */\n\n/**\n * Cross browser abstractions to work with iframes.\n *\n * @require(qx.event.handler.Iframe)\n */\nqx.Class.define(\"qx.bom.Iframe\", {\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * @type {Map} Default attributes for creation {@link #create}.\n     */\n    DEFAULT_ATTRIBUTES: {\n      frameBorder: 0,\n      frameSpacing: 0,\n      marginWidth: 0,\n      marginHeight: 0,\n      hspace: 0,\n      vspace: 0,\n      border: 0,\n      allowTransparency: true\n    },\n\n    /**\n     * Creates an DOM element.\n     *\n     * Attributes may be given directly with this call. This is critical\n     * for some attributes e.g. name, type, ... in many clients.\n     *\n     * @param attributes {Map?null} Map of attributes to apply\n     * @param win {Window?null} Window to create the element for\n     * @return {Element} The created iframe node\n     */\n    create(attributes, win) {\n      // Work on a copy to not modify given attributes map\n      var attributes = attributes ? qx.lang.Object.clone(attributes) : {};\n      var initValues = qx.bom.Iframe.DEFAULT_ATTRIBUTES;\n\n      for (var key in initValues) {\n        if (!(key in attributes)) {\n          attributes[key] = initValues[key];\n        }\n      }\n\n      var elem = qx.dom.Element.create(\"iframe\", attributes, win);\n      if (!(\"onload\" in attributes)) {\n        elem.onload = function () {\n          qx.event.handler.Iframe.onevent(elem);\n        };\n      }\n      return elem;\n    },\n\n    /**\n     * Get the DOM window object of an iframe.\n     *\n     * @param iframe {Element} DOM element of the iframe.\n     * @return {Window?null} The DOM window object of the iframe or null.\n     * @signature function(iframe)\n     */\n    getWindow(iframe) {\n      try {\n        return iframe.contentWindow;\n      } catch (ex) {\n        return null;\n      }\n    },\n\n    /**\n     * Get the DOM document object of an iframe.\n     *\n     * @param iframe {Element} DOM element of the iframe.\n     * @return {Document} The DOM document object of the iframe.\n     */\n    getDocument(iframe) {\n      if (\"contentDocument\" in iframe) {\n        try {\n          return iframe.contentDocument;\n        } catch (ex) {\n          return null;\n        }\n      }\n\n      try {\n        var win = this.getWindow(iframe);\n        return win ? win.document : null;\n      } catch (ex) {\n        return null;\n      }\n    },\n\n    /**\n     * Get the HTML body element of the iframe.\n     *\n     * @param iframe {Element} DOM element of the iframe.\n     * @return {Element} The DOM node of the <code>body</code> element of the iframe.\n     */\n    getBody(iframe) {\n      try {\n        var doc = this.getDocument(iframe);\n        return doc ? doc.getElementsByTagName(\"body\")[0] : null;\n      } catch (ex) {\n        return null;\n      }\n    },\n\n    /**\n     * Sets iframe's source attribute to given value\n     *\n     * @param iframe {Element} DOM element of the iframe.\n     * @param source {String} URL to be set.\n     * @signature function(iframe, source)\n     */\n    setSource(iframe, source) {\n      try {\n        // the guru says ...\n        // it is better to use 'replace' than 'src'-attribute, since 'replace'\n        // does not interfere with the history (which is taken care of by the\n        // history manager), but there has to be a loaded document\n        if (this.getWindow(iframe) && qx.dom.Hierarchy.isRendered(iframe)) {\n          /*\n            Some gecko users might have an exception here:\n            Exception... \"Component returned failure code: 0x805e000a\n            [nsIDOMLocation.replace]\"  nsresult: \"0x805e000a (<unknown>)\"\n          */\n          try {\n            // Webkit on Mac can't set the source when the iframe is still\n            // loading its current page\n            if (\n              qx.core.Environment.get(\"engine.name\") == \"webkit\" &&\n              qx.core.Environment.get(\"os.name\") == \"osx\"\n            ) {\n              var contentWindow = this.getWindow(iframe);\n              if (contentWindow) {\n                contentWindow.stop();\n              }\n            }\n            this.getWindow(iframe).location.replace(source);\n          } catch (ex) {\n            iframe.src = source;\n          }\n        } else {\n          iframe.src = source;\n        }\n\n        // This is a programmer provided source. Remember URL for this source\n        // for later comparison with current URL. The current URL can diverge\n        // if the end-user navigates in the Iframe.\n        this.__rememberUrl(iframe);\n      } catch (ex) {\n        qx.log.Logger.warn(\"Iframe source could not be set!\");\n      }\n    },\n\n    /**\n     * Returns the current (served) URL inside the iframe\n     *\n     * @param iframe {Element} DOM element of the iframe.\n     * @return {String} Returns the location href or null (if a query is not possible/allowed)\n     */\n    queryCurrentUrl(iframe) {\n      var doc = this.getDocument(iframe);\n\n      try {\n        if (doc && doc.location) {\n          return doc.location.href;\n        }\n      } catch (ex) {}\n\n      return \"\";\n    },\n\n    /**\n     * Remember actual URL of iframe.\n     *\n     * @param iframe {Element} DOM element of the iframe.\n     */\n    __rememberUrl(iframe) {\n      // URL can only be detected after load. Retrieve and store URL once.\n      var callback = function () {\n        qx.bom.Event.removeNativeListener(iframe, \"load\", callback);\n        iframe.$$url = qx.bom.Iframe.queryCurrentUrl(iframe);\n      };\n\n      qx.bom.Event.addNativeListener(iframe, \"load\", callback);\n    }\n  }\n});\n"
  ]
}