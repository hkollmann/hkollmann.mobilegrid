{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/bom/webfonts/Manager.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "__createdStyles",
    "__validators",
    "__queue",
    "__preferredFormats",
    "getPreferredFormats",
    "statics",
    "FONT_FORMATS",
    "VALIDATION_TIMEOUT",
    "members",
    "__styleSheet",
    "__queueInterval",
    "require",
    "familyName",
    "sourcesList",
    "callback",
    "context",
    "sourceUrls",
    "source",
    "comparisonString",
    "version",
    "fontWeight",
    "fontStyle",
    "sources",
    "i",
    "l",
    "length",
    "split",
    "src",
    "util",
    "ResourceManager",
    "getInstance",
    "toUri",
    "push",
    "Environment",
    "get",
    "parseInt",
    "event",
    "Timer",
    "addListener",
    "__flushQueue",
    "isEnabled",
    "start",
    "__require",
    "remove",
    "fontLookupKey",
    "__createFontLookupKey",
    "index",
    "__removeRule",
    "lang",
    "Array",
    "removeAt",
    "dispose",
    "preferredFormats",
    "browser",
    "browserVersion",
    "os",
    "osVersion",
    "removeStyleSheet",
    "bom",
    "Stylesheet",
    "removeSheet",
    "lookupKey",
    "includes",
    "sourcesMap",
    "__getSourcesMap",
    "rule",
    "__getRule",
    "Error",
    "createElement",
    "__addRule",
    "ex",
    "webfonts",
    "Validator",
    "setTimeout",
    "Manager",
    "addListenerOnce",
    "__onFontChangeStatus",
    "cbContext",
    "window",
    "validate",
    "stop",
    "next",
    "shift",
    "apply",
    "ev",
    "result",
    "getData",
    "valid",
    "once",
    "family",
    "formats",
    "reg",
    "RegExp",
    "join",
    "match",
    "exec",
    "rules",
    "formatList",
    "format",
    "__getSourceForFormat",
    "url",
    "completeRule",
    "cssText",
    "__fixCssText",
    "insertRule",
    "cssRules",
    "regtext",
    "document",
    "styleSheets",
    "sheet",
    "replace",
    "j",
    "m",
    "deleteRule",
    "destruct",
    "prop",
    "removeDefaultHelperElements"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n************************************************************************ */\n\n/**\n * Manages font-face definitions, making sure that each rule is only applied\n * once. It supports adding fonts of the same family but with different style\n * and weight. For instance, the following declaration uses 4 different source\n * files and combine them in a single font family.\n *\n * <pre class='javascript'>\n *   sources: [\n *     {\n *       family: \"Sansation\",\n *       source: [\n *         \"fonts/Sansation-Regular.ttf\"\n *       ]\n *     },\n *     {\n *       family: \"Sansation\",\n *       fontWeight: \"bold\",\n *       source: [\n *         \"fonts/Sansation-Bold.ttf\",\n *       ]\n *     },\n *     {\n *       family: \"Sansation\",\n *       fontStyle: \"italic\",\n *       source: [\n *         \"fonts/Sansation-Italic.ttf\",\n *       ]\n *     },\n *     {\n *       family: \"Sansation\",\n *       fontWeight: \"bold\",\n *       fontStyle: \"italic\",\n *       source: [\n *         \"fonts/Sansation-BoldItalic.ttf\",\n *       ]\n *     }\n *   ]\n * </pre>\n *\n * This class does not need to be disposed, except when you want to abort the loading\n * and validation process.\n */\nqx.Class.define(\"qx.bom.webfonts.Manager\", {\n  extend: qx.core.Object,\n\n  type: \"singleton\",\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n    this.__createdStyles = [];\n    this.__validators = {};\n    this.__queue = [];\n    this.__preferredFormats = this.getPreferredFormats();\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * List of known font definition formats (i.e. file extensions). Used to\n     * identify the type of each font file configured for a web font.\n     */\n    FONT_FORMATS: [\"eot\", \"woff2\", \"woff\", \"ttf\", \"svg\"],\n\n    /**\n     * Timeout (in ms) to wait before deciding that a web font was not loaded.\n     */\n    VALIDATION_TIMEOUT: 5000\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __createdStyles: null,\n    __styleSheet: null,\n    __validators: null,\n    __preferredFormats: null,\n    __queue: null,\n    __queueInterval: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Adds the necessary font-face rule for a web font to the document. Also\n     * creates a web font Validator ({@link qx.bom.webfonts.Validator}) that\n     * checks if the webFont was applied correctly.\n     *\n     * @param familyName {String} Name of the web font\n     * @param sourcesList {Object} List of source URLs along with their style\n     * (e.g. fontStyle: \"italic\") and weight (e.g. fontWeight: \"bold\").\n     * For maximum compatibility, this should include EOT, WOFF and TTF versions\n     * of the font.\n     * @param callback {Function?} Optional event listener callback that will be\n     * executed once the validator has determined whether the webFont was\n     * applied correctly.\n     * See {@link qx.bom.webfonts.Validator#changeStatus}\n     * @param context {Object?} Optional context for the callback function\n     */\n    require(familyName, sourcesList, callback, context) {\n      var sourceUrls = sourcesList.source;\n      var comparisonString = sourcesList.comparisonString;\n      var version = sourcesList.version;\n      var fontWeight = sourcesList.fontWeight;\n      var fontStyle = sourcesList.fontStyle;\n      var sources = [];\n      for (var i = 0, l = sourceUrls.length; i < l; i++) {\n        var split = sourceUrls[i].split(\"#\");\n        var src = qx.util.ResourceManager.getInstance().toUri(split[0]);\n        if (split.length > 1) {\n          src = src + \"#\" + split[1];\n        }\n        sources.push(src);\n      }\n\n      // old IEs need a break in between adding @font-face rules\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        (parseInt(qx.core.Environment.get(\"engine.version\")) < 9 ||\n          qx.core.Environment.get(\"browser.documentmode\") < 9)\n      ) {\n        if (!this.__queueInterval) {\n          this.__queueInterval = new qx.event.Timer(100);\n          this.__queueInterval.addListener(\"interval\", this.__flushQueue, this);\n        }\n\n        if (!this.__queueInterval.isEnabled()) {\n          this.__queueInterval.start();\n        }\n\n        this.__queue.push([\n          familyName,\n          sources,\n          fontWeight,\n          fontStyle,\n          comparisonString,\n          version,\n          callback,\n          context\n        ]);\n      } else {\n        this.__require(\n          familyName,\n          sources,\n          fontWeight,\n          fontStyle,\n          comparisonString,\n          version,\n          callback,\n          context\n        );\n      }\n    },\n\n    /**\n     * Removes a font's font-face definition from the style sheet. This means\n     * the font will no longer be available and any elements using it will\n     * fall back to the their regular font-families.\n     *\n     * @param familyName {String} font-family name\n     * @param fontWeight {String} the font-weight.\n     * @param fontStyle {String} the font-style.\n     */\n    remove(familyName, fontWeight, fontStyle) {\n      var fontLookupKey = this.__createFontLookupKey(\n        familyName,\n        fontWeight,\n        fontStyle\n      );\n\n      var index = null;\n      for (var i = 0, l = this.__createdStyles.length; i < l; i++) {\n        if (this.__createdStyles[i] == fontLookupKey) {\n          index = i;\n          this.__removeRule(familyName, fontWeight, fontStyle);\n          break;\n        }\n      }\n      if (index !== null) {\n        qx.lang.Array.removeAt(this.__createdStyles, index);\n      }\n      if (fontLookupKey in this.__validators) {\n        this.__validators[fontLookupKey].dispose();\n        delete this.__validators[fontLookupKey];\n      }\n    },\n\n    /**\n     * Returns the preferred font format(s) for the currently used browser. Some\n     * browsers support multiple formats, e.g. WOFF and TTF or WOFF and EOT. In\n     * those cases, WOFF is considered the preferred format.\n     *\n     * @return {String[]} List of supported font formats ordered by preference\n     * or empty Array if none could be determined\n     */\n    getPreferredFormats() {\n      var preferredFormats = [];\n      var browser = qx.core.Environment.get(\"browser.name\");\n      var browserVersion = qx.core.Environment.get(\"browser.version\");\n      var os = qx.core.Environment.get(\"os.name\");\n      var osVersion = qx.core.Environment.get(\"os.version\");\n\n      if (\n        (browser == \"edge\" && browserVersion >= 14) ||\n        (browser == \"firefox\" && browserVersion >= 69) ||\n        (browser == \"chrome\" && browserVersion >= 36)\n      ) {\n        preferredFormats.push(\"woff2\");\n      }\n\n      if (\n        (browser == \"ie\" &&\n          qx.core.Environment.get(\"browser.documentmode\") >= 9) ||\n        (browser == \"edge\" && browserVersion >= 12) ||\n        (browser == \"firefox\" && browserVersion >= 3.6) ||\n        (browser == \"chrome\" && browserVersion >= 6)\n      ) {\n        preferredFormats.push(\"woff\");\n      }\n\n      if (\n        (browser == \"edge\" && browserVersion >= 12) ||\n        (browser == \"opera\" && browserVersion >= 10) ||\n        (browser == \"safari\" && browserVersion >= 3.1) ||\n        (browser == \"firefox\" && browserVersion >= 3.5) ||\n        (browser == \"chrome\" && browserVersion >= 4) ||\n        (browser == \"mobile safari\" && os == \"ios\" && osVersion >= 4.2)\n      ) {\n        preferredFormats.push(\"ttf\");\n      }\n\n      if (browser == \"ie\" && browserVersion >= 4) {\n        preferredFormats.push(\"eot\");\n      }\n\n      if (browser == \"mobileSafari\" && os == \"ios\" && osVersion >= 4.1) {\n        preferredFormats.push(\"svg\");\n      }\n\n      return preferredFormats;\n    },\n\n    /**\n     * Removes the styleSheet element used for all web font definitions from the\n     * document. This means all web fonts declared by the manager will no longer\n     * be available and elements using them will fall back to their regular\n     * font-families\n     */\n    removeStyleSheet() {\n      this.__createdStyles = [];\n      if (this.__styleSheet) {\n        qx.bom.Stylesheet.removeSheet(this.__styleSheet);\n      }\n      this.__styleSheet = null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PRIVATE API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Creates a lookup key to index the created fonts.\n     * @param familyName {String} font-family name\n     * @param fontWeight {String} the font-weight.\n     * @param fontStyle {String} the font-style.\n     * @return {string} the font lookup key\n     */\n    __createFontLookupKey(familyName, fontWeight, fontStyle) {\n      var lookupKey =\n        familyName +\n        \"_\" +\n        (fontWeight ? fontWeight : \"normal\") +\n        \"_\" +\n        (fontStyle ? fontStyle : \"normal\");\n      return lookupKey;\n    },\n\n    /**\n     * Does the actual work of adding stylesheet rules and triggering font\n     * validation\n     *\n     * @param familyName {String} Name of the web font\n     * @param sources {String[]} List of source URLs. For maximum compatibility,\n     * this should include EOT, WOFF and TTF versions of the font.\n     * @param fontWeight {String} the web font should be registered using a\n     * fontWeight font weight.\n     * @param fontStyle {String} the web font should be registered using an\n     * fontStyle font style.\n     * @param comparisonString {String} String to check whether the font has loaded or not\n     * @param version {String?} Optional version that is appended to the font URL to be able to override caching\n     * @param callback {Function?} Optional event listener callback that will be\n     * executed once the validator has determined whether the webFont was\n     * applied correctly.\n     * @param context {Object?} Optional context for the callback function\n     */\n    __require(\n      familyName,\n      sources,\n      fontWeight,\n      fontStyle,\n      comparisonString,\n      version,\n      callback,\n      context\n    ) {\n      var fontLookupKey = this.__createFontLookupKey(\n        familyName,\n        fontWeight,\n        fontStyle\n      );\n\n      if (!this.__createdStyles.includes(fontLookupKey)) {\n        var sourcesMap = this.__getSourcesMap(sources);\n        var rule = this.__getRule(\n          familyName,\n          fontWeight,\n          fontStyle,\n          sourcesMap,\n          version\n        );\n\n        if (!rule) {\n          throw new Error(\n            \"Couldn't create @font-face rule for WebFont \" + familyName + \"!\"\n          );\n        }\n\n        if (!this.__styleSheet) {\n          this.__styleSheet = qx.bom.Stylesheet.createElement();\n        }\n\n        try {\n          this.__addRule(rule);\n        } catch (ex) {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            this.warn(\"Error while adding @font-face rule:\", ex.message);\n            return;\n          }\n        }\n        this.__createdStyles.push(fontLookupKey);\n      }\n\n      if (!this.__validators[fontLookupKey]) {\n        this.__validators[fontLookupKey] = new qx.bom.webfonts.Validator(\n          familyName,\n          comparisonString,\n          fontWeight,\n          fontStyle\n        );\n\n        this.__validators[fontLookupKey].setTimeout(\n          qx.bom.webfonts.Manager.VALIDATION_TIMEOUT\n        );\n\n        this.__validators[fontLookupKey].addListenerOnce(\n          \"changeStatus\",\n          this.__onFontChangeStatus,\n          this\n        );\n      }\n\n      if (callback) {\n        var cbContext = context || window;\n        this.__validators[fontLookupKey].addListenerOnce(\n          \"changeStatus\",\n          callback,\n          cbContext\n        );\n      }\n\n      this.__validators[fontLookupKey].validate();\n    },\n\n    /**\n     * Processes the next item in the queue\n     */\n    __flushQueue() {\n      if (this.__queue.length == 0) {\n        this.__queueInterval.stop();\n        return;\n      }\n      var next = this.__queue.shift();\n      this.__require.apply(this, next);\n    },\n\n    /**\n     * Removes the font-face declaration if a font could not be validated\n     *\n     * @param ev {qx.event.type.Data} qx.bom.webfonts.Validator#changeStatus\n     */\n    __onFontChangeStatus(ev) {\n      var result = ev.getData();\n      if (result.valid === false) {\n        qx.event.Timer.once(\n          function () {\n            this.remove(result.family);\n          },\n          this,\n          250\n        );\n      }\n    },\n\n    /**\n     * Uses a naive regExp match to determine the format of each defined source\n     * file for a webFont. Returns a map with the format names as keys and the\n     * corresponding source URLs as values.\n     *\n     * @param sources {String[]} Array of source URLs\n     * @return {Map} Map of formats and URLs\n     */\n    __getSourcesMap(sources) {\n      var formats = qx.bom.webfonts.Manager.FONT_FORMATS;\n      var sourcesMap = {};\n      var reg = new RegExp(\".(\" + formats.join(\"|\") + \")\");\n      for (var i = 0, l = sources.length; i < l; i++) {\n        var match = reg.exec(sources[i]);\n        if (match) {\n          var type = match[1];\n          sourcesMap[type] = sources[i];\n        }\n      }\n      return sourcesMap;\n    },\n\n    /**\n     * Assembles the body of a font-face rule for a single webFont.\n     *\n     * @param familyName {String} Font-family name\n     * @param fontWeight {String} the web font should be registered using a\n     * fontWeight font weight.\n     * @param fontStyle {String} the web font should be registered using an\n     * fontStyle font style.\n     * @param sourcesMap {Map} Map of font formats and sources\n     * @param version {String?} Optional version to be appended to the URL\n     * @return {String} The computed CSS rule\n     */\n    __getRule(familyName, fontWeight, fontStyle, sourcesMap, version) {\n      var rules = [];\n\n      var formatList =\n        this.__preferredFormats.length > 0\n          ? this.__preferredFormats\n          : qx.bom.webfonts.Manager.FONT_FORMATS;\n\n      for (var i = 0, l = formatList.length; i < l; i++) {\n        var format = formatList[i];\n        if (sourcesMap[format]) {\n          rules.push(\n            this.__getSourceForFormat(format, sourcesMap[format], version)\n          );\n        }\n      }\n\n      var rule = \"src: \" + rules.join(\",\\n\") + \";\";\n\n      rule = \"font-family: \" + familyName + \";\\n\" + rule;\n      rule = rule + \"\\nfont-style: \" + (fontStyle ? fontStyle : \"normal\") + \";\";\n      rule =\n        rule + \"\\nfont-weight: \" + (fontWeight ? fontWeight : \"normal\") + \";\";\n\n      return rule;\n    },\n\n    /**\n     * Returns the full src value for a given font URL depending on the type\n     * @param format {String} The font format, one of eot, woff2, woff, ttf, svg\n     * @param url {String} The font file's URL\n     * @param version {String?} Optional version to be appended to the URL\n     * @return {String} The src directive\n     */\n\n    __getSourceForFormat(format, url, version) {\n      if (version) {\n        url += \"?\" + version;\n      }\n\n      switch (format) {\n        case \"eot\":\n          return (\n            \"url('\" +\n            url +\n            \"');\" +\n            \"src: url('\" +\n            url +\n            \"?#iefix') format('embedded-opentype')\"\n          );\n\n        case \"woff2\":\n          return \"url('\" + url + \"') format('woff2')\";\n        case \"woff\":\n          return \"url('\" + url + \"') format('woff')\";\n        case \"ttf\":\n          return \"url('\" + url + \"') format('truetype')\";\n        case \"svg\":\n          return \"url('\" + url + \"') format('svg')\";\n        default:\n          return null;\n      }\n    },\n\n    /**\n     * Adds a font-face rule to the document\n     *\n     * @param rule {String} The body of the CSS rule\n     */\n    __addRule(rule) {\n      var completeRule = \"@font-face {\" + rule + \"}\\n\";\n\n      if (\n        qx.core.Environment.get(\"browser.name\") == \"ie\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 9\n      ) {\n        var cssText = this.__fixCssText(this.__styleSheet.cssText);\n        cssText += completeRule;\n        this.__styleSheet.cssText = cssText;\n      } else {\n        this.__styleSheet.insertRule(\n          completeRule,\n          this.__styleSheet.cssRules.length\n        );\n      }\n    },\n\n    /**\n     * Removes the font-face declaration for the given font-family from the\n     * stylesheet\n     *\n     * @param familyName {String} The font-family name\n     * @param fontWeight {String} fontWeight font-weight.\n     * @param fontStyle {String} fontStyle font-style.\n     */\n    __removeRule(familyName, fontWeight, fontStyle) {\n      // In IE and edge even if the rule was added with font-style first\n      // and font-weight second, it is not guaranteed that the attributes\n      // remain in that order. Therefore we check for both version,\n      // style first, weight second and weight first, style second.\n      // Without this fix the rule isn't found and removed reliable.\n      var regtext =\n        \"@font-face.*?\" +\n        familyName +\n        \"(.*font-style: *\" +\n        (fontStyle ? fontStyle : \"normal\") +\n        \".*font-weight: *\" +\n        (fontWeight ? fontWeight : \"normal\") +\n        \")|\" +\n        \"(.*font-weight: *\" +\n        (fontWeight ? fontWeight : \"normal\") +\n        \".*font-style: *\" +\n        (fontStyle ? fontStyle : \"normal\") +\n        \")\";\n\n      var reg = new RegExp(regtext, \"m\");\n      for (var i = 0, l = document.styleSheets.length; i < l; i++) {\n        var sheet = document.styleSheets[i];\n        if (sheet.cssText) {\n          var cssText = sheet.cssText.replace(/\\n/g, \"\").replace(/\\r/g, \"\");\n          cssText = this.__fixCssText(cssText);\n          if (reg.exec(cssText)) {\n            cssText = cssText.replace(reg, \"\");\n          }\n          sheet.cssText = cssText;\n        } else if (sheet.cssRules) {\n          for (var j = 0, m = sheet.cssRules.length; j < m; j++) {\n            var cssText = sheet.cssRules[j].cssText\n              .replace(/\\n/g, \"\")\n              .replace(/\\r/g, \"\");\n            if (reg.exec(cssText)) {\n              this.__styleSheet.deleteRule(j);\n              return;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * IE 6 and 7 omit the trailing quote after the format name when\n     * querying cssText. This needs to be fixed before cssText is replaced\n     * or all rules will be invalid and no web fonts will work any more.\n     *\n     * @param cssText {String} CSS text\n     * @return {String} Fixed CSS text\n     */\n    __fixCssText(cssText) {\n      return cssText\n        .replace(\"'eot)\", \"'eot')\")\n        .replace(\"('embedded-opentype)\", \"('embedded-opentype')\");\n    }\n  },\n\n  /*\n  *****************************************************************************\n    DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    if (this.__queueInterval) {\n      this.__queueInterval.stop();\n      this.__queueInterval.dispose();\n    }\n    delete this.__createdStyles;\n    this.removeStyleSheet();\n    for (var prop in this.__validators) {\n      this.__validators[prop].dispose();\n    }\n    qx.bom.webfonts.Validator.removeDefaultHelperElements();\n  }\n});\n"
  ]
}