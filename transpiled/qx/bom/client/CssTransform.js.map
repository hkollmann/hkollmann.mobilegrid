{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/bom/client/CssTransform.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "getSupport",
    "name",
    "bom",
    "client",
    "CssTransform",
    "getName",
    "style",
    "getStyle",
    "origin",
    "getOrigin",
    "get3D",
    "perspective",
    "getPerspective",
    "getPerspectiveOrigin",
    "getBackFaceVisibility",
    "Style",
    "getPropertyName",
    "defer",
    "core",
    "Environment",
    "add"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n\n/**\n * Responsible for checking all relevant CSS transform properties.\n *\n * Specs:\n * http://www.w3.org/TR/css3-2d-transforms/\n * http://www.w3.org/TR/css3-3d-transforms/\n *\n * @internal\n */\nqx.Bootstrap.define(\"qx.bom.client.CssTransform\", {\n  statics: {\n    /**\n     * Main check method which returns an object if CSS animations are\n     * supported. This object contains all necessary keys to work with CSS\n     * animations.\n     * <ul>\n     *  <li><code>name</code> The name of the css transform style</li>\n     *  <li><code>style</code> The name of the css transform-style style</li>\n     *  <li><code>origin</code> The name of the transform-origin style</li>\n     *  <li><code>3d</code> Whether 3d transforms are supported</li>\n     *  <li><code>perspective</code> The name of the perspective style</li>\n     *  <li><code>perspective-origin</code> The name of the perspective-origin style</li>\n     *  <li><code>backface-visibility</code> The name of the backface-visibility style</li>\n     * </ul>\n     *\n     * @internal\n     * @return {Object|null} The described object or null, if animations are\n     *   not supported.\n     */\n    getSupport() {\n      var name = qx.bom.client.CssTransform.getName();\n      if (name != null) {\n        return {\n          name: name,\n          style: qx.bom.client.CssTransform.getStyle(),\n          origin: qx.bom.client.CssTransform.getOrigin(),\n          \"3d\": qx.bom.client.CssTransform.get3D(),\n          perspective: qx.bom.client.CssTransform.getPerspective(),\n          \"perspective-origin\":\n            qx.bom.client.CssTransform.getPerspectiveOrigin(),\n          \"backface-visibility\":\n            qx.bom.client.CssTransform.getBackFaceVisibility()\n        };\n      }\n      return null;\n    },\n\n    /**\n     * Checks for the style name used to set the transform origin.\n     * @internal\n     * @return {String|null} The name of the style or null, if the style is\n     *   not supported.\n     */\n    getStyle() {\n      return qx.bom.Style.getPropertyName(\"transformStyle\");\n    },\n\n    /**\n     * Checks for the style name used to set the transform origin.\n     * @internal\n     * @return {String|null} The name of the style or null, if the style is\n     *   not supported.\n     */\n    getPerspective() {\n      return qx.bom.Style.getPropertyName(\"perspective\");\n    },\n\n    /**\n     * Checks for the style name used to set the perspective origin.\n     * @internal\n     * @return {String|null} The name of the style or null, if the style is\n     *   not supported.\n     */\n    getPerspectiveOrigin() {\n      return qx.bom.Style.getPropertyName(\"perspectiveOrigin\");\n    },\n\n    /**\n     * Checks for the style name used to set the backface visibility.\n     * @internal\n     * @return {String|null} The name of the style or null, if the style is\n     *   not supported.\n     */\n    getBackFaceVisibility() {\n      return qx.bom.Style.getPropertyName(\"backfaceVisibility\");\n    },\n\n    /**\n     * Checks for the style name used to set the transform origin.\n     * @internal\n     * @return {String|null} The name of the style or null, if the style is\n     *   not supported.\n     */\n    getOrigin() {\n      return qx.bom.Style.getPropertyName(\"transformOrigin\");\n    },\n\n    /**\n     * Checks for the style name used for transforms.\n     * @internal\n     * @return {String|null} The name of the style or null, if the style is\n     *   not supported.\n     */\n    getName() {\n      return qx.bom.Style.getPropertyName(\"transform\");\n    },\n\n    /**\n     * Checks if 3D transforms are supported.\n     * @internal\n     * @return {Boolean} <code>true</code>, if 3D transformations are supported\n     */\n    get3D() {\n      return qx.bom.client.CssTransform.getPerspective() != null;\n    }\n  },\n\n  defer(statics) {\n    qx.core.Environment.add(\"css.transform\", statics.getSupport);\n    qx.core.Environment.add(\"css.transform.3d\", statics.get3D);\n  }\n});\n"
  ]
}