{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/qx_packages/qooxdoo_deprecated_qx_io_remote_v1_0_2/source/class/qx/io/remote/Response.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "event",
    "type",
    "Event",
    "properties",
    "state",
    "check",
    "nullable",
    "statusCode",
    "content",
    "responseHeaders",
    "apply",
    "members",
    "__lowerHeaders",
    "clone",
    "embryo",
    "setType",
    "getType",
    "setState",
    "getState",
    "setStatusCode",
    "getStatusCode",
    "setContent",
    "getContent",
    "setResponseHeaders",
    "getResponseHeaders",
    "getResponseHeader",
    "vHeader",
    "toLowerCase",
    "_applyResponseHeaders",
    "value",
    "old",
    "lowerHeaders",
    "Object",
    "keys",
    "forEach",
    "key",
    "io",
    "remote",
    "Response"
  ],
  "mappings": ";;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,uBAAhB,EAAyC;AACvCC,IAAAA,MAAM,EAAEN,EAAE,CAACO,KAAH,CAASC,IAAT,CAAcC,KADiB;;AAGvC;AACF;AACA;AACA;AACA;AAEEC,IAAAA,UAAU,EAAE;AACV;AACJ;AACA;AACA;AACA;;AAEI;AACAC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,SADF;AAELC,QAAAA,QAAQ,EAAE;AAFL,OARG;;AAaV;AACAC,MAAAA,UAAU,EAAE;AACVF,QAAAA,KAAK,EAAE,SADG;AAEVC,QAAAA,QAAQ,EAAE;AAFA,OAdF;;AAmBV;AACAE,MAAAA,OAAO,EAAE;AACPF,QAAAA,QAAQ,EAAE;AADH,OApBC;;AAwBV;AACAG,MAAAA,eAAe,EAAE;AACfJ,QAAAA,KAAK,EAAE,QADQ;AAEfC,QAAAA,QAAQ,EAAE,IAFK;AAGfI,QAAAA,KAAK,EAAE;AAHQ;AAzBP,KAT2B;;AAyCvC;AACF;AACA;AACA;AACA;AAEEC,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAc,EAAE,IADT;;AAGP;AACJ;AACA;AACA;AACA;AAEI;AACAC,MAAAA,KAVO,iBAUDC,MAVC,EAUO;AACZ,YAAID,KAAK,+DAAeC,MAAf,CAAT;AACAD,QAAAA,KAAK,CAACE,OAAN,CAAc,KAAKC,OAAL,EAAd;AACAH,QAAAA,KAAK,CAACI,QAAN,CAAe,KAAKC,QAAL,EAAf;AACAL,QAAAA,KAAK,CAACM,aAAN,CAAoB,KAAKC,aAAL,EAApB;AACAP,QAAAA,KAAK,CAACQ,UAAN,CAAiB,KAAKC,UAAL,EAAjB;AACAT,QAAAA,KAAK,CAACU,kBAAN,CAAyB,KAAKC,kBAAL,EAAzB;AACA,eAAOX,KAAP;AACD,OAlBM;;AAoBP;AACJ;AACA;AACA;AACA;AACIY,MAAAA,iBAzBO,6BAyBWC,OAzBX,EAyBoB;AACzB,YAAI,KAAKd,SAAT,EAAyB;AACvB,iBAAO,KAAKA,SAAL,CAAoBc,OAAO,CAACC,WAAR,EAApB,KAA8C,IAArD;AACD;;AAED,eAAO,IAAP;AACD,OA/BM;;AAiCP;AACJ;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,qBAxCO,iCAwCeC,KAxCf,EAwCsBC,GAxCtB,EAwC2B;AAChC,YAAIC,YAAY,GAAG,EAAnB;;AAEA,YAAIF,KAAK,KAAK,IAAd,EAAoB;AAClBG,UAAAA,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,OAAnB,CAA2B,UAAUC,GAAV,EAAe;AACxCJ,YAAAA,YAAY,CAACI,GAAG,CAACR,WAAJ,EAAD,CAAZ,GAAkCE,KAAK,CAACM,GAAD,CAAvC;AACD,WAFD;AAGA,eAAKvB,SAAL,GAAsBmB,YAAtB;AACD;AACF;AAjDM;AA/C8B,GAAzC;AAtBAtC,EAAAA,EAAE,CAAC2C,EAAH,CAAMC,MAAN,CAAaC,QAAb,CAAsB1C,aAAtB,GAAsCA,aAAtC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * This class is used to work with the result of a HTTP request.\n */\nqx.Class.define(\"qx.io.remote.Response\", {\n  extend: qx.event.type.Event,\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    /** State of the response. */\n    state: {\n      check: \"Integer\",\n      nullable: true,\n    },\n\n    /** Status code of the response. */\n    statusCode: {\n      check: \"Integer\",\n      nullable: true,\n    },\n\n    /** Content of the response. */\n    content: {\n      nullable: true,\n    },\n\n    /** The headers of the response. */\n    responseHeaders: {\n      check: \"Object\",\n      nullable: true,\n      apply: \"_applyResponseHeaders\",\n    },\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __lowerHeaders: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      USER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    clone(embryo) {\n      var clone = super.clone(embryo);\n      clone.setType(this.getType());\n      clone.setState(this.getState());\n      clone.setStatusCode(this.getStatusCode());\n      clone.setContent(this.getContent());\n      clone.setResponseHeaders(this.getResponseHeaders());\n      return clone;\n    },\n\n    /**\n     * Returns a specific response header\n     * @param vHeader {String} Response header name\n     * @return {Object | null} The header value or null;\n     */\n    getResponseHeader(vHeader) {\n      if (this.__lowerHeaders) {\n        return this.__lowerHeaders[vHeader.toLowerCase()] || null;\n      }\n\n      return null;\n    },\n\n    /**\n     * Keep lower-cased shadow of response headers for later\n     * case-insensitive matching.\n     *\n     * @param value {var} Current value\n     * @param old {var} Previous value\n     */\n    _applyResponseHeaders(value, old) {\n      var lowerHeaders = {};\n\n      if (value !== null) {\n        Object.keys(value).forEach(function (key) {\n          lowerHeaders[key.toLowerCase()] = value[key];\n        });\n        this.__lowerHeaders = lowerHeaders;\n      }\n    },\n  },\n});\n"
  ]
}