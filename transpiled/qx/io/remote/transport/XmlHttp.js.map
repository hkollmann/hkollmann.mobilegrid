{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/qx_packages/qooxdoo_deprecated_qx_io_remote_v1_0_2/source/class/qx/io/remote/transport/XmlHttp.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "io",
    "remote",
    "transport",
    "Abstract",
    "implement",
    "core",
    "IDisposable",
    "statics",
    "handles",
    "synchronous",
    "asynchronous",
    "crossDomain",
    "fileUpload",
    "programmaticFormFields",
    "responseTypes",
    "createRequestObject",
    "Environment",
    "select",
    "XMLHttpRequest",
    "mshtml",
    "window",
    "ActiveXObject",
    "xml",
    "Document",
    "XMLHTTP",
    "isSupported",
    "__timeout",
    "setTimeout",
    "timeout",
    "getTimeout",
    "properties",
    "parseJson",
    "check",
    "init",
    "members",
    "__localRequest",
    "__lastReadyState",
    "__request",
    "getRequest",
    "XmlHttp",
    "onreadystatechange",
    "lang",
    "Function",
    "bind",
    "_onreadystatechange",
    "send",
    "vRequest",
    "vMethod",
    "getMethod",
    "vAsynchronous",
    "getAsynchronous",
    "vUrl",
    "getUrl",
    "vLocalRequest",
    "location",
    "protocol",
    "test",
    "vParameters",
    "getParameters",
    "vParametersList",
    "vId",
    "value",
    "Array",
    "i",
    "length",
    "push",
    "encodeURIComponent",
    "indexOf",
    "join",
    "getData",
    "setData",
    "encode64",
    "input",
    "keyStr",
    "output",
    "chr1",
    "chr2",
    "chr3",
    "enc1",
    "enc2",
    "enc3",
    "enc4",
    "charCodeAt",
    "isNaN",
    "charAt",
    "getUsername",
    "getUseBasicHttpAuth",
    "open",
    "setRequestHeader",
    "getPassword",
    "ex",
    "error",
    "failed",
    "vRequestHeaders",
    "getRequestHeaders",
    "get",
    "event",
    "Timer",
    "once",
    "failedLocally",
    "getState",
    "warn",
    "GlobalError",
    "observeMethod",
    "e",
    "vReadyState",
    "getReadyState",
    "Exchange",
    "wasSuccessful",
    "getStatusCode",
    "setState",
    "_nativeMap",
    "readyState",
    "vLabel",
    "vValue",
    "getResponseHeader",
    "vResponseHeader",
    "getStringResponseHeaders",
    "vSourceHeader",
    "vLoadHeader",
    "getAllResponseHeaders",
    "getResponseHeaders",
    "vHeader",
    "vValues",
    "split",
    "l",
    "vPair",
    "match",
    "vStatusCode",
    "status",
    "getStatusText",
    "vStatusText",
    "statusText",
    "getResponseText",
    "vResponseText",
    "responseText",
    "getResponseXml",
    "vResponseXML",
    "vStatus",
    "responseXML",
    "documentElement",
    "s",
    "String",
    "replace",
    "loadXML",
    "Error",
    "tagName",
    "getFetchedLength",
    "vText",
    "getResponseContent",
    "state",
    "getResponseType",
    "ret",
    "getParseJson",
    "Json",
    "parse",
    "eval",
    "_applyState",
    "old",
    "fireEvent",
    "abort",
    "defer",
    "registerType",
    "destruct"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n     2006 Derrell Lipman\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * Transports requests to a server using the native XmlHttpRequest object.\n *\n * This class should not be used directly by client programmers.\n */\n\nqx.Class.define(\"qx.io.remote.transport.XmlHttp\", {\n  extend: qx.io.remote.transport.Abstract,\n  implement: [qx.core.IDisposable],\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * Capabilities of this transport type.\n     *\n     * @internal\n     */\n    handles: {\n      synchronous: true,\n      asynchronous: true,\n      crossDomain: false,\n      fileUpload: false,\n      programmaticFormFields: false,\n      responseTypes: [\n        \"text/plain\",\n        \"text/javascript\",\n        \"application/json\",\n        \"application/xml\",\n        \"text/html\",\n      ],\n    },\n\n    /**\n     * Return a new XMLHttpRequest object suitable for the client browser.\n     *\n     * @return {Object} native XMLHttpRequest object\n     * @signature function()\n     *\n     * @ignore(XMLHttpRequest)\n     */\n    createRequestObject: qx.core.Environment.select(\"engine.name\", {\n      default() {\n        return new XMLHttpRequest();\n      },\n\n      // IE7's native XmlHttp does not care about trusted zones. To make this\n      // work in the localhost scenario, you can use the following registry setting:\n      //\n      // [HKEY_CURRENT_USER\\Software\\Microsoft\\Internet Explorer\\Main\\\n      // FeatureControl\\FEATURE_XMLHTTP_RESPECT_ZONEPOLICY]\n      // \"Iexplore.exe\"=dword:00000001\n      //\n      // Generally it seems that the ActiveXObject is more stable. jQuery\n      // seems to use it always. We prefer the ActiveXObject for the moment, but allow\n      // fallback to XMLHTTP if ActiveX is disabled.\n      mshtml() {\n        if (window.ActiveXObject && qx.xml.Document.XMLHTTP) {\n          return new window.ActiveXObject(qx.xml.Document.XMLHTTP);\n        }\n\n        if (window.XMLHttpRequest) {\n          return new window.XMLHttpRequest();\n        }\n      },\n    }),\n\n    /**\n     * Whether the transport type is supported by the client.\n     *\n     * @return {Boolean} supported or not\n     */\n    isSupported() {\n      return !!this.createRequestObject();\n    },\n\n    /** The timeout for Xhr requests */\n    __timeout: 0,\n\n    /**\n     * Sets the timeout for requests\n     * @deprecated {6.0} This method is deprecated from the start because synchronous I/O itself is deprecated\n     *  in the W3C spec {@link https://xhr.spec.whatwg.org/} and timeouts are indicative of synchronous I/O and/or\n     *  other server issues.  However, this API is still supported by many browsers and this API is useful\n     *  for code which has not made the transition to asynchronous I/O\n     */\n    setTimeout(timeout) {\n      this.__timeout = timeout;\n    },\n\n    /**\n     * Returns the timeout for requests\n     */\n    getTimeout() {\n      return this.__timeout;\n    },\n  },\n\n  /*\n   *****************************************************************************\n      PROPERTIES\n   *****************************************************************************\n   */\n\n  properties: {\n    /**\n     * If true and the responseType property is set to \"application/json\", getResponseContent() will\n     * return a Javascript map containing the JSON contents, i. e. the result qx.lang.Json.parse().\n     * If false, the raw string data will be returned and the parsing must be done manually.\n     * This is useful for special JSON dialects / extensions which are not supported by\n     * qx.lang.Json.\n     */\n    parseJson: {\n      check: \"Boolean\",\n      init: true,\n    },\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      CORE METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    __localRequest: false,\n    __lastReadyState: 0,\n    __request: null,\n\n    /**\n     * Returns the native request object\n     *\n     * @return {Object} native XmlHTTPRequest object\n     */\n    getRequest() {\n      if (this.__request === null) {\n        this.__request = qx.io.remote.transport.XmlHttp.createRequestObject();\n        this.__request.onreadystatechange = qx.lang.Function.bind(\n          this._onreadystatechange,\n          this\n        );\n      }\n\n      return this.__request;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      USER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Implementation for sending the request\n     *\n     */\n    send() {\n      this.__lastReadyState = 0;\n\n      var vRequest = this.getRequest();\n      var vMethod = this.getMethod();\n      var vAsynchronous = this.getAsynchronous();\n      var vUrl = this.getUrl();\n\n      // --------------------------------------\n      //   Local handling\n      // --------------------------------------\n      var vLocalRequest =\n        window.location.protocol === \"file:\" && !/^http(s){0,1}\\:/.test(vUrl);\n      this.__localRequest = vLocalRequest;\n\n      // --------------------------------------\n      //   Adding URL parameters\n      // --------------------------------------\n      var vParameters = this.getParameters(false);\n      var vParametersList = [];\n\n      for (var vId in vParameters) {\n        var value = vParameters[vId];\n\n        if (value instanceof Array) {\n          for (var i = 0; i < value.length; i++) {\n            vParametersList.push(\n              encodeURIComponent(vId) + \"=\" + encodeURIComponent(value[i])\n            );\n          }\n        } else {\n          vParametersList.push(\n            encodeURIComponent(vId) + \"=\" + encodeURIComponent(value)\n          );\n        }\n      }\n\n      if (vParametersList.length > 0) {\n        vUrl +=\n          (vUrl.indexOf(\"?\") >= 0 ? \"&\" : \"?\") + vParametersList.join(\"&\");\n      }\n\n      // --------------------------------------------------------\n      //   Adding data parameters (if no data is already present)\n      // --------------------------------------------------------\n      if (this.getData() === null) {\n        var vParameters = this.getParameters(true);\n        var vParametersList = [];\n\n        for (var vId in vParameters) {\n          var value = vParameters[vId];\n\n          if (value instanceof Array) {\n            for (var i = 0; i < value.length; i++) {\n              vParametersList.push(\n                encodeURIComponent(vId) + \"=\" + encodeURIComponent(value[i])\n              );\n            }\n          } else {\n            vParametersList.push(\n              encodeURIComponent(vId) + \"=\" + encodeURIComponent(value)\n            );\n          }\n        }\n\n        if (vParametersList.length > 0) {\n          this.setData(vParametersList.join(\"&\"));\n        }\n      }\n\n      var encode64 = function (input) {\n        var keyStr =\n          \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        var output = \"\";\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n\n        do {\n          chr1 = input.charCodeAt(i++);\n          chr2 = input.charCodeAt(i++);\n          chr3 = input.charCodeAt(i++);\n\n          enc1 = chr1 >> 2;\n          enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n          enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n          enc4 = chr3 & 63;\n\n          if (isNaN(chr2)) {\n            enc3 = enc4 = 64;\n          } else if (isNaN(chr3)) {\n            enc4 = 64;\n          }\n\n          output +=\n            keyStr.charAt(enc1) +\n            keyStr.charAt(enc2) +\n            keyStr.charAt(enc3) +\n            keyStr.charAt(enc4);\n        } while (i < input.length);\n\n        return output;\n      };\n\n      // --------------------------------------\n      //   Opening connection\n      // --------------------------------------\n      try {\n        if (this.getUsername()) {\n          if (this.getUseBasicHttpAuth()) {\n            vRequest.open(vMethod, vUrl, vAsynchronous);\n            vRequest.setRequestHeader(\n              \"Authorization\",\n              \"Basic \" + encode64(this.getUsername() + \":\" + this.getPassword())\n            );\n          } else {\n            vRequest.open(\n              vMethod,\n              vUrl,\n              vAsynchronous,\n              this.getUsername(),\n              this.getPassword()\n            );\n          }\n        } else {\n          vRequest.open(vMethod, vUrl, vAsynchronous);\n        }\n      } catch (ex) {\n        this.error(\"Failed with exception: \" + ex);\n        this.failed();\n        return;\n      }\n\n      // Apply timeout\n      var timeout = qx.io.remote.transport.XmlHttp.getTimeout();\n      if (timeout && vAsynchronous) {\n        vRequest.timeout = timeout;\n      }\n\n      // --------------------------------------\n      //   Applying request header\n      // --------------------------------------\n      // Removed adding a referer header as this is not allowed anymore on most\n      // browsers\n      // See issue https://github.com/qooxdoo/qooxdoo/issues/9298\n\n      var vRequestHeaders = this.getRequestHeaders();\n\n      for (var vId in vRequestHeaders) {\n        vRequest.setRequestHeader(vId, vRequestHeaders[vId]);\n      }\n\n      // --------------------------------------\n      //   Sending data\n      // --------------------------------------\n      try {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (qx.core.Environment.get(\"qx.debug.io.remote.data\")) {\n            this.debug(\"Request: \" + this.getData());\n          }\n        }\n\n        // IE9 executes the call synchronous when the call is to file protocol\n        // See [BUG #4762] for details\n        if (\n          vLocalRequest &&\n          vAsynchronous &&\n          qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n          qx.core.Environment.get(\"engine.version\") == 9 &&\n          qx.core.Environment.get(\"browser.documentmode\") == 9\n        ) {\n          qx.event.Timer.once(\n            function () {\n              vRequest.send(this.getData());\n            },\n            this,\n            0\n          );\n        } else {\n          vRequest.send(this.getData());\n        }\n      } catch (ex) {\n        if (vLocalRequest) {\n          this.failedLocally();\n        } else {\n          this.error(\n            \"Failed to send data to URL '\" + vUrl + \"': \" + ex,\n            \"send\"\n          );\n          this.failed();\n        }\n\n        return;\n      }\n\n      // --------------------------------------\n      //   Readystate for sync requests\n      // --------------------------------------\n      if (!vAsynchronous) {\n        this._onreadystatechange();\n      }\n    },\n\n    /**\n     * Force the transport into the failed state (\"failed\").\n     *\n     * This method should be used only if the requests URI was local\n     * access. I.e. it started with \"file://\".\n     *\n     */\n    failedLocally() {\n      if (this.getState() === \"failed\") {\n        return;\n      }\n\n      // should only occur on \"file://\" access\n      this.warn(\"Could not load from file: \" + this.getUrl());\n\n      this.failed();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Listener method for change of the \"readystate\".\n     * Sets the internal state and informs the transport layer.\n     *\n     * @signature function(e)\n     * @param e {Event} native event\n     */\n    _onreadystatechange: qx.event.GlobalError.observeMethod(function (e) {\n      // Ignoring already stopped requests\n      switch (this.getState()) {\n        case \"completed\":\n        case \"aborted\":\n        case \"failed\":\n        case \"timeout\":\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.core.Environment.get(\"qx.debug.io.remote\")) {\n              this.warn(\"Ignore Ready State Change\");\n            }\n          }\n\n          return;\n      }\n\n      // Checking status code\n      var vReadyState = this.getReadyState();\n\n      if (vReadyState == 4) {\n        // The status code is only meaningful when we reach ready state 4.\n        // (Important for Opera since it goes through other states before\n        // reaching 4, and the status code is not valid before 4 is reached.)\n        if (\n          !qx.io.remote.Exchange.wasSuccessful(\n            this.getStatusCode(),\n            vReadyState,\n            this.__localRequest\n          )\n        ) {\n          // Fix for bug #2272\n          // The IE doesn't set the state to 'sending' even though the send method\n          // is called. This only occurs if the server (which is called) goes\n          // down or a network failure occurs.\n          if (this.getState() === \"configured\") {\n            this.setState(\"sending\");\n          }\n\n          this.failed();\n          return;\n        }\n      }\n\n      // Sometimes the xhr call skips the send state\n      if (vReadyState == 3 && this.__lastReadyState == 1) {\n        this.setState(\n          qx.io.remote.Exchange._nativeMap[++this.__lastReadyState]\n        );\n      }\n\n      // Updating internal state\n      while (this.__lastReadyState < vReadyState) {\n        this.setState(\n          qx.io.remote.Exchange._nativeMap[++this.__lastReadyState]\n        );\n      }\n    }),\n\n    /*\n    ---------------------------------------------------------------------------\n      READY STATE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Get the ready state of this transports request.\n     *\n     * For qx.io.remote.transport.XmlHttp, ready state is a number between 1 to 4.\n     *\n     * @return {Integer} ready state number\n     */\n    getReadyState() {\n      var vReadyState = null;\n\n      try {\n        vReadyState = this.getRequest().readyState;\n      } catch (ex) {}\n\n      return vReadyState;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      REQUEST HEADER SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Set a request header to this transports request.\n     *\n     * @param vLabel {String} Request header name\n     * @param vValue {var} Request header value\n     */\n    setRequestHeader(vLabel, vValue) {\n      this.getRequestHeaders()[vLabel] = vValue;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      RESPONSE HEADER SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns a specific header provided by the server upon sending a request,\n     * with header name determined by the argument headerName.\n     *\n     * Only available at readyState 3 and 4 universally and in readyState 2\n     * in Gecko.\n     *\n     * Please note: Some servers/proxies (such as Selenium RC) will capitalize\n     * response header names. This is in accordance with RFC 2616[1], which\n     * states that HTTP 1.1 header names are case-insensitive, so your\n     * application should be case-agnostic when dealing with response headers.\n     *\n     * [1]<a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec4.html#sec4.2\">RFC 2616: HTTP Message Headers</a>\n     *\n     * @param vLabel {String} Response header name\n     * @return {String|null} Response header value\n     */\n    getResponseHeader(vLabel) {\n      var vResponseHeader = null;\n\n      try {\n        vResponseHeader = this.getRequest().getResponseHeader(vLabel) || null;\n      } catch (ex) {}\n\n      return vResponseHeader;\n    },\n\n    /**\n     * Returns all response headers of the request.\n     *\n     * @return {var} response headers\n     */\n    getStringResponseHeaders() {\n      var vSourceHeader = null;\n\n      try {\n        var vLoadHeader = this.getRequest().getAllResponseHeaders();\n\n        if (vLoadHeader) {\n          vSourceHeader = vLoadHeader;\n        }\n      } catch (ex) {}\n\n      return vSourceHeader;\n    },\n\n    /**\n     * Provides a hash of all response headers.\n     *\n     * @return {var} hash of all response headers\n     */\n    getResponseHeaders() {\n      var vSourceHeader = this.getStringResponseHeaders();\n      var vHeader = {};\n\n      if (vSourceHeader) {\n        var vValues = vSourceHeader.split(/[\\r\\n]+/g);\n\n        for (var i = 0, l = vValues.length; i < l; i++) {\n          var vPair = vValues[i].match(/^([^:]+)\\s*:\\s*(.+)$/i);\n\n          if (vPair) {\n            vHeader[vPair[1]] = vPair[2];\n          }\n        }\n      }\n\n      return vHeader;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STATUS SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the current status code of the request if available or -1 if not.\n     *\n     * @return {Integer} current status code\n     */\n    getStatusCode() {\n      var vStatusCode = -1;\n\n      try {\n        vStatusCode = this.getRequest().status;\n\n        // [BUG #4476]\n        // IE sometimes tells 1223 when it should be 204\n        if (vStatusCode === 1223) {\n          vStatusCode = 204;\n        }\n      } catch (ex) {}\n\n      return vStatusCode;\n    },\n\n    /**\n     * Provides the status text for the current request if available and null\n     * otherwise.\n     *\n     * @return {String} current status code text\n     */\n    getStatusText() {\n      var vStatusText = \"\";\n\n      try {\n        vStatusText = this.getRequest().statusText;\n      } catch (ex) {}\n\n      return vStatusText;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      RESPONSE DATA SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Provides the response text from the request when available and null\n     * otherwise.  By passing true as the \"partial\" parameter of this method,\n     * incomplete data will be made available to the caller.\n     *\n     * @return {String} Content of the response as string\n     */\n    getResponseText() {\n      var vResponseText = null;\n\n      try {\n        vResponseText = this.getRequest().responseText;\n      } catch (ex) {\n        vResponseText = null;\n      }\n\n      return vResponseText;\n    },\n\n    /**\n     * Provides the XML provided by the response if any and null otherwise.  By\n     * passing true as the \"partial\" parameter of this method, incomplete data will\n     * be made available to the caller.\n     *\n     * @return {String} Content of the response as XML\n     * @throws {Error} If an error within the response occurs.\n     */\n    getResponseXml() {\n      var vResponseXML = null;\n\n      var vStatus = this.getStatusCode();\n      var vReadyState = this.getReadyState();\n\n      if (\n        qx.io.remote.Exchange.wasSuccessful(\n          vStatus,\n          vReadyState,\n          this.__localRequest\n        )\n      ) {\n        try {\n          vResponseXML = this.getRequest().responseXML;\n        } catch (ex) {}\n      }\n\n      // Typical behaviour on file:// on mshtml\n      // Could we check this with something like: /^file\\:/.test(path); ?\n      // No browser check here, because it doesn't seem to break other browsers\n      //    * test for this.req.responseXML's objecthood added by *\n      //    * FRM, 20050816                                       *\n      if (typeof vResponseXML == \"object\" && vResponseXML != null) {\n        if (!vResponseXML.documentElement) {\n          // Clear xml file declaration, this breaks non unicode files (like ones with Umlauts)\n          var s = String(this.getRequest().responseText).replace(\n            /<\\?xml[^\\?]*\\?>/,\n            \"\"\n          );\n          vResponseXML.loadXML(s);\n        }\n\n        // Re-check if fixed...\n        if (!vResponseXML.documentElement) {\n          throw new Error(\"Missing Document Element!\");\n        }\n\n        if (vResponseXML.documentElement.tagName == \"parseerror\") {\n          throw new Error(\"XML-File is not well-formed!\");\n        }\n      } else {\n        throw new Error(\n          \"Response was not a valid xml document [\" +\n            this.getRequest().responseText +\n            \"]\"\n        );\n      }\n\n      return vResponseXML;\n    },\n\n    /**\n     * Returns the length of the content as fetched thus far\n     *\n     * @return {Integer} Length of the response text.\n     */\n    getFetchedLength() {\n      var vText = this.getResponseText();\n      return typeof vText == \"string\" ? vText.length : 0;\n    },\n\n    /**\n     * Returns the content of the response\n     *\n     * @return {null | String} Response content if available\n     */\n    getResponseContent() {\n      var state = this.getState();\n      if (state !== \"completed\" && state != \"failed\") {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (qx.core.Environment.get(\"qx.debug.io.remote\")) {\n            this.warn(\"Transfer not complete or failed, ignoring content!\");\n          }\n        }\n\n        return null;\n      }\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.io.remote\")) {\n          this.debug(\n            \"Returning content for responseType: \" + this.getResponseType()\n          );\n        }\n      }\n\n      var vText = this.getResponseText();\n\n      if (state == \"failed\") {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (qx.core.Environment.get(\"qx.debug.io.remote.data\")) {\n            this.debug(\"Failed: \" + vText);\n          }\n        }\n\n        return vText;\n      }\n\n      switch (this.getResponseType()) {\n        case \"text/plain\":\n        case \"text/html\":\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\")) {\n              this.debug(\"Response: \" + vText);\n            }\n          }\n\n          return vText;\n\n        case \"application/json\":\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\")) {\n              this.debug(\"Response: \" + vText);\n            }\n          }\n\n          try {\n            if (vText && vText.length > 0) {\n              var ret;\n              if (this.getParseJson()) {\n                ret = qx.lang.Json.parse(vText);\n                ret = ret === 0 ? 0 : ret || null;\n              } else {\n                ret = vText;\n              }\n              return ret;\n            } else {\n              return null;\n            }\n          } catch (ex) {\n            this.error(\"Could not execute json: [\" + vText + \"]\", ex);\n            return \"<pre>Could not execute json: \\n\" + vText + \"\\n</pre>\";\n          }\n\n        case \"text/javascript\":\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\")) {\n              this.debug(\"Response: \" + vText);\n            }\n          }\n\n          try {\n            if (vText && vText.length > 0) {\n              var ret = window.eval(vText);\n              return ret === 0 ? 0 : ret || null;\n            } else {\n              return null;\n            }\n          } catch (ex) {\n            this.error(\"Could not execute javascript: [\" + vText + \"]\", ex);\n            return null;\n          }\n\n        case \"application/xml\":\n          vText = this.getResponseXml();\n\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.core.Environment.get(\"qx.debug.io.remote.data\")) {\n              this.debug(\"Response: \" + vText);\n            }\n          }\n\n          return vText === 0 ? 0 : vText || null;\n\n        default:\n          this.warn(\n            \"No valid responseType specified (\" + this.getResponseType() + \")!\"\n          );\n          return null;\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Apply method for the \"state\" property.\n     * Fires an event for each state value to inform the listeners.\n     *\n     * @param value {var} Current value\n     * @param old {var} Previous value\n     */\n    _applyState(value, old) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.io.remote\")) {\n          this.debug(\"State: \" + value);\n        }\n      }\n\n      switch (value) {\n        case \"created\":\n          this.fireEvent(\"created\");\n          break;\n\n        case \"configured\":\n          this.fireEvent(\"configured\");\n          break;\n\n        case \"sending\":\n          this.fireEvent(\"sending\");\n          break;\n\n        case \"receiving\":\n          this.fireEvent(\"receiving\");\n          break;\n\n        case \"completed\":\n          this.fireEvent(\"completed\");\n          break;\n\n        case \"failed\":\n          this.fireEvent(\"failed\");\n          break;\n\n        case \"aborted\":\n          this.getRequest().abort();\n          this.fireEvent(\"aborted\");\n          break;\n\n        case \"timeout\":\n          this.getRequest().abort();\n          this.fireEvent(\"timeout\");\n          break;\n      }\n    },\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer() {\n    // basic registration to qx.io.remote.Exchange\n    // the real availability check (activeX stuff and so on) follows at the first real request\n    qx.io.remote.Exchange.registerType(\n      qx.io.remote.transport.XmlHttp,\n      \"qx.io.remote.transport.XmlHttp\"\n    );\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    var vRequest = this.getRequest();\n\n    if (vRequest) {\n      // Clean up state change handler\n      // Note that for IE the proper way to do this is to set it to a\n      // dummy function, not null (Google on \"onreadystatechange dummy IE unhook\")\n      // http://groups.google.com/group/Google-Web-Toolkit-Contributors/browse_thread/thread/7e7ee67c191a6324\n      vRequest.onreadystatechange = function () {};\n      // Aborting\n      switch (vRequest.readyState) {\n        case 1:\n        case 2:\n        case 3:\n          vRequest.abort();\n      }\n    }\n\n    this.__request = null;\n  },\n});\n"
  ]
}