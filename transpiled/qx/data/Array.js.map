{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/data/Array.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "include",
    "data",
    "marshal",
    "MEventBubbling",
    "implement",
    "IListData",
    "construct",
    "param",
    "undefined",
    "__array",
    "arguments",
    "length",
    "i",
    "push",
    "Array",
    "lang",
    "clone",
    "dispose",
    "Error",
    "_applyEventPropagation",
    "__updateLength",
    "properties",
    "autoDisposeItems",
    "check",
    "init",
    "events",
    "change",
    "changeLength",
    "members",
    "concat",
    "array",
    "toNativeArray",
    "newArray",
    "join",
    "connector",
    "pop",
    "item",
    "_registerEventChaining",
    "fireDataEvent",
    "value",
    "name",
    "old",
    "start",
    "end",
    "type",
    "removed",
    "added",
    "varargs",
    "reverse",
    "oldArray",
    "__updateEventPropagation",
    "shift",
    "slice",
    "from",
    "to",
    "splice",
    "startIndex",
    "amount",
    "oldLength",
    "returnArray",
    "apply",
    "addedItems",
    "fromArguments",
    "Math",
    "max",
    "endIndex",
    "eventData",
    "replace",
    "src",
    "equals",
    "args",
    "getLength",
    "forEach",
    "sort",
    "func",
    "unshift",
    "toArray",
    "getItem",
    "index",
    "setItem",
    "oldItem",
    "indexOf",
    "lastIndexOf",
    "toString",
    "contains",
    "includes",
    "copy",
    "insertAt",
    "insertBefore",
    "before",
    "insertAfter",
    "after",
    "removeAt",
    "removeAll",
    "items",
    "append",
    "prototype",
    "exclude",
    "remove",
    "sum",
    "result",
    "min",
    "callback",
    "context",
    "element",
    "call",
    "filter",
    "self",
    "map",
    "find",
    "some",
    "every",
    "reduce",
    "initValue",
    "reduceRight",
    "destruct",
    "isAutoDisposeItems"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The data array is a special array used in the data binding context of\n * qooxdoo. It does not extend the native array of JavaScript but its a wrapper\n * for it. All the native methods are included in the implementation and it\n * also fires events if the content or the length of the array changes in\n * any way. Also the <code>.length</code> property is available on the array.\n *\n * This class does not need to be disposed, unless you set the autoDisposeItems\n * property to true and want the items to be disposed.\n */\nqx.Class.define(\"qx.data.Array\", {\n  extend: qx.core.Object,\n  include: qx.data.marshal.MEventBubbling,\n  implement: [qx.data.IListData],\n\n  /**\n   * Creates a new instance of an array.\n   *\n   * @param param {var} The parameter can be some types.<br/>\n   *   Without a parameter a new blank array will be created.<br/>\n   *   If there is more than one parameter is given, the parameter will be\n   *   added directly to the new array.<br/>\n   *   If the parameter is a number, a new Array with the given length will be\n   *   created.<br/>\n   *   If the parameter is a JavaScript array, a new array containing the given\n   *   elements will be created.\n   */\n  construct(param) {\n    super();\n    // if no argument is given\n    if (param == undefined) {\n      this.__array = [];\n\n      // check for elements (create the array)\n    } else if (arguments.length > 1) {\n      // create an empty array and go through every argument and push it\n      this.__array = [];\n      for (var i = 0; i < arguments.length; i++) {\n        this.__array.push(arguments[i]);\n      }\n\n      // check for a number (length)\n    } else if (typeof param == \"number\") {\n      this.__array = new Array(param);\n      // check for an array itself\n    } else if (param instanceof Array) {\n      this.__array = qx.lang.Array.clone(param);\n\n      // error case\n    } else {\n      this.__array = [];\n      this.dispose();\n      throw new Error(\"Type of the parameter not supported!\");\n    }\n\n    // propagate changes\n    for (var i = 0; i < this.__array.length; i++) {\n      this._applyEventPropagation(this.__array[i], null, i);\n    }\n\n    // update the length at startup\n    this.__updateLength();\n\n    // work against the console printout of the array\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      this[0] = \"Please use 'toArray()' to see the content.\";\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Flag to set the dispose behavior of the array. If the property is set to\n     * <code>true</code>, the array will dispose its content on dispose, too.\n     */\n    autoDisposeItems: {\n      check: \"Boolean\",\n      init: false\n    }\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /**\n     * The change event which will be fired if there is a change in the array.\n     * The data contains a map with five key value pairs:\n     * <li>start: The start index of the change.</li>\n     * <li>end: The end index of the change.</li>\n     * <li>type: The type of the change as a String. This can be 'add',\n     * 'remove', 'order' or 'add/remove'</li>\n     * <li>added: The items which has been added (as a JavaScript array)</li>\n     * <li>removed: The items which has been removed (as a JavaScript array)</li>\n     */\n    change: \"qx.event.type.Data\",\n\n    /**\n     * The changeLength event will be fired every time the length of the\n     * array changes.\n     */\n    changeLength: \"qx.event.type.Data\"\n  },\n\n  members: {\n    // private members\n    __array: null,\n\n    /**\n     * Concatenates the current and the given array into a new one.\n     *\n     * @param array {qx.data.Array|Array} The javaScript array which should be concatenated\n     *   to the current array.\n     *\n     * @return {qx.data.Array} A new array containing the values of both former\n     *   arrays.\n     */\n    concat(array) {\n      array = qx.lang.Array.toNativeArray(array);\n      if (array) {\n        var newArray = this.__array.concat(array);\n      } else {\n        var newArray = this.__array.concat();\n      }\n      return new qx.data.Array(newArray);\n    },\n\n    /**\n     * Returns the array as a string using the given connector string to\n     * connect the values.\n     *\n     * @param connector {String} the string which should be used to past in\n     *  between of the array values.\n     *\n     * @return {String} The array as a string.\n     */\n    join(connector) {\n      return this.__array.join(connector);\n    },\n\n    /**\n     * Removes and returns the last element of the array.\n     * An change event will be fired.\n     *\n     * @return {var} The last element of the array.\n     */\n    pop() {\n      var item = this.__array.pop();\n      this.__updateLength();\n      // remove the possible added event listener\n      this._registerEventChaining(null, item, this.length - 1);\n      // fire change bubble event\n      this.fireDataEvent(\"changeBubble\", {\n        value: [],\n        name: this.length + \"\",\n        old: [item],\n        item: this\n      });\n\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: this.length - 1,\n          end: this.length - 1,\n          type: \"remove\",\n          removed: [item],\n          added: []\n        },\n\n        null\n      );\n\n      return item;\n    },\n\n    /**\n     * Adds an element at the end of the array.\n     *\n     * @param varargs {var} Multiple elements. Every element will be added to\n     *   the end of the array. An change event will be fired.\n     *\n     * @return {Number} The new length of the array.\n     */\n    push(varargs) {\n      for (var i = 0; i < arguments.length; i++) {\n        this.__array.push(arguments[i]);\n        this.__updateLength();\n        // apply to every pushed item an event listener for the bubbling\n        this._registerEventChaining(arguments[i], null, this.length - 1);\n\n        // fire change bubbles event\n        this.fireDataEvent(\"changeBubble\", {\n          value: [arguments[i]],\n          name: this.length - 1 + \"\",\n          old: [],\n          item: this\n        });\n\n        // fire change event\n        this.fireDataEvent(\n          \"change\",\n          {\n            start: this.length - 1,\n            end: this.length - 1,\n            type: \"add\",\n            added: [arguments[i]],\n            removed: []\n          },\n\n          null\n        );\n      }\n      return this.length;\n    },\n\n    /**\n     * Reverses the order of the array. An change event will be fired.\n     */\n    reverse() {\n      // ignore on empty arrays\n      if (this.length == 0) {\n        return;\n      }\n\n      var oldArray = this.__array.concat();\n      this.__array.reverse();\n\n      this.__updateEventPropagation(0, this.length);\n\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: 0,\n          end: this.length - 1,\n          type: \"order\",\n          added: [],\n          removed: []\n        },\n\n        null\n      );\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: this.__array,\n        name: \"0-\" + (this.__array.length - 1),\n        old: oldArray,\n        item: this\n      });\n    },\n\n    /**\n     * Removes the first element of the array and returns it. An change event\n     * will be fired.\n     *\n     * @return {var} the former first element.\n     */\n    shift() {\n      // ignore on empty arrays\n      if (this.length == 0) {\n        return;\n      }\n\n      var item = this.__array.shift();\n      this.__updateLength();\n      // remove the possible added event listener\n      this._registerEventChaining(null, item, this.length - 1);\n      // as every item has changed its position, we need to update the event bubbling\n      this.__updateEventPropagation(0, this.length);\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: [],\n        name: \"0\",\n        old: [item],\n        item: this\n      });\n\n      // fire change event\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: 0,\n          end: this.length - 1,\n          type: \"remove\",\n          removed: [item],\n          added: []\n        },\n\n        null\n      );\n\n      return item;\n    },\n\n    /**\n     * Returns a new array based on the range specified by the parameters.\n     *\n     * @param from {Number} The start index.\n     * @param to {Number?null} The zero-based end index. <code>slice</code> extracts\n     *   up to but not including <code>to</code>. If omitted, slice extracts to the\n     *   end of the array.\n     *\n     * @return {qx.data.Array} A new array containing the given range of values.\n     */\n    slice(from, to) {\n      return new qx.data.Array(this.__array.slice(from, to));\n    },\n\n    /**\n     * Method to remove and add new elements to the array. A change event\n     * will be fired for every removal or addition unless the array is\n     * identical before and after splicing.\n     *\n     * @param startIndex {Integer} The index where the splice should start\n     * @param amount {Integer} Defines number of elements which will be removed\n     *   at the given position.\n     * @param varargs {var} All following parameters will be added at the given\n     *   position to the array.\n     * @return {qx.data.Array} An data array containing the removed elements.\n     *   Keep in to dispose this one, even if you don't use it!\n     */\n    splice(startIndex, amount, varargs) {\n      // store the old length\n      var oldLength = this.__array.length;\n\n      // invoke the slice on the array\n      var returnArray = this.__array.splice.apply(this.__array, arguments);\n\n      // fire a change event for the length\n      if (this.__array.length != oldLength) {\n        this.__updateLength();\n      } else if (amount == arguments.length - 2) {\n        // if we added as much items as we removed\n        var addedItems = qx.lang.Array.fromArguments(arguments, 2);\n        // check if the array content equals the content before the operation\n        for (var i = 0; i < addedItems.length; i++) {\n          if (addedItems[i] !== returnArray[i]) {\n            break;\n          }\n          // if all added and removed items are equal\n          if (i == addedItems.length - 1) {\n            // prevent all events and return a new array\n            return new qx.data.Array();\n          }\n        }\n      }\n      // fire an event for the change\n      var removed = amount > 0;\n      var added = arguments.length > 2;\n      if (removed || added) {\n        var addedItems = qx.lang.Array.fromArguments(arguments, 2);\n        let type;\n        let end;\n\n        if (returnArray.length == 0) {\n          type = \"add\";\n          end = startIndex + addedItems.length;\n        } else if (addedItems.length == 0) {\n          type = \"remove\";\n          end = this.length - 1;\n        } else {\n          type = \"add/remove\";\n          end =\n            startIndex + Math.max(addedItems.length, returnArray.length) - 1;\n        }\n\n        this.fireDataEvent(\n          \"change\",\n          {\n            start: startIndex,\n            end: end,\n            type: type,\n            added: addedItems,\n            removed: returnArray\n          },\n\n          null\n        );\n      }\n\n      // remove the listeners first [BUG #7132]\n      for (var i = 0; i < returnArray.length; i++) {\n        this._registerEventChaining(null, returnArray[i], i);\n      }\n\n      // add listeners\n      for (var i = 2; i < arguments.length; i++) {\n        this._registerEventChaining(arguments[i], null, startIndex + (i - 2));\n      }\n      // apply event chaining for every item moved\n      this.__updateEventPropagation(\n        startIndex + (arguments.length - 2) - amount,\n        this.length\n      );\n\n      // fire the changeBubble event\n      if (removed || added) {\n        var value = [];\n        for (var i = 2; i < arguments.length; i++) {\n          value[i - 2] = arguments[i];\n        }\n        var endIndex = startIndex + Math.max(arguments.length - 3, amount - 1);\n        var name =\n          startIndex == endIndex ? endIndex : startIndex + \"-\" + endIndex;\n\n        var eventData = {\n          value: value,\n          name: name + \"\",\n          old: returnArray,\n          item: this\n        };\n\n        this.fireDataEvent(\"changeBubble\", eventData);\n      }\n      return new qx.data.Array(returnArray);\n    },\n\n    /**\n     * Efficiently replaces the array with the contents of src; this will suppress the\n     * change event if the array contents are the same, and will make sure that only\n     * one change event is fired\n     *\n     * @param src {qx.data.Array|Array} the new value to set the array to\n     */\n    replace(src) {\n      src = qx.lang.Array.toNativeArray(src);\n      if (this.equals(src)) {\n        return;\n      }\n      var args = [0, this.getLength()];\n      src.forEach(function (item) {\n        args.push(item);\n      });\n      this.splice.apply(this, args);\n    },\n\n    /**\n     * Sorts the array. If a function is given, this will be used to\n     * compare the items. <code>changeBubble</code> event will only be fired,\n     * if sorting result differs from original array.\n     *\n     * @param func {Function} A compare function comparing two parameters and\n     *   should return a number.\n     */\n    sort(func) {\n      // ignore if the array is empty\n      if (this.length == 0) {\n        return;\n      }\n      var oldArray = this.__array.concat();\n\n      this.__array.sort.apply(this.__array, arguments);\n\n      // prevent changeBubble event if nothing has been changed\n      if (qx.lang.Array.equals(this.__array, oldArray) === true) {\n        return;\n      }\n\n      this.__updateEventPropagation(0, this.length);\n\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: 0,\n          end: this.length - 1,\n          type: \"order\",\n          added: [],\n          removed: []\n        },\n\n        null\n      );\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: this.__array,\n        name: \"0-\" + (this.length - 1),\n        old: oldArray,\n        item: this\n      });\n    },\n\n    /**\n     * Adds the given items to the beginning of the array. For every element,\n     * a change event will be fired.\n     *\n     * @param varargs {var} As many elements as you want to add to the beginning.\n     * @return {Integer} The new length of the array\n     */\n    unshift(varargs) {\n      for (var i = arguments.length - 1; i >= 0; i--) {\n        this.__array.unshift(arguments[i]);\n        this.__updateLength();\n        // apply to every item an event listener for the bubbling\n        this.__updateEventPropagation(0, this.length);\n\n        // fire change bubbles event\n        this.fireDataEvent(\"changeBubble\", {\n          value: [this.__array[0]],\n          name: \"0\",\n          old: [this.__array[1]],\n          item: this\n        });\n\n        // fire change event\n        this.fireDataEvent(\n          \"change\",\n          {\n            start: 0,\n            end: this.length - 1,\n            type: \"add\",\n            added: [arguments[i]],\n            removed: []\n          },\n\n          null\n        );\n      }\n      return this.length;\n    },\n\n    /**\n     * Returns the list data as native array. Beware of the fact that the\n     * internal representation will be returned and any manipulation of that\n     * can cause a misbehavior of the array. This method should only be used for\n     * debugging purposes.\n     *\n     * @return {Array} The native array.\n     */\n    toArray() {\n      return this.__array;\n    },\n\n    /**\n     * Replacement function for the getting of the array value.\n     * array[0] should be array.getItem(0).\n     *\n     * @param index {Number} The index requested of the array element.\n     *\n     * @return {var} The element at the given index.\n     */\n    getItem(index) {\n      return this.__array[index];\n    },\n\n    /**\n     * Replacement function for the setting of an array value.\n     * array[0] = \"a\" should be array.setItem(0, \"a\").\n     * A change event will be fired if the value changes. Setting the same\n     * value again will not lead to a change event.\n     *\n     * @param index {Number} The index of the array element.\n     * @param item {var} The new item to set.\n     */\n    setItem(index, item) {\n      var oldItem = this.__array[index];\n      // ignore settings of already set items [BUG #4106]\n      if (oldItem === item) {\n        return;\n      }\n      this.__array[index] = item;\n      // set an event listener for the bubbling\n      this._registerEventChaining(item, oldItem, index);\n      // only update the length if its changed\n      if (this.length != this.__array.length) {\n        this.__updateLength();\n      }\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: [item],\n        name: index + \"\",\n        old: [oldItem],\n        item: this\n      });\n\n      // fire change event\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: index,\n          end: index,\n          type: \"add/remove\",\n          added: [item],\n          removed: [oldItem]\n        },\n\n        null\n      );\n    },\n\n    /**\n     * This method returns the current length stored under .length on each\n     * array.\n     *\n     * @return {Number} The current length of the array.\n     */\n    getLength() {\n      return this.length;\n    },\n\n    /**\n     * Returns the index of the item in the array. If the item is not in the\n     * array, -1 will be returned.\n     *\n     * @param item {var} The item of which the index should be returned.\n     * @return {Number} The Index of the given item.\n     */\n    indexOf(item) {\n      return this.__array.indexOf(item);\n    },\n\n    /**\n     * Returns the last index of the item in the array. If the item is not in the\n     * array, -1 will be returned.\n     *\n     * @param item {var} The item of which the index should be returned.\n     * @return {Number} The Index of the given item.\n     */\n    lastIndexOf(item) {\n      return this.__array.lastIndexOf(item);\n    },\n\n    /**\n     * Returns the toString of the original Array\n     * @return {String} The array as a string.\n     */\n    toString() {\n      if (this.__array != null) {\n        return this.__array.toString();\n      }\n      return \"\";\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n       IMPLEMENTATION OF THE QX.LANG.ARRAY METHODS\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Check if the given item is in the current array.\n     *\n     * @deprecated {6.0} Please use the include method instead\n     *\n     * @param item {var} The item which is possibly in the array.\n     * @return {Boolean} true, if the array contains the given item.\n     */\n    contains(item) {\n      return this.includes(item);\n    },\n\n    /**\n     * Check if the given item is in the current array.\n     *\n     * @param item {var} The item which is possibly in the array.\n     * @return {Boolean} true, if the array contains the given item.\n     */\n    includes(item) {\n      return this.__array.indexOf(item) !== -1;\n    },\n\n    /**\n     * Return a copy of the given arr\n     *\n     * @return {qx.data.Array} copy of this\n     */\n    copy() {\n      return this.concat();\n    },\n\n    /**\n     * Insert an element at a given position.\n     *\n     * @param index {Integer} Position where to insert the item.\n     * @param item {var} The element to insert.\n     */\n    insertAt(index, item) {\n      this.splice(index, 0, item).dispose();\n    },\n\n    /**\n     * Insert an item into the array before a given item.\n     *\n     * @param before {var} Insert item before this object.\n     * @param item {var} The item to be inserted.\n     */\n    insertBefore(before, item) {\n      var index = this.indexOf(before);\n\n      if (index == -1) {\n        this.push(item);\n      } else {\n        this.splice(index, 0, item).dispose();\n      }\n    },\n\n    /**\n     * Insert an element into the array after a given item.\n     *\n     * @param after {var} Insert item after this object.\n     * @param item {var} Object to be inserted.\n     */\n    insertAfter(after, item) {\n      var index = this.indexOf(after);\n\n      if (index == -1 || index == this.length - 1) {\n        this.push(item);\n      } else {\n        this.splice(index + 1, 0, item).dispose();\n      }\n    },\n\n    /**\n     * Remove an element from the array at the given index.\n     *\n     * @param index {Integer} Index of the item to be removed.\n     * @return {var} The removed item.\n     */\n    removeAt(index) {\n      var returnArray = this.splice(index, 1);\n      var item = returnArray.getItem(0);\n      returnArray.dispose();\n      return item;\n    },\n\n    /**\n     * Remove all elements from the array.\n     *\n     * @return {Array} A native array containing the removed elements.\n     */\n    removeAll() {\n      // remove all possible added event listeners\n      for (var i = 0; i < this.__array.length; i++) {\n        this._registerEventChaining(null, this.__array[i], i);\n      }\n\n      // ignore if array is empty\n      if (this.getLength() == 0) {\n        return [];\n      }\n\n      // store the old data\n      var oldLength = this.getLength();\n      var items = this.__array.concat();\n\n      // change the length\n      this.__array.length = 0;\n      this.__updateLength();\n\n      // fire change bubbles event\n      this.fireDataEvent(\"changeBubble\", {\n        value: [],\n        name: \"0-\" + (oldLength - 1),\n        old: items,\n        item: this\n      });\n\n      // fire the change event\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: 0,\n          end: oldLength - 1,\n          type: \"remove\",\n          removed: items,\n          added: []\n        },\n\n        null\n      );\n\n      return items;\n    },\n\n    /**\n     * Append the items of the given array.\n     *\n     * @param array {Array|qx.data.IListData} The items of this array will\n     * be appended.\n     * @throws {Error} if the argument is not an array.\n     */\n    append(array) {\n      // qooxdoo array support\n      array = qx.lang.Array.toNativeArray(array);\n\n      // this check is important because opera throws an uncatchable error if\n      // apply is called without an array as argument.\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        qx.core.Assert.assertArray(array, \"The parameter must be an array.\");\n      }\n\n      var oldLength = this.__array.length;\n      Array.prototype.push.apply(this.__array, array);\n\n      // add a listener to the new items\n      for (var i = 0; i < array.length; i++) {\n        this._registerEventChaining(array[i], null, oldLength + i);\n      }\n\n      var oldLength = this.length;\n      this.__updateLength();\n\n      // fire change bubbles\n      var name =\n        oldLength == this.length - 1\n          ? oldLength\n          : oldLength + \"-\" + (this.length - 1);\n      this.fireDataEvent(\"changeBubble\", {\n        value: array,\n        name: name + \"\",\n        old: [],\n        item: this\n      });\n\n      // fire the change event\n      this.fireDataEvent(\n        \"change\",\n        {\n          start: oldLength,\n          end: this.length - 1,\n          type: \"add\",\n          added: array,\n          removed: []\n        },\n\n        null\n      );\n    },\n\n    /**\n     * Removes all elements which are listed in the array.\n     *\n     * @param array {Array} the elements of this array will be excluded from this one\n     */\n    exclude(array) {\n      array = qx.lang.Array.toNativeArray(array);\n      array.forEach(function (item) {\n        this.remove(item);\n      }, this);\n    },\n\n    /**\n     * Remove the given item.\n     *\n     * @param item {var} Item to be removed from the array.\n     * @return {var} The removed item.\n     */\n    remove(item) {\n      var index = this.indexOf(item);\n\n      if (index != -1) {\n        this.splice(index, 1).dispose();\n        return item;\n      }\n    },\n\n    /**\n     * Check whether the given array has the same content as this.\n     * Checks only the equality of the arrays' content.\n     *\n     * @param array {qx.data.Array} The array to check.\n     * @return {Boolean} Whether the two arrays are equal.\n     */\n    equals(array) {\n      if (this.length !== array.length) {\n        return false;\n      }\n\n      array = qx.lang.Array.toNativeArray(array);\n      for (var i = 0; i < this.length; i++) {\n        if (this.getItem(i) !== array[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns the sum of all values in the array. Supports\n     * numeric values only.\n     *\n     * @return {Number} The sum of all values.\n     */\n    sum() {\n      var result = 0;\n      for (var i = 0; i < this.length; i++) {\n        result += this.getItem(i);\n      }\n\n      return result;\n    },\n\n    /**\n     * Returns the highest value in the given array.\n     * Supports numeric values only.\n     *\n     * @return {Number | null} The highest of all values or undefined if the\n     *   array is empty.\n     */\n    max() {\n      var result = this.getItem(0);\n\n      for (var i = 1; i < this.length; i++) {\n        if (this.getItem(i) > result) {\n          result = this.getItem(i);\n        }\n      }\n\n      return result === undefined ? null : result;\n    },\n\n    /**\n     * Returns the lowest value in the array. Supports\n     * numeric values only.\n     *\n     * @return {Number | null} The lowest of all values or undefined\n     *   if the array is empty.\n     */\n    min() {\n      var result = this.getItem(0);\n\n      for (var i = 1; i < this.length; i++) {\n        if (this.getItem(i) < result) {\n          result = this.getItem(i);\n        }\n      }\n\n      return result === undefined ? null : result;\n    },\n\n    /**\n     * Invokes the given function for every item in the array.\n     *\n     * @param callback {Function} The function which will be call for every\n     *   item in the array. It will be invoked with three parameters:\n     *   the item, the index and the array itself.\n     * @param context {var?} The context in which the callback will be invoked.\n     */\n    forEach(callback, context) {\n      this.__array.forEach((element, index) =>\n        callback.call(context, element, index, this)\n      );\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      Additional JS1.6 methods\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Creates a new array with all elements that pass the test implemented by\n     * the provided function. It returns a new data array instance so make sure\n     * to think about disposing it.\n     * @param callback {Function} The test function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {qx.data.Array} A new array instance containing only the items\n     *  which passed the test.\n     */\n    filter(callback, self) {\n      return new qx.data.Array(this.__array.filter(callback, self));\n    },\n\n    /**\n     * Creates a new array with the results of calling a provided function on every\n     * element in this array. It returns a new data array instance so make sure\n     * to think about disposing it.\n     * @param callback {Function} The mapping function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {qx.data.Array} A new array instance containing the new created items.\n     */\n    map(callback, self) {\n      return new qx.data.Array(this.__array.map(callback, self));\n    },\n\n    /**\n     * Finds the first matching element in the array which passes the test implemented by the\n     * provided function.\n     * @param callback {Function} The test function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {var | undefined} The found item.\n     */\n    find(callback, self) {\n      return this.__array.find(callback, self);\n    },\n\n    /**\n     * Tests whether any element in the array passes the test implemented by the\n     * provided function.\n     * @param callback {Function} The test function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {Boolean} <code>true</code>, if any element passed the test function.\n     */\n    some(callback, self) {\n      return this.__array.some(callback, self);\n    },\n\n    /**\n     * Tests whether every element in the array passes the test implemented by the\n     * provided function.\n     * @param callback {Function} The test function, which will be executed for every\n     *   item in the array. The function will have three arguments.\n     *   <li><code>item</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param self {var?undefined} The context of the callback.\n     * @return {Boolean} <code>true</code>, if every element passed the test function.\n     */\n    every(callback, self) {\n      return this.__array.every(callback, self);\n    },\n\n    /**\n     * Apply a function against an accumulator and each value of the array\n     * (from left-to-right) as to reduce it to a single value.\n     * @param callback {Function} The accumulator function, which will be\n     *   executed for every item in the array. The function will have four arguments.\n     *   <li><code>previousItem</code>: the previous item</li>\n     *   <li><code>currentItem</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param initValue {var?undefined} Object to use as the first argument to the first\n     *   call of the callback.\n     * @return {var} The returned value of the last accumulator call.\n     */\n    reduce(callback, initValue) {\n      return this.__array.reduce(callback, initValue);\n    },\n\n    /**\n     * Apply a function against an accumulator and each value of the array\n     * (from right-to-left) as to reduce it to a single value.\n     * @param callback {Function} The accumulator function, which will be\n     *   executed for every item in the array. The function will have four arguments.\n     *   <li><code>previousItem</code>: the previous item</li>\n     *   <li><code>currentItem</code>: the current item in the array</li>\n     *   <li><code>index</code>: the index of the current item</li>\n     *   <li><code>array</code>: The native array instance, NOT the data array instance.</li>\n     * @param initValue {var?undefined} Object to use as the first argument to the first\n     *   call of the callback.\n     * @return {var} The returned value of the last accumulator call.\n     */\n    reduceRight(callback, initValue) {\n      return this.__array.reduceRight(callback, initValue);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL HELPERS\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Internal function which updates the length property of the array.\n     * Every time the length will be updated, a {@link #changeLength} data\n     * event will be fired.\n     */\n    __updateLength() {\n      var oldLength = this.length;\n      this.length = this.__array.length;\n      this.fireDataEvent(\"changeLength\", this.length, oldLength);\n    },\n\n    /**\n     * Helper to update the event propagation for a range of items.\n     * @param from {Number} Start index.\n     * @param to {Number} End index.\n     */\n    __updateEventPropagation(from, to) {\n      for (var i = from; i < to; i++) {\n        this._registerEventChaining(this.__array[i], this.__array[i], i);\n      }\n    }\n  },\n\n  /*\n   *****************************************************************************\n      DESTRUCTOR\n   *****************************************************************************\n  */\n\n  destruct() {\n    for (var i = 0; i < this.__array.length; i++) {\n      var item = this.__array[i];\n      this._applyEventPropagation(null, item, i);\n\n      // dispose the items on auto dispose\n      if (this.isAutoDisposeItems() && item && item instanceof qx.core.Object) {\n        item.dispose();\n      }\n    }\n\n    this.__array = null;\n  }\n});\n"
  ]
}