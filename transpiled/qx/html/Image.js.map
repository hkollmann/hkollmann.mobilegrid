{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/html/Image.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "html",
    "Element",
    "construct",
    "tagName",
    "styles",
    "attributes",
    "registerProperty",
    "_setSourceProperty",
    "writer",
    "key",
    "property",
    "value",
    "JSON",
    "stringify",
    "_setScaleProperty",
    "members",
    "__paddingTop",
    "__paddingLeft",
    "tagNameHint",
    "setPadding",
    "paddingLeft",
    "paddingTop",
    "getNodeName",
    "setStyle",
    "elem",
    "getDomElement",
    "getAllStyles",
    "getStyle",
    "backgroundRepeat",
    "source",
    "_getProperty",
    "scale",
    "repeat",
    "bom",
    "element",
    "Decoration",
    "update",
    "_removeProperty",
    "direct",
    "_setProperty",
    "_createDomElement",
    "core",
    "Environment",
    "get",
    "setNodeName",
    "getTagName",
    "_copyData",
    "fromMarkup",
    "propertiesFromDom",
    "setSource",
    "getSource",
    "resetSource",
    "setScale",
    "getScale",
    "Image"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * This is a simple image class using the low level image features of\n * qooxdoo and wraps it for the qx.html layer.\n */\nqx.Class.define(\"qx.html.Image\", {\n  extend: qx.html.Element,\n\n  /**\n   * Creates a new Image\n   *\n   * @see constructor for {Element}\n   */\n  construct(tagName, styles, attributes) {\n    super(tagName, styles, attributes);\n    this.registerProperty(\n      \"source\",\n      null,\n      this._setSourceProperty,\n      (writer, key, property) =>\n        property.value && writer(\"src=\" + JSON.stringify(property.value))\n    );\n\n    this.registerProperty(\"scale\", null, this._setScaleProperty);\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __paddingTop: null,\n    __paddingLeft: null,\n\n    // this member variable is only used for IE browsers to be able\n    // to the tag name which will be set. This is heavily connected to the runtime\n    // change of decorators and the use of external (=unmanaged images). It is\n    // necessary to be able to determine what tag will be used e.g. before the\n    // ImageLoader has finished its loading of an external image.\n    // See Bug #3894 for more details\n    tagNameHint: null,\n\n    /**\n     * Maps padding to background-position if the widget is rendered as a\n     * background image\n     * @param paddingLeft {Integer} left padding value\n     * @param paddingTop {Integer} top padding value\n     */\n    setPadding(paddingLeft, paddingTop) {\n      this.__paddingLeft = paddingLeft;\n      this.__paddingTop = paddingTop;\n\n      if (this.getNodeName() == \"div\") {\n        this.setStyle(\n          \"backgroundPosition\",\n          paddingLeft + \"px \" + paddingTop + \"px\"\n        );\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      ELEMENT API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Implementation of setter for the \"source\" property\n     *\n     * @param value {String?} value to set\n     */\n    _setSourceProperty(value) {\n      var elem = this.getDomElement();\n\n      // To prevent any wrong background-position or -repeat it is necessary\n      // to reset those styles whenever a background-image is updated.\n      // This is only necessary if any backgroundImage was set already.\n      // See bug #3376 for details\n      var styles = this.getAllStyles() || {};\n\n      if (this.getNodeName() == \"div\" && this.getStyle(\"backgroundImage\")) {\n        styles.backgroundRepeat = null;\n      }\n\n      var source = this._getProperty(\"source\");\n      var scale = this._getProperty(\"scale\");\n      var repeat = scale ? \"scale\" : \"no-repeat\";\n\n      // Source can be null in certain circumstances.\n      // See bug #3701 for details.\n      if (source != null) {\n        // Normalize \"\" to null\n        source = source || null;\n\n        styles.paddingTop = this.__paddingTop;\n        styles.paddingLeft = this.__paddingLeft;\n\n        qx.bom.element.Decoration.update(elem, source, repeat, styles);\n      }\n    },\n\n    _setScaleProperty(value) {\n      // Nothing\n    },\n\n    // overridden\n    _removeProperty(key, direct) {\n      if (key == \"source\") {\n        // Work-around check for null in #_applyProperty, introduced with fix\n        // for bug #3701. Use empty string that is later normalized to null.\n        // This fixes bug #4524.\n        this._setProperty(key, \"\", direct);\n      } else {\n        this._setProperty(key, null, direct);\n      }\n    },\n\n    // overridden\n    _createDomElement() {\n      var scale = this._getProperty(\"scale\");\n      var repeat = scale ? \"scale\" : \"no-repeat\";\n\n      if (qx.core.Environment.get(\"engine.name\") == \"mshtml\") {\n        var source = this._getProperty(\"source\");\n\n        if (this.tagNameHint != null) {\n          this.setNodeName(this.tagNameHint);\n        } else {\n          this.setNodeName(\n            qx.bom.element.Decoration.getTagName(repeat, source)\n          );\n        }\n      } else {\n        this.setNodeName(qx.bom.element.Decoration.getTagName(repeat));\n      }\n\n      return super._createDomElement();\n    },\n\n    // overridden\n    // be sure that style attributes are merged and not overwritten\n    _copyData(fromMarkup, propertiesFromDom) {\n      return super._copyData(true, propertiesFromDom);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      IMAGE API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Configures the image source\n     *\n     * @param value {Boolean} Whether the HTML mode should be used.\n     * @return {qx.html.Label} This instance for for chaining support.\n     */\n    setSource(value) {\n      this._setProperty(\"source\", value);\n      return this;\n    },\n\n    /**\n     * Returns the image source.\n     *\n     * @return {String} Current image source.\n     */\n    getSource() {\n      return this._getProperty(\"source\");\n    },\n\n    /**\n     * Resets the current source to null which means that no image\n     * is shown anymore.\n     * @return {qx.html.Image} The current instance for chaining\n     */\n    resetSource() {\n      // webkit browser do not allow to remove the required \"src\" attribute.\n      // If removing the attribute the old image is still visible.\n      if (qx.core.Environment.get(\"engine.name\") == \"webkit\") {\n        this._setProperty(\"source\", \"qx/static/blank.gif\");\n      } else {\n        this._removeProperty(\"source\", true);\n      }\n      return this;\n    },\n\n    /**\n     * Whether the image should be scaled or not.\n     *\n     * @param value {Boolean} Scale the image\n     * @return {qx.html.Label} This instance for for chaining support.\n     */\n    setScale(value) {\n      this._setProperty(\"scale\", value);\n      return this;\n    },\n\n    /**\n     * Returns whether the image is scaled or not.\n     *\n     * @return {Boolean} Whether the image is scaled\n     */\n    getScale() {\n      return this._getProperty(\"scale\");\n    }\n  }\n});\n"
  ]
}