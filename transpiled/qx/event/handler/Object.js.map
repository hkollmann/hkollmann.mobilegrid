{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/event/handler/Object.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_LAST",
    "SUPPORTED_TYPES",
    "TARGET_CHECK",
    "TARGET_OBJECT",
    "IGNORE_CAN_HANDLE",
    "members",
    "canHandleEvent",
    "target",
    "type",
    "supportsEvent",
    "constructor",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "defer",
    "addHandler",
    "handler"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,yBAAhB,EAA2C;AACzCC,IAAAA,MAAM,EAAEN,EAAE,CAACO,IAAH,CAAQC,MADyB;AAEzCC,IAAAA,SAAS,EAAET,EAAE,CAACU,KAAH,CAASC,aAFqB;;AAIzC;AACF;AACA;AACA;AACA;AAEEC,IAAAA,OAAO,EAAE;AACP;AACAC,MAAAA,QAAQ,EAAEb,EAAE,CAACU,KAAH,CAASI,YAAT,CAAsBC,aAFzB;;AAIP;AACAC,MAAAA,eAAe,EAAE,IALV;;AAOP;AACAC,MAAAA,YAAY,EAAEjB,EAAE,CAACU,KAAH,CAASC,aAAT,CAAuBO,aAR9B;;AAUP;AACAC,MAAAA,iBAAiB,EAAE;AAXZ,KAVgC;;AAwBzC;AACF;AACA;AACA;AACA;AAEEC,IAAAA,OAAO,EAAE;AACP;AACJ;AACA;AACA;AACA;AAEI;AACAC,MAAAA,cARO,0BAQQC,MARR,EAQgBC,IARhB,EAQsB;AAC3B,eAAOvB,EAAE,CAACI,KAAH,CAASoB,aAAT,CAAuBF,MAAM,CAACG,WAA9B,EAA2CF,IAA3C,CAAP;AACD,OAVM;AAYP;AACAG,MAAAA,aAbO,yBAaOJ,MAbP,EAaeC,IAbf,EAaqBI,OAbrB,EAa8B,CACnC;AACD,OAfM;AAiBP;AACAC,MAAAA,eAlBO,2BAkBSN,MAlBT,EAkBiBC,IAlBjB,EAkBuBI,OAlBvB,EAkBgC,CACrC;AACD;AApBM,KA9BgC;;AAqDzC;AACF;AACA;AACA;AACA;AAEEE,IAAAA,KA3DyC,iBA2DnCjB,OA3DmC,EA2D1B;AACbZ,MAAAA,EAAE,CAACU,KAAH,CAASI,YAAT,CAAsBgB,UAAtB,CAAiClB,OAAjC;AACD;AA7DwC,GAA3C;AAtBAZ,EAAAA,EAAE,CAACU,KAAH,CAASqB,OAAT,CAAiBvB,MAAjB,CAAwBL,aAAxB,GAAwCA,aAAxC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * This class provides qooxdoo object event support.\n */\nqx.Class.define(\"qx.event.handler.Object\", {\n  extend: qx.core.Object,\n  implement: qx.event.IEventHandler,\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY: qx.event.Registration.PRIORITY_LAST,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES: null,\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK: qx.event.IEventHandler.TARGET_OBJECT,\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE: false\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent(target, type) {\n      return qx.Class.supportsEvent(target.constructor, type);\n    },\n\n    // interface implementation\n    registerEvent(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n    // interface implementation\n    unregisterEvent(target, type, capture) {\n      // Nothing needs to be done here\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ]
}