{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/event/handler/Window.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "IDisposable",
    "construct",
    "manager",
    "_manager",
    "_window",
    "getWindow",
    "_initWindowObserver",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "error",
    "load",
    "beforeunload",
    "unload",
    "resize",
    "scroll",
    "beforeshutdown",
    "TARGET_CHECK",
    "TARGET_WINDOW",
    "IGNORE_CAN_HANDLE",
    "members",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "_onNativeWrapper",
    "lang",
    "Function",
    "listener",
    "_onNative",
    "types",
    "handler",
    "Window",
    "key",
    "bom",
    "Event",
    "addNativeListener",
    "_stopWindowObserver",
    "removeNativeListener",
    "callback",
    "Environment",
    "select",
    "GlobalError",
    "observeMethod",
    "__onNativeHandler",
    "apply",
    "arguments",
    "e",
    "isDisposed",
    "win",
    "doc",
    "document",
    "ex",
    "html",
    "documentElement",
    "getTarget",
    "createEvent",
    "Native",
    "dispatchEvent",
    "result",
    "getReturnValue",
    "returnValue",
    "destruct",
    "defer",
    "addHandler"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * This handler provides event for the window object.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @require(qx.event.type.Native)\n * @require(qx.event.Pool)\n */\nqx.Class.define(\"qx.event.handler.Window\", {\n  extend: qx.core.Object,\n  implement: [qx.event.IEventHandler, qx.core.IDisposable],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Create a new instance\n   *\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct(manager) {\n    super();\n\n    // Define shorthands\n    this._manager = manager;\n    this._window = manager.getWindow();\n\n    // Initialize observers\n    this._initWindowObserver();\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES: {\n      error: 1,\n      load: 1,\n      beforeunload: 1,\n      unload: 1,\n      resize: 1,\n      scroll: 1,\n      beforeshutdown: 1\n    },\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK: qx.event.IEventHandler.TARGET_WINDOW,\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE: true\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent(target, type) {},\n\n    // interface implementation\n    registerEvent(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n    // interface implementation\n    unregisterEvent(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      OBSERVER INIT/STOP\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Initializes the native window event listeners.\n     *\n     */\n    _initWindowObserver() {\n      this._onNativeWrapper = qx.lang.Function.listener(this._onNative, this);\n      var types = qx.event.handler.Window.SUPPORTED_TYPES;\n\n      for (var key in types) {\n        qx.bom.Event.addNativeListener(\n          this._window,\n          key,\n          this._onNativeWrapper\n        );\n      }\n    },\n\n    /**\n     * Disconnect the native window event listeners.\n     *\n     */\n    _stopWindowObserver() {\n      var types = qx.event.handler.Window.SUPPORTED_TYPES;\n\n      for (var key in types) {\n        qx.bom.Event.removeNativeListener(\n          this._window,\n          key,\n          this._onNativeWrapper\n        );\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      NATIVE EVENT SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * When qx.globalErrorHandling is enabled the callback will observed\n     */\n    _onNative() {\n      var callback = qx.core.Environment.select(\"qx.globalErrorHandling\", {\n        true: qx.event.GlobalError.observeMethod(this.__onNativeHandler),\n        false: this.__onNativeHandler\n      });\n\n      callback.apply(this, arguments);\n    },\n\n    /**\n     * Native listener for all supported events.\n     *\n     * @param e {Event} Native event\n     * @return {String|undefined}\n     */\n    __onNativeHandler(e) {\n      if (this.isDisposed()) {\n        return;\n      }\n\n      var win = this._window;\n      var doc;\n      try {\n        doc = win.document;\n      } catch (ex) {\n        // IE7 sometimes dispatches \"unload\" events on protected windows\n        // Ignore these events\n        return;\n      }\n\n      var html = doc.documentElement;\n\n      // At least Safari 3.1 and Opera 9.2.x have a bubbling scroll event\n      // which needs to be ignored here.\n      //\n      // In recent WebKit nightlies scroll events do no longer bubble\n      //\n      // Internet Explorer does not have a target in resize events.\n      var target = qx.bom.Event.getTarget(e);\n      if (\n        target == null ||\n        target === win ||\n        target === doc ||\n        target === html\n      ) {\n        var event = qx.event.Registration.createEvent(\n          e.type,\n          qx.event.type.Native,\n          [e, win]\n        );\n\n        qx.event.Registration.dispatchEvent(win, event);\n\n        var result = event.getReturnValue();\n        if (result != null) {\n          e.returnValue = result;\n          return result;\n        }\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this._stopWindowObserver();\n    this._manager = this._window = null;\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ]
}