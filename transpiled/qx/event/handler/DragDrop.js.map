{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/event/handler/DragDrop.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "IDisposable",
    "construct",
    "manager",
    "__manager",
    "__root",
    "getWindow",
    "document",
    "documentElement",
    "addListener",
    "_onLongtap",
    "_onPointerdown",
    "Registration",
    "window",
    "_onWindowBlur",
    "__rebuildStructures",
    "statics",
    "PRIORITY",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "dragstart",
    "dragend",
    "dragover",
    "dragleave",
    "drop",
    "drag",
    "dragchange",
    "droprequest",
    "IGNORE_CAN_HANDLE",
    "ALLOWED_BUTTONS",
    "MIN_DRAG_DISTANCE",
    "properties",
    "cursor",
    "check",
    "nullable",
    "init",
    "members",
    "__dropTarget",
    "__dragTarget",
    "__types",
    "__actions",
    "__keys",
    "__cache",
    "__currentType",
    "__currentAction",
    "__sessionActive",
    "__validDrop",
    "__validAction",
    "__dragTargetWidget",
    "__startConfig",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "capture",
    "unregisterEvent",
    "addType",
    "addAction",
    "action",
    "supportsType",
    "supportsAction",
    "setDropAllowed",
    "isAllowed",
    "__detectAction",
    "getData",
    "Error",
    "__fireEvent",
    "getDataAsync",
    "tracker",
    "self",
    "Utils",
    "then",
    "getCurrentAction",
    "getCurrentActionAsync",
    "Environment",
    "select",
    "Promise",
    "resolve",
    "classname",
    "getDragTarget",
    "addData",
    "data",
    "getCurrentType",
    "isSessionActive",
    "reject",
    "actions",
    "keys",
    "current",
    "Shift",
    "Control",
    "alias",
    "Alt",
    "copy",
    "move",
    "old",
    "validAction",
    "relatedTarget",
    "cancelable",
    "original",
    "async",
    "dragEvent",
    "createEvent",
    "Drag",
    "setRelatedTarget",
    "result",
    "dispatchEvent",
    "undefined",
    "getDefaultPrevented",
    "__findDraggable",
    "elem",
    "nodeType",
    "getAttribute",
    "parentNode",
    "__findDroppable",
    "clearSession",
    "removeListener",
    "_onPointermove",
    "_onPointerup",
    "_onKeyDown",
    "_onKeyUp",
    "_onKeyPress",
    "_onRoll",
    "removeState",
    "e",
    "getPointerType",
    "_start",
    "isButtonOk",
    "handler",
    "DragDrop",
    "indexOf",
    "getButton",
    "isPrimary",
    "getTarget",
    "draggable",
    "widgetOriginalTarget",
    "ui",
    "Widget",
    "getWidgetByElement",
    "isAnonymous",
    "getLayoutParent",
    "addState",
    "getOriginalTarget",
    "left",
    "getDocumentLeft",
    "top",
    "getDocumentTop",
    "delta",
    "_getDelta",
    "distance",
    "Math",
    "abs",
    "x",
    "y",
    "el",
    "getNativeEvent",
    "view",
    "elementFromPoint",
    "getCursor",
    "DragDropCursor",
    "getInstance",
    "cursorEl",
    "getContentElement",
    "getDomElement",
    "contains",
    "display",
    "bom",
    "element",
    "Style",
    "get",
    "set",
    "droppable",
    "dropLeaveTarget",
    "innerTracker",
    "validDrop",
    "isCtrlPressed",
    "isShiftPressed",
    "isAltPressed",
    "deltaX",
    "deltaY",
    "stopPropagation",
    "stop",
    "iden",
    "getKeyIdentifier",
    "destruct",
    "defer",
    "addHandler"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Event handler, which supports drag events on DOM elements.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @require(qx.event.handler.Gesture)\n * @require(qx.event.handler.Keyboard)\n * @require(qx.event.handler.Capture)\n */\nqx.Class.define(\"qx.event.handler.DragDrop\", {\n  extend: qx.core.Object,\n  implement: [qx.event.IEventHandler, qx.core.IDisposable],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct(manager) {\n    super();\n\n    // Define shorthands\n    this.__manager = manager;\n    this.__root = manager.getWindow().document.documentElement;\n\n    // Initialize listener\n    this.__manager.addListener(this.__root, \"longtap\", this._onLongtap, this);\n    this.__manager.addListener(\n      this.__root,\n      \"pointerdown\",\n      this._onPointerdown,\n      this,\n      true\n    );\n\n    qx.event.Registration.addListener(window, \"blur\", this._onWindowBlur, this);\n\n    // Initialize data structures\n    this.__rebuildStructures();\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES: {\n      dragstart: 1,\n      dragend: 1,\n      dragover: 1,\n      dragleave: 1,\n      drop: 1,\n      drag: 1,\n      dragchange: 1,\n      droprequest: 1\n    },\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE: true,\n\n    /**\n     * Array of strings holding the names of the allowed mouse buttons\n     * for Drag & Drop. The default is \"left\" but could be extended with\n     * \"middle\" or \"right\"\n     */\n    ALLOWED_BUTTONS: [\"left\"],\n\n    /**\n     * The distance needed to change the mouse position before a drag session start.\n     */\n    MIN_DRAG_DISTANCE: 5\n  },\n\n  properties: {\n    /**\n     * Widget instance of the drag & drop cursor. If non is given, the default\n     * {@link qx.ui.core.DragDropCursor} will be used.\n     */\n    cursor: {\n      check: \"qx.ui.core.Widget\",\n      nullable: true,\n      init: null\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __manager: null,\n    __root: null,\n    __dropTarget: null,\n    __dragTarget: null,\n    __types: null,\n    __actions: null,\n    __keys: null,\n    __cache: null,\n    __currentType: null,\n    __currentAction: null,\n    __sessionActive: false,\n    __validDrop: false,\n    __validAction: false,\n    __dragTargetWidget: null,\n    __startConfig: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent(target, type) {},\n\n    // interface implementation\n    registerEvent(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n    // interface implementation\n    unregisterEvent(target, type, capture) {\n      // Nothing needs to be done here\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Registers a supported type\n     *\n     * @param type {String} The type to add\n     */\n    addType(type) {\n      this.__types[type] = true;\n    },\n\n    /**\n     * Registers a supported action. One of <code>move</code>,\n     * <code>copy</code> or <code>alias</code>.\n     *\n     * @param action {String} The action to add\n     */\n    addAction(action) {\n      this.__actions[action] = true;\n    },\n\n    /**\n     * Whether the current drag target supports the given type\n     *\n     * @param type {String} Any type\n     * @return {Boolean} Whether the type is supported\n     */\n    supportsType(type) {\n      return !!this.__types[type];\n    },\n\n    /**\n     * Whether the current drag target supports the given action\n     *\n     * @param type {String} Any type\n     * @return {Boolean} Whether the action is supported\n     */\n    supportsAction(type) {\n      return !!this.__actions[type];\n    },\n\n    /**\n     * Whether the current drop target allows the current drag target.\n     *\n     * @param isAllowed {Boolean} False if a drop should be disallowed\n     */\n    setDropAllowed(isAllowed) {\n      this.__validDrop = isAllowed;\n      this.__detectAction();\n    },\n\n    /**\n     * Returns the data of the given type during the <code>drop</code> event\n     * on the drop target. This method fires a <code>droprequest</code> at\n     * the drag target which should be answered by calls to {@link #addData}.\n     *\n     * Note that this is a synchronous method and if any of the drag and drop\n     * events handlers are implemented using Promises, this may fail; @see\n     * `getDataAsync`.\n     *\n     * @param type {String} Any supported type\n     * @return {var} The result data in a promise\n     */\n    getData(type) {\n      if (!this.__validDrop || !this.__dropTarget) {\n        throw new Error(\n          \"This method must not be used outside the drop event listener!\"\n        );\n      }\n\n      if (!this.__types[type]) {\n        throw new Error(\"Unsupported data type: \" + type + \"!\");\n      }\n\n      if (!this.__cache[type]) {\n        this.__currentType = type;\n        this.__fireEvent(\n          \"droprequest\",\n          this.__dragTarget,\n          this.__dropTarget,\n          false,\n          false\n        );\n      }\n\n      if (!this.__cache[type]) {\n        throw new Error(\n          \"Please use a droprequest listener to the drag source to fill the manager with data!\"\n        );\n      }\n\n      return this.__cache[type] || null;\n    },\n\n    /**\n     * Returns the data of the given type during the <code>drop</code> event\n     * on the drop target. This method fires a <code>droprequest</code> at\n     * the drag target which should be answered by calls to {@link #addData}.\n     *\n     * @param type {String} Any supported type\n     * @return {qx.Promise} The result data in a promise\n     */\n    getDataAsync(type) {\n      if (!this.__validDrop || !this.__dropTarget) {\n        throw new Error(\n          \"This method must not be used outside the drop event listener!\"\n        );\n      }\n\n      if (!this.__types[type]) {\n        throw new Error(\"Unsupported data type: \" + type + \"!\");\n      }\n\n      var tracker = {};\n      var self = this;\n      if (!this.__cache[type]) {\n        qx.event.Utils.then(tracker, function () {\n          self.__currentType = type;\n          return self.__fireEvent(\n            \"droprequest\",\n            self.__dragTarget,\n            self.__dropTarget,\n            false\n          );\n        });\n      }\n\n      return qx.event.Utils.then(tracker, function () {\n        if (!this.__cache[type]) {\n          throw new Error(\n            \"Please use a droprequest listener to the drag source to fill the manager with data!\"\n          );\n        }\n\n        return this.__cache[type] || null;\n      });\n    },\n\n    /**\n     * Returns the currently selected action (by user keyboard modifiers)\n     *\n     * @return {String} One of <code>move</code>, <code>copy</code> or\n     *    <code>alias</code>\n     */\n    getCurrentAction() {\n      this.__detectAction();\n      return this.__currentAction;\n    },\n\n    /**\n     * Returns the currently selected action (by user keyboard modifiers)\n     *\n     * @return {qx.Promise|String} One of <code>move</code>, <code>copy</code> or\n     *    <code>alias</code>\n     */\n    getCurrentActionAsync: qx.core.Environment.select(\"qx.promise\", {\n      true() {\n        var self = this;\n\n        return qx.Promise.resolve(self.__detectAction()).then(function () {\n          return self.__currentAction;\n        });\n      },\n      false() {\n        throw new Error(\n          this.classname +\n            \".getCurrentActionAsync not supported because qx.promise==false\"\n        );\n      }\n    }),\n\n    /**\n     * Returns the widget which has been the target of the drag start.\n     * @return {qx.ui.core.Widget} The widget on which the drag started.\n     */\n    getDragTarget() {\n      return this.__dragTargetWidget;\n    },\n\n    /**\n     * Adds data of the given type to the internal storage. The data\n     * is available until the <code>dragend</code> event is fired.\n     *\n     * @param type {String} Any valid type\n     * @param data {var} Any data to store\n     */\n    addData(type, data) {\n      this.__cache[type] = data;\n    },\n\n    /**\n     * Returns the type which was requested last.\n     *\n     * @return {String} The last requested data type\n     */\n    getCurrentType() {\n      return this.__currentType;\n    },\n\n    /**\n     * Returns if a drag session is currently active\n     *\n     * @return {Boolean} active drag session\n     */\n    isSessionActive() {\n      return this.__sessionActive;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL UTILS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Rebuilds the internal data storage used during a drag&drop session\n     */\n    __rebuildStructures() {\n      this.__types = {};\n      this.__actions = {};\n      this.__keys = {};\n      this.__cache = {};\n    },\n\n    /**\n     * Detects the current action and stores it under the private\n     * field <code>__currentAction</code>. Also fires the event\n     * <code>dragchange</code> on every modification.\n     *\n     * @return {qx.Promise|null}\n     */\n    __detectAction() {\n      if (this.__dragTarget == null) {\n        if (qx.core.Environment.get(\"qx.promise\")) {\n          return qx.Promise.reject();\n        } else {\n          return null;\n        }\n      }\n\n      var actions = this.__actions;\n      var keys = this.__keys;\n      var current = null;\n\n      if (this.__validDrop) {\n        if (keys.Shift && keys.Control && actions.alias) {\n          current = \"alias\";\n        } else if (keys.Shift && keys.Alt && actions.copy) {\n          current = \"copy\";\n        } else if (keys.Shift && actions.move) {\n          current = \"move\";\n        } else if (keys.Alt && actions.alias) {\n          current = \"alias\";\n        } else if (keys.Control && actions.copy) {\n          current = \"copy\";\n        } else if (actions.move) {\n          current = \"move\";\n        } else if (actions.copy) {\n          current = \"copy\";\n        } else if (actions.alias) {\n          current = \"alias\";\n        }\n      }\n\n      var self = this;\n      var tracker = {};\n      var old = this.__currentAction;\n      if (current != old) {\n        if (this.__dropTarget) {\n          qx.event.Utils.catch(function () {\n            self.__validAction = false;\n            current = null;\n          });\n          qx.event.Utils.then(tracker, function () {\n            self.__currentAction = current;\n            return self.__fireEvent(\n              \"dragchange\",\n              self.__dropTarget,\n              self.__dragTarget,\n              true\n            );\n          });\n          qx.event.Utils.then(tracker, function (validAction) {\n            self.__validAction = validAction;\n            if (!validAction) {\n              current = null;\n            }\n          });\n        }\n      }\n\n      return qx.event.Utils.then(tracker, function () {\n        if (current != old) {\n          self.__currentAction = current;\n          return self.__fireEvent(\n            \"dragchange\",\n            self.__dragTarget,\n            self.__dropTarget,\n            false\n          );\n        }\n      });\n    },\n\n    /**\n     * Wrapper for {@link qx.event.Registration#fireEvent} for drag&drop events\n     * needed in this class.\n     *\n     * @param type {String} Event type\n     * @param target {Object} Target to fire on\n     * @param relatedTarget {Object} Related target, i.e. drag or drop target\n     *    depending on the drag event\n     * @param cancelable {Boolean} Whether the event is cancelable\n     * @param original {qx.event.type.Pointer} Original pointer event\n     * @return {qx.Promise|Boolean} <code>true</code> if the event's default behavior was\n     * not prevented\n     */\n    __fireEvent(type, target, relatedTarget, cancelable, original, async) {\n      var Registration = qx.event.Registration;\n      var dragEvent = Registration.createEvent(type, qx.event.type.Drag, [\n        cancelable,\n        original\n      ]);\n\n      if (target !== relatedTarget) {\n        dragEvent.setRelatedTarget(relatedTarget);\n      }\n\n      var result = Registration.dispatchEvent(target, dragEvent);\n      if (qx.core.Environment.get(\"qx.promise\")) {\n        if (async === undefined || async) {\n          return qx.Promise.resolve(result).then(function () {\n            return !dragEvent.getDefaultPrevented();\n          });\n        } else {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (qx.Promise.isPromise(result)) {\n              this.error(\n                'DragDrop event \"' +\n                  type +\n                  '\" returned a promise but a synchronous event was required, drag and drop may not work as expected (consider using getDataAsync)'\n              );\n            }\n          }\n          return result;\n        }\n      } else {\n        return result;\n      }\n    },\n\n    /**\n     * Finds next draggable parent of the given element. Maybe the element itself as well.\n     *\n     * Looks for the attribute <code>qxDraggable</code> with the value <code>on</code>.\n     *\n     * @param elem {Element} The element to query\n     * @return {Element} The next parent element which is draggable. May also be <code>null</code>\n     */\n    __findDraggable(elem) {\n      while (elem && elem.nodeType == 1) {\n        if (elem.getAttribute(\"qxDraggable\") == \"on\") {\n          return elem;\n        }\n\n        elem = elem.parentNode;\n      }\n\n      return null;\n    },\n\n    /**\n     * Finds next droppable parent of the given element. Maybe the element itself as well.\n     *\n     * Looks for the attribute <code>qxDroppable</code> with the value <code>on</code>.\n     *\n     * @param elem {Element} The element to query\n     * @return {Element} The next parent element which is droppable. May also be <code>null</code>\n     */\n    __findDroppable(elem) {\n      while (elem && elem.nodeType == 1) {\n        if (elem.getAttribute(\"qxDroppable\") == \"on\") {\n          return elem;\n        }\n\n        elem = elem.parentNode;\n      }\n\n      return null;\n    },\n\n    /**\n     * Cleans up a drag&drop session when <code>dragstart</code> was fired before.\n     *\n     * @return {qx.Promise?} promise, if one was created by event handlers\n     */\n    clearSession() {\n      //this.debug(\"clearSession\");\n\n      // Deregister from root events\n      this.__manager.removeListener(\n        this.__root,\n        \"pointermove\",\n        this._onPointermove,\n        this\n      );\n\n      this.__manager.removeListener(\n        this.__root,\n        \"pointerup\",\n        this._onPointerup,\n        this,\n        true\n      );\n\n      this.__manager.removeListener(\n        this.__root,\n        \"keydown\",\n        this._onKeyDown,\n        this,\n        true\n      );\n\n      this.__manager.removeListener(\n        this.__root,\n        \"keyup\",\n        this._onKeyUp,\n        this,\n        true\n      );\n\n      this.__manager.removeListener(\n        this.__root,\n        \"keypress\",\n        this._onKeyPress,\n        this,\n        true\n      );\n\n      this.__manager.removeListener(\n        this.__root,\n        \"roll\",\n        this._onRoll,\n        this,\n        true\n      );\n\n      var tracker = {};\n      var self = this;\n\n      // Fire dragend event\n      if (this.__dragTarget) {\n        qx.event.Utils.then(tracker, function () {\n          return self.__fireEvent(\n            \"dragend\",\n            self.__dragTarget,\n            self.__dropTarget,\n            false\n          );\n        });\n      }\n\n      return qx.event.Utils.then(tracker, function () {\n        // Cleanup\n        self.__validDrop = false;\n        self.__dropTarget = null;\n        if (self.__dragTargetWidget) {\n          self.__dragTargetWidget.removeState(\"drag\");\n          self.__dragTargetWidget = null;\n        }\n\n        // Clear init\n        //self.debug(\"Clearing drag target\");\n        self.__dragTarget = null;\n        self.__sessionActive = false;\n        self.__startConfig = null;\n        self.__rebuildStructures();\n      });\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Handler for long tap which takes care of starting the drag & drop session for\n     * touch interactions.\n     * @param e {qx.event.type.Tap} The longtap event.\n     */\n    _onLongtap(e) {\n      // only for touch\n      if (e.getPointerType() != \"touch\") {\n        return;\n      }\n      // prevent scrolling\n      this.__manager.addListener(this.__root, \"roll\", this._onRoll, this, true);\n      return this._start(e);\n    },\n\n    /**\n     * Helper to start the drag & drop session. It is responsible for firing the\n     * dragstart event and attaching the key listener.\n     * @param e {qx.event.type.Pointer} Either a longtap or pointermove event.\n     *\n     * @return {Boolean} Returns <code>false</code> if drag session should be\n     * canceled.\n     */\n    _start(e) {\n      // only for primary pointer and allowed buttons\n      var isButtonOk =\n        qx.event.handler.DragDrop.ALLOWED_BUTTONS.indexOf(e.getButton()) !== -1;\n      if (!e.isPrimary() || !isButtonOk) {\n        return false;\n      }\n\n      // start target can be none as the drag & drop handler might\n      // be created after the first start event\n      var target = this.__startConfig\n        ? this.__startConfig.target\n        : e.getTarget();\n      var draggable = this.__findDraggable(target);\n      if (draggable) {\n        // This is the source target\n        //this.debug(\"Setting dragtarget = \" + draggable);\n        this.__dragTarget = draggable;\n\n        var widgetOriginalTarget = qx.ui.core.Widget.getWidgetByElement(\n          this.__startConfig.original\n        );\n\n        while (widgetOriginalTarget && widgetOriginalTarget.isAnonymous()) {\n          widgetOriginalTarget = widgetOriginalTarget.getLayoutParent();\n        }\n        if (widgetOriginalTarget) {\n          this.__dragTargetWidget = widgetOriginalTarget;\n          widgetOriginalTarget.addState(\"drag\");\n        }\n\n        // fire cancelable dragstart\n        var self = this;\n        var tracker = {};\n        qx.event.Utils.catch(function () {\n          //self.debug(\"dragstart FAILED, setting __sessionActive=false\");\n          self.__sessionActive = false;\n        });\n        qx.event.Utils.then(tracker, function () {\n          return self.__fireEvent(\n            \"dragstart\",\n            self.__dragTarget,\n            self.__dropTarget,\n            true,\n            e\n          );\n        });\n        return qx.event.Utils.then(tracker, function (validAction) {\n          if (!validAction) {\n            return;\n          }\n          //self.debug(\"dragstart ok, setting __sessionActive=true\")\n          self.__manager.addListener(\n            self.__root,\n            \"keydown\",\n            self._onKeyDown,\n            self,\n            true\n          );\n\n          self.__manager.addListener(\n            self.__root,\n            \"keyup\",\n            self._onKeyUp,\n            self,\n            true\n          );\n\n          self.__manager.addListener(\n            self.__root,\n            \"keypress\",\n            self._onKeyPress,\n            self,\n            true\n          );\n\n          self.__sessionActive = true;\n        });\n      }\n    },\n\n    /**\n     * Event handler for the pointerdown event which stores the initial targets and the coordinates.\n     * @param e {qx.event.type.Pointer} The pointerdown event.\n     */\n    _onPointerdown(e) {\n      if (e.isPrimary()) {\n        this.__startConfig = {\n          target: e.getTarget(),\n          original: e.getOriginalTarget(),\n          left: e.getDocumentLeft(),\n          top: e.getDocumentTop()\n        };\n\n        this.__manager.addListener(\n          this.__root,\n          \"pointermove\",\n          this._onPointermove,\n          this\n        );\n\n        this.__manager.addListener(\n          this.__root,\n          \"pointerup\",\n          this._onPointerup,\n          this,\n          true\n        );\n      }\n    },\n\n    /**\n     * Event handler for the pointermove event which starts the drag session and\n     * is responsible for firing the drag, dragover and dragleave event.\n     * @param e {qx.event.type.Pointer} The pointermove event.\n     */\n    _onPointermove(e) {\n      // only allow drag & drop for primary pointer\n      if (!e.isPrimary()) {\n        return;\n      }\n\n      //this.debug(\"_onPointermove: start\");\n\n      var self = this;\n      var tracker = {};\n\n      qx.event.Utils.catch(function () {\n        return self.clearSession();\n      });\n\n      // start the drag session for mouse\n      if (!self.__sessionActive && e.getPointerType() == \"mouse\") {\n        var delta = self._getDelta(e);\n        // if the mouse moved a bit in any direction\n        var distance = qx.event.handler.DragDrop.MIN_DRAG_DISTANCE;\n        if (\n          delta &&\n          (Math.abs(delta.x) > distance || Math.abs(delta.y) > distance)\n        ) {\n          //self.debug(\"_onPointermove: outside min drag distance\");\n          qx.event.Utils.then(tracker, function () {\n            return self._start(e);\n          });\n        }\n      }\n\n      return qx.event.Utils.then(tracker, function () {\n        // check if the session has been activated\n        if (!self.__sessionActive) {\n          //self.debug(\"not active\");\n          return;\n        }\n\n        var tracker = {};\n        qx.event.Utils.then(tracker, function () {\n          //self.debug(\"active, firing drag\");\n          return self.__fireEvent(\n            \"drag\",\n            self.__dragTarget,\n            self.__dropTarget,\n            true,\n            e\n          );\n        });\n        qx.event.Utils.then(tracker, function (validAction) {\n          if (!validAction) {\n            this.clearSession();\n          }\n\n          //self.debug(\"drag\");\n          // find current hovered droppable\n          var el = e.getTarget();\n          if (self.__startConfig.target === el) {\n            // on touch devices the native events return wrong elements as target (its always the element where the dragging started)\n            el = e\n              .getNativeEvent()\n              .view.document.elementFromPoint(\n                e.getDocumentLeft(),\n                e.getDocumentTop()\n              );\n          }\n          var cursor = self.getCursor();\n          if (!cursor) {\n            cursor = qx.ui.core.DragDropCursor.getInstance();\n          }\n          var cursorEl = cursor.getContentElement().getDomElement();\n          if (cursorEl && (el === cursorEl || cursorEl.contains(el))) {\n            var display = qx.bom.element.Style.get(cursorEl, \"display\");\n            // get the cursor out of the way\n            qx.bom.element.Style.set(cursorEl, \"display\", \"none\");\n            el = e\n              .getNativeEvent()\n              .view.document.elementFromPoint(\n                e.getDocumentLeft(),\n                e.getDocumentTop()\n              );\n\n            qx.bom.element.Style.set(cursorEl, \"display\", display);\n          }\n\n          if (el !== cursorEl) {\n            var droppable = self.__findDroppable(el);\n\n            // new drop target detected\n            if (droppable && droppable != self.__dropTarget) {\n              var dropLeaveTarget = self.__dropTarget;\n\n              self.__validDrop = true; // initial value should be true\n              self.__dropTarget = droppable;\n\n              var innerTracker = {};\n              qx.event.Utils.catch(innerTracker, function () {\n                self.__dropTarget = null;\n                self.__validDrop = false;\n              });\n\n              // fire dragleave for previous drop target\n              if (dropLeaveTarget) {\n                qx.event.Utils.then(innerTracker, function () {\n                  return self.__fireEvent(\n                    \"dragleave\",\n                    dropLeaveTarget,\n                    self.__dragTarget,\n                    false,\n                    e\n                  );\n                });\n              }\n\n              qx.event.Utils.then(innerTracker, function () {\n                return self.__fireEvent(\n                  \"dragover\",\n                  droppable,\n                  self.__dragTarget,\n                  true,\n                  e\n                );\n              });\n\n              return qx.event.Utils.then(innerTracker, function (validDrop) {\n                self.__validDrop = validDrop;\n              });\n            }\n\n            // only previous drop target\n            else if (!droppable && self.__dropTarget) {\n              var innerTracker = {};\n              qx.event.Utils.then(innerTracker, function () {\n                return self.__fireEvent(\n                  \"dragleave\",\n                  self.__dropTarget,\n                  self.__dragTarget,\n                  false,\n                  e\n                );\n              });\n              return qx.event.Utils.then(innerTracker, function () {\n                self.__dropTarget = null;\n                self.__validDrop = false;\n\n                return self.__detectAction();\n              });\n            }\n          }\n        });\n        return qx.event.Utils.then(tracker, function () {\n          // Reevaluate current action\n          var keys = self.__keys;\n          keys.Control = e.isCtrlPressed();\n          keys.Shift = e.isShiftPressed();\n          keys.Alt = e.isAltPressed();\n          return self.__detectAction();\n        });\n      });\n    },\n\n    /**\n     * Helper function to compute the delta between current cursor position from given event\n     * and the stored coordinates at {@link #_onPointerdown}.\n     *\n     * @param e {qx.event.type.Pointer} The pointer event\n     *\n     * @return {Map} containing the deltaX as x, and deltaY as y.\n     */\n    _getDelta(e) {\n      if (!this.__startConfig) {\n        return null;\n      }\n\n      var deltaX = e.getDocumentLeft() - this.__startConfig.left;\n      var deltaY = e.getDocumentTop() - this.__startConfig.top;\n\n      return {\n        x: deltaX,\n        y: deltaY\n      };\n    },\n\n    /**\n     * Handler for the pointerup event which is responsible fore firing the drop event.\n     * @param e {qx.event.type.Pointer} The pointerup event\n     */\n    _onPointerup(e) {\n      if (!e.isPrimary()) {\n        return;\n      }\n\n      var tracker = {};\n      var self = this;\n\n      // Fire drop event in success case\n      if (this.__validDrop && this.__validAction) {\n        qx.event.Utils.then(tracker, function () {\n          return self.__fireEvent(\n            \"drop\",\n            self.__dropTarget,\n            self.__dragTarget,\n            false,\n            e\n          );\n        });\n      }\n\n      return qx.event.Utils.then(tracker, function () {\n        // Stop event\n        if (e.getTarget() == self.__dragTarget) {\n          e.stopPropagation();\n        }\n\n        // Clean up\n        return self.clearSession();\n      });\n    },\n\n    /**\n     * Roll listener to stop scrolling on touch devices.\n     * @param e {qx.event.type.Roll} The roll event.\n     */\n    _onRoll(e) {\n      e.stop();\n    },\n\n    /**\n     * Event listener for window's <code>blur</code> event\n     *\n     * @param e {qx.event.type.Event} Event object\n     */\n    _onWindowBlur(e) {\n      return this.clearSession();\n    },\n\n    /**\n     * Event listener for root's <code>keydown</code> event\n     *\n     * @param e {qx.event.type.KeySequence} Event object\n     */\n    _onKeyDown(e) {\n      var iden = e.getKeyIdentifier();\n      switch (iden) {\n        case \"Alt\":\n        case \"Control\":\n        case \"Shift\":\n          if (!this.__keys[iden]) {\n            this.__keys[iden] = true;\n            return this.__detectAction();\n          }\n      }\n    },\n\n    /**\n     * Event listener for root's <code>keyup</code> event\n     *\n     * @param e {qx.event.type.KeySequence} Event object\n     */\n    _onKeyUp(e) {\n      var iden = e.getKeyIdentifier();\n      switch (iden) {\n        case \"Alt\":\n        case \"Control\":\n        case \"Shift\":\n          if (this.__keys[iden]) {\n            this.__keys[iden] = false;\n            return this.__detectAction();\n          }\n      }\n    },\n\n    /**\n     * Event listener for root's <code>keypress</code> event\n     *\n     * @param e {qx.event.type.KeySequence} Event object\n     */\n    _onKeyPress(e) {\n      var iden = e.getKeyIdentifier();\n      switch (iden) {\n        case \"Escape\":\n          return this.clearSession();\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    qx.event.Registration.removeListener(\n      window,\n      \"blur\",\n      this._onWindowBlur,\n      this\n    );\n\n    // Clear fields\n    this.__dragTarget =\n      this.__dropTarget =\n      this.__manager =\n      this.__root =\n      this.__types =\n      this.__actions =\n      this.__keys =\n      this.__cache =\n        null;\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ]
}