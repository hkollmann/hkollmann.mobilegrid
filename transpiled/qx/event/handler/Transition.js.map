{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/event/handler/Transition.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "IDisposable",
    "construct",
    "manager",
    "__registeredEvents",
    "__onEventWrapper",
    "lang",
    "Function",
    "listener",
    "_onNative",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "transitionEnd",
    "animationEnd",
    "animationStart",
    "animationIteration",
    "TARGET_CHECK",
    "TARGET_DOMNODE",
    "IGNORE_CAN_HANDLE",
    "TYPE_TO_NATIVE",
    "NATIVE_TO_TYPE",
    "members",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "Environment",
    "select",
    "webkit",
    "capture",
    "hash",
    "ObjectRegistry",
    "toHashCode",
    "nativeType",
    "handler",
    "Transition",
    "bom",
    "Event",
    "addNativeListener",
    "gecko",
    "mshtml",
    "unregisterEvent",
    "events",
    "removeNativeListener",
    "GlobalError",
    "observeMethod",
    "nativeEvent",
    "fireEvent",
    "destruct",
    "id",
    "defer",
    "aniEnv",
    "get",
    "transEnv",
    "n2t",
    "t2n",
    "nate",
    "addHandler"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n   ======================================================================\n\n   This class contains code based on the following work:\n\n   * Unify Project\n\n     Homepage:\n       http://unify-project.org\n\n     Copyright:\n       2009-2010 Deutsche Telekom AG, Germany, http://telekom.com\n\n     License:\n       MIT: http://www.opensource.org/licenses/mit-license.php\n\n************************************************************************ */\n\n/**\n *\n * This class provides support for HTML5 transition and animation events.\n * Currently only WebKit and Firefox are supported.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.event.handler.Transition\", {\n  extend: qx.core.Object,\n  implement: [qx.event.IEventHandler, qx.core.IDisposable],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Create a new instance\n   *\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct(manager) {\n    super();\n\n    this.__registeredEvents = {};\n    this.__onEventWrapper = qx.lang.Function.listener(this._onNative, this);\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES: {\n      transitionEnd: 1,\n      animationEnd: 1,\n      animationStart: 1,\n      animationIteration: 1\n    },\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK: qx.event.IEventHandler.TARGET_DOMNODE,\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE: true,\n\n    /** Mapping of supported event types to native event types */\n    TYPE_TO_NATIVE: null,\n\n    /** Mapping of native event types to supported event types */\n    NATIVE_TO_TYPE: null\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __onEventWrapper: null,\n    __registeredEvents: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent(target, type) {\n      // Nothing needs to be done here\n    },\n\n    // interface implementation\n    /**\n     * This method is called each time an event listener, for one of the\n     * supported events, is added using {@link qx.event.Manager#addListener}.\n     *\n     * @param target {var} The target to, which the event handler should\n     *     be attached\n     * @param type {String} event type\n     * @param capture {Boolean} Whether to attach the event to the\n     *         capturing phase or the bubbling phase of the event.\n     * @signature function(target, type, capture)\n     */\n    registerEvent: qx.core.Environment.select(\"engine.name\", {\n      webkit(target, type, capture) {\n        var hash = qx.core.ObjectRegistry.toHashCode(target) + type;\n\n        var nativeType = qx.event.handler.Transition.TYPE_TO_NATIVE[type];\n\n        this.__registeredEvents[hash] = {\n          target: target,\n          type: nativeType\n        };\n\n        qx.bom.Event.addNativeListener(\n          target,\n          nativeType,\n          this.__onEventWrapper\n        );\n      },\n\n      gecko(target, type, capture) {\n        var hash = qx.core.ObjectRegistry.toHashCode(target) + type;\n\n        var nativeType = qx.event.handler.Transition.TYPE_TO_NATIVE[type];\n\n        this.__registeredEvents[hash] = {\n          target: target,\n          type: nativeType\n        };\n\n        qx.bom.Event.addNativeListener(\n          target,\n          nativeType,\n          this.__onEventWrapper\n        );\n      },\n\n      mshtml(target, type, capture) {\n        var hash = qx.core.ObjectRegistry.toHashCode(target) + type;\n\n        var nativeType = qx.event.handler.Transition.TYPE_TO_NATIVE[type];\n\n        this.__registeredEvents[hash] = {\n          target: target,\n          type: nativeType\n        };\n\n        qx.bom.Event.addNativeListener(\n          target,\n          nativeType,\n          this.__onEventWrapper\n        );\n      },\n\n      default() {}\n    }),\n\n    // interface implementation\n    /**\n     * This method is called each time an event listener, for one of the\n     * supported events, is removed by using {@link qx.event.Manager#removeListener}\n     * and no other event listener is listening on this type.\n     *\n     * @param target {var} The target from, which the event handler should\n     *     be removed\n     * @param type {String} event type\n     * @param capture {Boolean} Whether to attach the event to the\n     *         capturing phase or the bubbling phase of the event.\n     * @signature function(target, type, capture)\n     */\n    unregisterEvent: qx.core.Environment.select(\"engine.name\", {\n      webkit(target, type, capture) {\n        var events = this.__registeredEvents;\n\n        if (!events) {\n          return;\n        }\n\n        var hash = qx.core.ObjectRegistry.toHashCode(target) + type;\n\n        if (events[hash]) {\n          delete events[hash];\n        }\n\n        qx.bom.Event.removeNativeListener(\n          target,\n          qx.event.handler.Transition.TYPE_TO_NATIVE[type],\n          this.__onEventWrapper\n        );\n      },\n\n      gecko(target, type, capture) {\n        var events = this.__registeredEvents;\n\n        if (!events) {\n          return;\n        }\n\n        var hash = qx.core.ObjectRegistry.toHashCode(target) + type;\n\n        if (events[hash]) {\n          delete events[hash];\n        }\n\n        qx.bom.Event.removeNativeListener(\n          target,\n          qx.event.handler.Transition.TYPE_TO_NATIVE[type],\n          this.__onEventWrapper\n        );\n      },\n\n      mshtml(target, type, capture) {\n        var events = this.__registeredEvents;\n\n        if (!events) {\n          return;\n        }\n\n        var hash = qx.core.ObjectRegistry.toHashCode(target) + type;\n\n        if (events[hash]) {\n          delete events[hash];\n        }\n\n        qx.bom.Event.removeNativeListener(\n          target,\n          qx.event.handler.Transition.TYPE_TO_NATIVE[type],\n          this.__onEventWrapper\n        );\n      },\n\n      default() {}\n    }),\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT-HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Global handler for the transition event.\n     *\n     * @signature function(domEvent)\n     * @param domEvent {Event} DOM event\n     */\n    _onNative: qx.event.GlobalError.observeMethod(function (nativeEvent) {\n      qx.event.Registration.fireEvent(\n        nativeEvent.target,\n        qx.event.handler.Transition.NATIVE_TO_TYPE[nativeEvent.type],\n        qx.event.type.Event\n      );\n    })\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    var event;\n    var events = this.__registeredEvents;\n\n    for (var id in events) {\n      event = events[id];\n      if (event.target) {\n        qx.bom.Event.removeNativeListener(\n          event.target,\n          event.type,\n          this.__onEventWrapper\n        );\n      }\n    }\n\n    this.__registeredEvents = this.__onEventWrapper = null;\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer(statics) {\n    var aniEnv = qx.core.Environment.get(\"css.animation\") || {};\n    var transEnv = qx.core.Environment.get(\"css.transition\") || {};\n\n    var n2t = (qx.event.handler.Transition.NATIVE_TO_TYPE = {});\n    var t2n = (qx.event.handler.Transition.TYPE_TO_NATIVE = {\n      transitionEnd: transEnv[\"end-event\"] || null,\n      animationStart: aniEnv[\"start-event\"] || null,\n      animationEnd: aniEnv[\"end-event\"] || null,\n      animationIteration: aniEnv[\"iteration-event\"] || null\n    });\n\n    for (var type in t2n) {\n      var nate = t2n[type];\n      n2t[nate] = type;\n    }\n\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ]
}