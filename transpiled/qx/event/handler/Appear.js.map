{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/event/handler/Appear.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "IDisposable",
    "construct",
    "manager",
    "__manager",
    "__targets",
    "handler",
    "Appear",
    "__instances",
    "toHashCode",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "appear",
    "disappear",
    "TARGET_CHECK",
    "TARGET_DOMNODE",
    "IGNORE_CAN_HANDLE",
    "refresh",
    "all",
    "hash",
    "members",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "capture",
    "ObjectRegistry",
    "targets",
    "$$displayed",
    "offsetWidth",
    "unregisterEvent",
    "legacyIe",
    "Environment",
    "get",
    "tracker",
    "self",
    "keys",
    "forEach",
    "elem",
    "undefined",
    "Utils",
    "then",
    "displayed",
    "evt",
    "createEvent",
    "dispatchEvent",
    "promise",
    "destruct",
    "defer",
    "addHandler"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * This class supports <code>appear</code> and <code>disappear</code> events\n * on DOM level.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.event.handler.Appear\", {\n  extend: qx.core.Object,\n  implement: [qx.event.IEventHandler, qx.core.IDisposable],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Create a new instance\n   *\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct(manager) {\n    super();\n\n    this.__manager = manager;\n    this.__targets = {};\n\n    // Register\n    qx.event.handler.Appear.__instances[this.toHashCode()] = this;\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES: {\n      appear: true,\n      disappear: true\n    },\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK: qx.event.IEventHandler.TARGET_DOMNODE,\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE: true,\n\n    /** @type {Map} Stores all appear manager instances */\n    __instances: {},\n\n    /**\n     * Refreshes all appear handlers. Useful after massive DOM manipulations e.g.\n     * through qx.html.Element.\n     *\n     */\n    refresh() {\n      var all = this.__instances;\n      for (var hash in all) {\n        all[hash].refresh();\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __manager: null,\n    __targets: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent(target, type) {},\n\n    // interface implementation\n    registerEvent(target, type, capture) {\n      var hash = qx.core.ObjectRegistry.toHashCode(target) + type;\n      var targets = this.__targets;\n\n      if (targets && !targets[hash]) {\n        targets[hash] = target;\n        target.$$displayed = target.offsetWidth > 0;\n      }\n    },\n\n    // interface implementation\n    unregisterEvent(target, type, capture) {\n      var hash = qx.core.ObjectRegistry.toHashCode(target) + type;\n      var targets = this.__targets;\n      if (!targets) {\n        return;\n      }\n\n      if (targets[hash]) {\n        delete targets[hash];\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      USER ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This method should be called by all DOM tree modifying routines\n     * to check the registered nodes for changes.\n     *\n     * @return {qx.Promise?} a promise, if one or more of the event handlers returned one\n     */\n    refresh() {\n      var targets = this.__targets;\n\n      var legacyIe =\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 9;\n\n      var tracker = {};\n      var self = this;\n      Object.keys(targets).forEach(function (hash) {\n        var elem = targets[hash];\n        if (elem === undefined) {\n          return;\n        }\n\n        qx.event.Utils.then(tracker, function () {\n          var displayed = elem.offsetWidth > 0;\n          if (!displayed && legacyIe) {\n            // force recalculation in IE 8. See bug #7872\n            displayed = elem.offsetWidth > 0;\n          }\n          if (!!elem.$$displayed !== displayed) {\n            elem.$$displayed = displayed;\n\n            var evt = qx.event.Registration.createEvent(\n              displayed ? \"appear\" : \"disappear\"\n            );\n\n            return self.__manager.dispatchEvent(elem, evt);\n          }\n        });\n      });\n      return tracker.promise;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this.__manager = this.__targets = null;\n\n    // Deregister\n    delete qx.event.handler.Appear.__instances[this.toHashCode()];\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ]
}