{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/event/handler/Input.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "construct",
    "_onChangeCheckedWrapper",
    "lang",
    "Function",
    "listener",
    "_onChangeChecked",
    "_onChangeValueWrapper",
    "_onChangeValue",
    "_onInputWrapper",
    "_onInput",
    "_onPropertyWrapper",
    "_onProperty",
    "Environment",
    "get",
    "_onKeyDownWrapper",
    "_onKeyDown",
    "_onKeyUpWrapper",
    "_onKeyUp",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "input",
    "change",
    "TARGET_CHECK",
    "TARGET_DOMNODE",
    "IGNORE_CAN_HANDLE",
    "members",
    "__enter",
    "__onInputTimeoutId",
    "__oldValue",
    "__oldInputValue",
    "canHandleEvent",
    "target",
    "type",
    "lower",
    "tagName",
    "toLowerCase",
    "registerEvent",
    "capture",
    "__inputHandlerAttached",
    "tag",
    "elementType",
    "bom",
    "Event",
    "addNativeListener",
    "_onKeyPressWrapped",
    "_onKeyPress",
    "__registerInputListener",
    "select",
    "mshtml",
    "_inputFixWrapper",
    "_inputFix",
    "webkit",
    "parseFloat",
    "opera",
    "unregisterEvent",
    "removeNativeListener",
    "ex",
    "__unregisterInputListener",
    "e",
    "keyCode",
    "value",
    "fireEvent",
    "Data",
    "GlobalError",
    "observeMethod",
    "getTarget",
    "window",
    "setTimeout",
    "data",
    "i",
    "o",
    "options",
    "l",
    "length",
    "selected",
    "push",
    "checked",
    "prop",
    "propertyName",
    "$$inValueSet",
    "defer",
    "addHandler",
    "handler",
    "Input"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n// Original behavior:\n// ================================================================\n// Normally a \"change\" event should occur on blur of the element\n// (http://www.w3.org/TR/DOM-Level-2-Events/events.html)\n\n// However this is not true for \"file\" upload fields\n\n// And this is also not true for checkboxes and radiofields (all non mshtml)\n// And this is also not true for select boxes where the selections\n// happens in the opened popup (Gecko + Webkit)\n\n// Normalized behavior:\n// ================================================================\n// Change on blur for textfields, textareas and file\n// Instant change event on checkboxes, radiobuttons\n\n// Select field fires on select (when using popup or size>1)\n// but differs when using keyboard:\n// mshtml+opera=keypress; mozilla+safari=blur\n\n// Input event for textareas does not work in Safari 3 beta (WIN)\n// Safari 3 beta (WIN) repeats change event for select box on blur when selected using popup\n\n// Opera fires \"change\" on radio buttons two times for each change\n\n/**\n * This handler provides an \"change\" event for all form fields and an\n * \"input\" event for form fields of type \"text\" and \"textarea\".\n *\n * To let these events work it is needed to create the elements using\n * {@link qx.bom.Input}\n */\nqx.Class.define(\"qx.event.handler.Input\", {\n  extend: qx.core.Object,\n  implement: qx.event.IEventHandler,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    this._onChangeCheckedWrapper = qx.lang.Function.listener(\n      this._onChangeChecked,\n      this\n    );\n\n    this._onChangeValueWrapper = qx.lang.Function.listener(\n      this._onChangeValue,\n      this\n    );\n\n    this._onInputWrapper = qx.lang.Function.listener(this._onInput, this);\n    this._onPropertyWrapper = qx.lang.Function.listener(this._onProperty, this);\n\n    // special event handler for opera\n    if (qx.core.Environment.get(\"engine.name\") == \"opera\") {\n      this._onKeyDownWrapper = qx.lang.Function.listener(this._onKeyDown, this);\n      this._onKeyUpWrapper = qx.lang.Function.listener(this._onKeyUp, this);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES: {\n      input: 1,\n      change: 1\n    },\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK: qx.event.IEventHandler.TARGET_DOMNODE,\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE: false\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    // special handling for opera\n    __enter: false,\n    __onInputTimeoutId: null,\n\n    // stores the former set value for opera and IE\n    __oldValue: null,\n\n    // stores the former set value for IE\n    __oldInputValue: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent(target, type) {\n      var lower = target.tagName.toLowerCase();\n\n      if (type === \"input\" && (lower === \"input\" || lower === \"textarea\")) {\n        return true;\n      }\n\n      if (\n        type === \"change\" &&\n        (lower === \"input\" || lower === \"textarea\" || lower === \"select\")\n      ) {\n        return true;\n      }\n\n      return false;\n    },\n\n    // interface implementation\n    registerEvent(target, type, capture) {\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        (qx.core.Environment.get(\"engine.version\") < 9 ||\n          (qx.core.Environment.get(\"engine.version\") >= 9 &&\n            qx.core.Environment.get(\"browser.documentmode\") < 9))\n      ) {\n        if (!target.__inputHandlerAttached) {\n          var tag = target.tagName.toLowerCase();\n          var elementType = target.type;\n\n          if (\n            elementType === \"text\" ||\n            elementType === \"password\" ||\n            tag === \"textarea\" ||\n            elementType === \"checkbox\" ||\n            elementType === \"radio\"\n          ) {\n            qx.bom.Event.addNativeListener(\n              target,\n              \"propertychange\",\n              this._onPropertyWrapper\n            );\n          }\n\n          if (elementType !== \"checkbox\" && elementType !== \"radio\") {\n            qx.bom.Event.addNativeListener(\n              target,\n              \"change\",\n              this._onChangeValueWrapper\n            );\n          }\n\n          if (elementType === \"text\" || elementType === \"password\") {\n            this._onKeyPressWrapped = qx.lang.Function.listener(\n              this._onKeyPress,\n              this,\n              target\n            );\n\n            qx.bom.Event.addNativeListener(\n              target,\n              \"keypress\",\n              this._onKeyPressWrapped\n            );\n          }\n\n          target.__inputHandlerAttached = true;\n        }\n      } else {\n        if (type === \"input\") {\n          this.__registerInputListener(target);\n        } else if (type === \"change\") {\n          if (target.type === \"radio\" || target.type === \"checkbox\") {\n            qx.bom.Event.addNativeListener(\n              target,\n              \"change\",\n              this._onChangeCheckedWrapper\n            );\n          } else {\n            qx.bom.Event.addNativeListener(\n              target,\n              \"change\",\n              this._onChangeValueWrapper\n            );\n          }\n\n          // special enter bugfix for opera\n          if (\n            qx.core.Environment.get(\"engine.name\") == \"opera\" ||\n            qx.core.Environment.get(\"engine.name\") == \"mshtml\"\n          ) {\n            if (target.type === \"text\" || target.type === \"password\") {\n              this._onKeyPressWrapped = qx.lang.Function.listener(\n                this._onKeyPress,\n                this,\n                target\n              );\n\n              qx.bom.Event.addNativeListener(\n                target,\n                \"keypress\",\n                this._onKeyPressWrapped\n              );\n            }\n          }\n        }\n      }\n    },\n\n    __registerInputListener: qx.core.Environment.select(\"engine.name\", {\n      mshtml(target) {\n        if (\n          qx.core.Environment.get(\"engine.version\") >= 9 &&\n          qx.core.Environment.get(\"browser.documentmode\") >= 9\n        ) {\n          qx.bom.Event.addNativeListener(target, \"input\", this._onInputWrapper);\n\n          if (\n            target.type === \"text\" ||\n            target.type === \"password\" ||\n            target.type === \"textarea\"\n          ) {\n            // Fixed input for delete and backspace key\n            this._inputFixWrapper = qx.lang.Function.listener(\n              this._inputFix,\n              this,\n              target\n            );\n\n            qx.bom.Event.addNativeListener(\n              target,\n              \"keyup\",\n              this._inputFixWrapper\n            );\n          }\n        }\n      },\n\n      webkit(target) {\n        var tag = target.tagName.toLowerCase();\n\n        // the change event is not fired while typing\n        // this has been fixed in the latest nightlies\n        if (\n          parseFloat(qx.core.Environment.get(\"engine.version\")) < 532 &&\n          tag == \"textarea\"\n        ) {\n          qx.bom.Event.addNativeListener(\n            target,\n            \"keypress\",\n            this._onInputWrapper\n          );\n        }\n        qx.bom.Event.addNativeListener(target, \"input\", this._onInputWrapper);\n      },\n\n      opera(target) {\n        // register key events for filtering \"enter\" on input events\n        qx.bom.Event.addNativeListener(target, \"keyup\", this._onKeyUpWrapper);\n        qx.bom.Event.addNativeListener(\n          target,\n          \"keydown\",\n          this._onKeyDownWrapper\n        );\n\n        // register an blur event for preventing the input event on blur\n\n        qx.bom.Event.addNativeListener(target, \"input\", this._onInputWrapper);\n      },\n\n      default(target) {\n        qx.bom.Event.addNativeListener(target, \"input\", this._onInputWrapper);\n      }\n    }),\n\n    // interface implementation\n    unregisterEvent(target, type) {\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"engine.version\") < 9 &&\n        qx.core.Environment.get(\"browser.documentmode\") < 9\n      ) {\n        if (target.__inputHandlerAttached) {\n          var tag = target.tagName.toLowerCase();\n          var elementType = target.type;\n\n          if (\n            elementType === \"text\" ||\n            elementType === \"password\" ||\n            tag === \"textarea\" ||\n            elementType === \"checkbox\" ||\n            elementType === \"radio\"\n          ) {\n            qx.bom.Event.removeNativeListener(\n              target,\n              \"propertychange\",\n              this._onPropertyWrapper\n            );\n          }\n\n          if (elementType !== \"checkbox\" && elementType !== \"radio\") {\n            qx.bom.Event.removeNativeListener(\n              target,\n              \"change\",\n              this._onChangeValueWrapper\n            );\n          }\n\n          if (elementType === \"text\" || elementType === \"password\") {\n            qx.bom.Event.removeNativeListener(\n              target,\n              \"keypress\",\n              this._onKeyPressWrapped\n            );\n          }\n\n          try {\n            delete target.__inputHandlerAttached;\n          } catch (ex) {\n            target.__inputHandlerAttached = null;\n          }\n        }\n      } else {\n        if (type === \"input\") {\n          this.__unregisterInputListener(target);\n        } else if (type === \"change\") {\n          if (target.type === \"radio\" || target.type === \"checkbox\") {\n            qx.bom.Event.removeNativeListener(\n              target,\n              \"change\",\n              this._onChangeCheckedWrapper\n            );\n          } else {\n            qx.bom.Event.removeNativeListener(\n              target,\n              \"change\",\n              this._onChangeValueWrapper\n            );\n          }\n        }\n\n        if (\n          qx.core.Environment.get(\"engine.name\") == \"opera\" ||\n          qx.core.Environment.get(\"engine.name\") == \"mshtml\"\n        ) {\n          if (target.type === \"text\" || target.type === \"password\") {\n            qx.bom.Event.removeNativeListener(\n              target,\n              \"keypress\",\n              this._onKeyPressWrapped\n            );\n          }\n        }\n      }\n    },\n\n    __unregisterInputListener: qx.core.Environment.select(\"engine.name\", {\n      mshtml(target) {\n        if (\n          qx.core.Environment.get(\"engine.version\") >= 9 &&\n          qx.core.Environment.get(\"browser.documentmode\") >= 9\n        ) {\n          qx.bom.Event.removeNativeListener(\n            target,\n            \"input\",\n            this._onInputWrapper\n          );\n\n          if (\n            target.type === \"text\" ||\n            target.type === \"password\" ||\n            target.type === \"textarea\"\n          ) {\n            // Fixed input for delete and backspace key\n            qx.bom.Event.removeNativeListener(\n              target,\n              \"keyup\",\n              this._inputFixWrapper\n            );\n          }\n        }\n      },\n\n      webkit(target) {\n        var tag = target.tagName.toLowerCase();\n\n        // the change event is not fired while typing\n        // this has been fixed in the latest nightlies\n        if (\n          parseFloat(qx.core.Environment.get(\"engine.version\")) < 532 &&\n          tag == \"textarea\"\n        ) {\n          qx.bom.Event.removeNativeListener(\n            target,\n            \"keypress\",\n            this._onInputWrapper\n          );\n        }\n        qx.bom.Event.removeNativeListener(\n          target,\n          \"input\",\n          this._onInputWrapper\n        );\n      },\n\n      opera(target) {\n        // unregister key events for filtering \"enter\" on input events\n        qx.bom.Event.removeNativeListener(\n          target,\n          \"keyup\",\n          this._onKeyUpWrapper\n        );\n\n        qx.bom.Event.removeNativeListener(\n          target,\n          \"keydown\",\n          this._onKeyDownWrapper\n        );\n\n        qx.bom.Event.removeNativeListener(\n          target,\n          \"input\",\n          this._onInputWrapper\n        );\n      },\n\n      default(target) {\n        qx.bom.Event.removeNativeListener(\n          target,\n          \"input\",\n          this._onInputWrapper\n        );\n      }\n    }),\n\n    /*\n    ---------------------------------------------------------------------------\n      FOR OPERA AND IE (KEYPRESS TO SIMULATE CHANGE EVENT)\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Handler for fixing the different behavior when pressing the enter key.\n     *\n     * FF and Safari fire a \"change\" event if the user presses the enter key.\n     * IE and Opera fire the event only if the focus is changed.\n     *\n     * @signature function(e, target)\n     * @param e {Event} DOM event object\n     * @param target {Element} The event target\n     */\n    _onKeyPress: qx.core.Environment.select(\"engine.name\", {\n      mshtml(e, target) {\n        if (e.keyCode === 13) {\n          if (target.value !== this.__oldValue) {\n            this.__oldValue = target.value;\n            qx.event.Registration.fireEvent(\n              target,\n              \"change\",\n              qx.event.type.Data,\n              [target.value]\n            );\n          }\n        }\n      },\n\n      opera(e, target) {\n        if (e.keyCode === 13) {\n          if (target.value !== this.__oldValue) {\n            this.__oldValue = target.value;\n            qx.event.Registration.fireEvent(\n              target,\n              \"change\",\n              qx.event.type.Data,\n              [target.value]\n            );\n          }\n        }\n      },\n\n      default: null\n    }),\n\n    /*\n    ---------------------------------------------------------------------------\n      FOR IE (KEYUP TO SIMULATE INPUT EVENT)\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Handler for fixing the different behavior when pressing the backspace or\n     * delete key.\n     *\n     * The other browsers fire a \"input\" event if the user presses the backspace\n     * or delete key.\n     * IE fire the event only for other keys.\n     *\n     * @signature function(e, target)\n     * @param e {Event} DOM event object\n     * @param target {Element} The event target\n     */\n    _inputFix: qx.core.Environment.select(\"engine.name\", {\n      mshtml(e, target) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          if (target.value !== this.__oldInputValue) {\n            this.__oldInputValue = target.value;\n            qx.event.Registration.fireEvent(\n              target,\n              \"input\",\n              qx.event.type.Data,\n              [target.value]\n            );\n          }\n        }\n      },\n\n      default: null\n    }),\n\n    /*\n    ---------------------------------------------------------------------------\n      FOR OPERA ONLY LISTENER (KEY AND BLUR)\n    ---------------------------------------------------------------------------\n    */\n    /**\n     * Key event listener for opera which recognizes if the enter key has been\n     * pressed.\n     *\n     * @signature function(e)\n     * @param e {Event} DOM event object\n     */\n    _onKeyDown: qx.core.Environment.select(\"engine.name\", {\n      opera(e) {\n        // enter is pressed\n        if (e.keyCode === 13) {\n          this.__enter = true;\n        }\n      },\n\n      default: null\n    }),\n\n    /**\n     * Key event listener for opera which recognizes if the enter key has been\n     * pressed.\n     *\n     * @signature function(e)\n     * @param e {Event} DOM event object\n     */\n    _onKeyUp: qx.core.Environment.select(\"engine.name\", {\n      opera(e) {\n        // enter is pressed\n        if (e.keyCode === 13) {\n          this.__enter = false;\n        }\n      },\n\n      default: null\n    }),\n\n    /*\n    ---------------------------------------------------------------------------\n      NATIVE EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Internal function called by input elements created using {@link qx.bom.Input}.\n     *\n     * @signature function(e)\n     * @param e {Event} Native DOM event\n     */\n    _onInput: qx.event.GlobalError.observeMethod(function (e) {\n      var target = qx.bom.Event.getTarget(e);\n      var tag = target.tagName.toLowerCase();\n      // ignore native input event when triggered by return in input element\n      if (!this.__enter || tag !== \"input\") {\n        // opera lower 10.6 needs a special treatment for input events because\n        // they are also fired on blur\n        if (\n          qx.core.Environment.get(\"engine.name\") == \"opera\" &&\n          qx.core.Environment.get(\"browser.version\") < 10.6\n        ) {\n          this.__onInputTimeoutId = window.setTimeout(function () {\n            qx.event.Registration.fireEvent(\n              target,\n              \"input\",\n              qx.event.type.Data,\n              [target.value]\n            );\n          }, 0);\n        } else {\n          qx.event.Registration.fireEvent(target, \"input\", qx.event.type.Data, [\n            target.value\n          ]);\n        }\n      }\n    }),\n\n    /**\n     * Internal function called by input elements created using {@link qx.bom.Input}.\n     *\n     * @signature function(e)\n     * @param e {Event} Native DOM event\n     */\n    _onChangeValue: qx.event.GlobalError.observeMethod(function (e) {\n      var target = qx.bom.Event.getTarget(e);\n      var data = target.value;\n\n      if (target.type === \"select-multiple\") {\n        var data = [];\n        for (var i = 0, o = target.options, l = o.length; i < l; i++) {\n          if (o[i].selected) {\n            data.push(o[i].value);\n          }\n        }\n      }\n\n      qx.event.Registration.fireEvent(target, \"change\", qx.event.type.Data, [\n        data\n      ]);\n    }),\n\n    /**\n     * Internal function called by input elements created using {@link qx.bom.Input}.\n     *\n     * @signature function(e)\n     * @param e {Event} Native DOM event\n     */\n    _onChangeChecked: qx.event.GlobalError.observeMethod(function (e) {\n      var target = qx.bom.Event.getTarget(e);\n\n      if (target.type === \"radio\") {\n        if (target.checked) {\n          qx.event.Registration.fireEvent(\n            target,\n            \"change\",\n            qx.event.type.Data,\n            [target.value]\n          );\n        }\n      } else {\n        qx.event.Registration.fireEvent(target, \"change\", qx.event.type.Data, [\n          target.checked\n        ]);\n      }\n    }),\n\n    /**\n     * Internal function called by input elements created using {@link qx.bom.Input}.\n     *\n     * @signature function(e)\n     * @param e {Event} Native DOM event\n     */\n    _onProperty: qx.core.Environment.select(\"engine.name\", {\n      mshtml: qx.event.GlobalError.observeMethod(function (e) {\n        var target = qx.bom.Event.getTarget(e);\n        var prop = e.propertyName;\n\n        if (\n          prop === \"value\" &&\n          (target.type === \"text\" ||\n            target.type === \"password\" ||\n            target.tagName.toLowerCase() === \"textarea\")\n        ) {\n          if (!target.$$inValueSet) {\n            qx.event.Registration.fireEvent(\n              target,\n              \"input\",\n              qx.event.type.Data,\n              [target.value]\n            );\n          }\n        } else if (prop === \"checked\") {\n          if (target.type === \"checkbox\") {\n            qx.event.Registration.fireEvent(\n              target,\n              \"change\",\n              qx.event.type.Data,\n              [target.checked]\n            );\n          } else if (target.checked) {\n            qx.event.Registration.fireEvent(\n              target,\n              \"change\",\n              qx.event.type.Data,\n              [target.value]\n            );\n          }\n        }\n      }),\n\n      default() {}\n    })\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ]
}