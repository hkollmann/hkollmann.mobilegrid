{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/event/handler/Mouse.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "IDisposable",
    "construct",
    "manager",
    "__manager",
    "__window",
    "getWindow",
    "__root",
    "document",
    "__onNativeListener",
    "lang",
    "Function",
    "listener",
    "_onNative",
    "_initButtonObserver",
    "_initMoveObserver",
    "_initWheelObserver",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "auxclick",
    "click",
    "contextmenu",
    "dblclick",
    "mousedown",
    "mouseenter",
    "mouseleave",
    "mousemove",
    "mouseout",
    "mouseover",
    "mouseup",
    "mousewheel",
    "NON_BUBBLING_EVENTS",
    "TARGET_CHECK",
    "TARGET_DOMNODE",
    "TARGET_DOCUMENT",
    "TARGET_WINDOW",
    "IGNORE_CAN_HANDLE",
    "members",
    "__onButtonEventWrapper",
    "__onMoveEventWrapper",
    "__onWheelEventWrapper",
    "__lastEventType",
    "__lastMouseDownTarget",
    "__preventNextClick",
    "canHandleEvent",
    "target",
    "type",
    "registerEvent",
    "capture",
    "handler",
    "Mouse",
    "bom",
    "Event",
    "addNativeListener",
    "Environment",
    "get",
    "unregisterEvent",
    "removeNativeListener",
    "undefined",
    "GlobalError",
    "observeMethod",
    "domEvent",
    "getTarget",
    "fireNonBubblingEvent",
    "cancelable",
    "__fireEvent",
    "nodeType",
    "fireEvent",
    "MouseWheel",
    "Data",
    "preventNextClick",
    "_onButtonEvent",
    "_onMoveEvent",
    "_onWheelEvent",
    "data",
    "client",
    "getMouseWheel",
    "_stopButtonObserver",
    "_stopMoveObserver",
    "_stopWheelObserver",
    "parentNode",
    "isDrag",
    "DragDrop",
    "getHandler",
    "isSessionActive",
    "__doubleClickFixPre",
    "button",
    "__rightClickFixPost",
    "__differentTargetClickFixPost",
    "select",
    "opera",
    "mshtml",
    "commonParent",
    "dom",
    "Hierarchy",
    "getCommonParent",
    "destruct",
    "defer",
    "addHandler"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n     * Christian Hagendorn (chris_schmidt)\n\n************************************************************************ */\n\n/**\n * This class provides an unified mouse event handler for Internet Explorer,\n * Firefox, Opera and Safari\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n * @require(qx.event.handler.UserAction)\n * @ignore(qx.event.handler.DragDrop)\n * @ignore(performance.now)\n */\nqx.Class.define(\"qx.event.handler.Mouse\", {\n  extend: qx.core.Object,\n  implement: [qx.event.IEventHandler, qx.core.IDisposable],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Create a new instance\n   *\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct(manager) {\n    super();\n\n    // Define shorthands\n    this.__manager = manager;\n    this.__window = manager.getWindow();\n    this.__root = this.__window.document;\n    this.__onNativeListener = qx.lang.Function.listener(this._onNative, this);\n\n    // Initialize observers\n    this._initButtonObserver();\n    this._initMoveObserver();\n    this._initWheelObserver();\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES: {\n      auxclick: 1,\n      click: 1,\n      contextmenu: 1,\n      dblclick: 1,\n      mousedown: 1,\n      mouseenter: 1,\n      mouseleave: 1,\n      mousemove: 1,\n      mouseout: 1,\n      mouseover: 1,\n      mouseup: 1,\n      mousewheel: 1\n    },\n\n    /** @type{Map} these event types cannot be attached to the root (the document), they must be attached to the element itself */\n    NON_BUBBLING_EVENTS: {\n      mouseenter: true,\n      mouseleave: true\n    },\n\n    /** @type {Integer} Which target check to use */\n    TARGET_CHECK:\n      qx.event.IEventHandler.TARGET_DOMNODE +\n      qx.event.IEventHandler.TARGET_DOCUMENT +\n      qx.event.IEventHandler.TARGET_WINDOW,\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE: true\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __onButtonEventWrapper: null,\n    __onMoveEventWrapper: null,\n    __onWheelEventWrapper: null,\n    __lastEventType: null,\n    __lastMouseDownTarget: null,\n    __manager: null,\n    __window: null,\n    __root: null,\n    __preventNextClick: null,\n\n    /** @type{Function} wrapper for `_onNative`, bound as a native listener */\n    __onNativeListener: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent(target, type) {},\n\n    /**\n     * @Override\n     */\n    registerEvent(target, type, capture) {\n      if (qx.event.handler.Mouse.NON_BUBBLING_EVENTS[type]) {\n        qx.bom.Event.addNativeListener(target, type, this.__onNativeListener);\n      } else if (qx.core.Environment.get(\"os.name\") === \"ios\") {\n        // The iPhone requires for attaching mouse events natively to every element which\n        // should react on mouse events. As of version 3.0 it also requires to keep the\n        // listeners as long as the event should work. In 2.0 it was enough to attach the\n        // listener once.\n        target[\"on\" + type] = function () {\n          return null;\n        };\n      }\n    },\n\n    /**\n     * @Override\n     */\n    unregisterEvent(target, type, capture) {\n      if (qx.event.handler.Mouse.NON_BUBBLING_EVENTS[type]) {\n        qx.bom.Event.removeNativeListener(\n          target,\n          type,\n          this.__onNativeListener\n        );\n      } else if (qx.core.Environment.get(\"os.name\") === \"ios\") {\n        target[\"on\" + type] = undefined;\n      }\n    },\n\n    /**\n     * Default event handler for events that do not bubble\n     *\n     * @signature function(domEvent, eventId)\n     * @param domEvent {Event} Native event\n     */\n    _onNative: qx.event.GlobalError.observeMethod(function (domEvent) {\n      let target = qx.bom.Event.getTarget(domEvent);\n\n      qx.event.Registration.fireNonBubblingEvent(\n        target,\n        domEvent.type,\n        qx.event.type.Mouse,\n        [domEvent, target, undefined, undefined, domEvent.cancelable]\n      );\n    }),\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Fire a mouse event with the given parameters\n     *\n     * @param domEvent {Event} DOM event\n     * @param type {String} type of the event\n     * @param target {Element} event target\n     */\n    __fireEvent(domEvent, type, target) {\n      if (!target) {\n        target = qx.bom.Event.getTarget(domEvent);\n      }\n\n      // we need a true node for the fireEvent\n      // e.g. when hovering over text of disabled textfields IE is returning\n      // an empty object as \"srcElement\"\n      if (target && target.nodeType) {\n        qx.event.Registration.fireEvent(\n          target,\n          type || domEvent.type,\n          type == \"mousewheel\" ? qx.event.type.MouseWheel : qx.event.type.Mouse,\n          [domEvent, target, null, true, true]\n        );\n      }\n\n      // Fire user action event\n      qx.event.Registration.fireEvent(\n        this.__window,\n        \"useraction\",\n        qx.event.type.Data,\n        [type || domEvent.type]\n      );\n    },\n\n    /**\n     * Helper to prevent the next click.\n     * @internal\n     */\n    preventNextClick() {\n      this.__preventNextClick = true;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      OBSERVER INIT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Initializes the native mouse button event listeners.\n     *\n     * @signature function()\n     */\n    _initButtonObserver() {\n      this.__onButtonEventWrapper = qx.lang.Function.listener(\n        this._onButtonEvent,\n        this\n      );\n\n      var Event = qx.bom.Event;\n\n      Event.addNativeListener(\n        this.__root,\n        \"mousedown\",\n        this.__onButtonEventWrapper\n      );\n\n      Event.addNativeListener(\n        this.__root,\n        \"mouseup\",\n        this.__onButtonEventWrapper\n      );\n\n      Event.addNativeListener(\n        this.__root,\n        \"click\",\n        this.__onButtonEventWrapper\n      );\n\n      Event.addNativeListener(\n        this.__root,\n        \"auxclick\",\n        this.__onButtonEventWrapper\n      );\n\n      Event.addNativeListener(\n        this.__root,\n        \"dblclick\",\n        this.__onButtonEventWrapper\n      );\n\n      Event.addNativeListener(\n        this.__root,\n        \"contextmenu\",\n        this.__onButtonEventWrapper\n      );\n    },\n\n    /**\n     * Initializes the native mouse move event listeners.\n     *\n     * @signature function()\n     */\n    _initMoveObserver() {\n      this.__onMoveEventWrapper = qx.lang.Function.listener(\n        this._onMoveEvent,\n        this\n      );\n\n      var Event = qx.bom.Event;\n      Event.addNativeListener(\n        this.__root,\n        \"mousemove\",\n        this.__onMoveEventWrapper\n      );\n\n      Event.addNativeListener(\n        this.__root,\n        \"mouseout\",\n        this.__onMoveEventWrapper\n      );\n\n      Event.addNativeListener(\n        this.__root,\n        \"mouseover\",\n        this.__onMoveEventWrapper\n      );\n    },\n\n    /**\n     * Initializes the native mouse wheel event listeners.\n     *\n     * @signature function()\n     */\n    _initWheelObserver() {\n      this.__onWheelEventWrapper = qx.lang.Function.listener(\n        this._onWheelEvent,\n        this\n      );\n\n      var data = qx.bom.client.Event.getMouseWheel(this.__window);\n      qx.bom.Event.addNativeListener(\n        data.target,\n        data.type,\n        this.__onWheelEventWrapper\n      );\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      OBSERVER STOP\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Disconnects the native mouse button event listeners.\n     *\n     * @signature function()\n     */\n    _stopButtonObserver() {\n      var Event = qx.bom.Event;\n\n      Event.removeNativeListener(\n        this.__root,\n        \"mousedown\",\n        this.__onButtonEventWrapper\n      );\n\n      Event.removeNativeListener(\n        this.__root,\n        \"mouseup\",\n        this.__onButtonEventWrapper\n      );\n\n      Event.removeNativeListener(\n        this.__root,\n        \"click\",\n        this.__onButtonEventWrapper\n      );\n\n      Event.removeNativeListener(\n        this.__root,\n        \"dblclick\",\n        this.__onButtonEventWrapper\n      );\n\n      Event.removeNativeListener(\n        this.__root,\n        \"contextmenu\",\n        this.__onButtonEventWrapper\n      );\n    },\n\n    /**\n     * Disconnects the native mouse move event listeners.\n     *\n     * @signature function()\n     */\n    _stopMoveObserver() {\n      var Event = qx.bom.Event;\n\n      Event.removeNativeListener(\n        this.__root,\n        \"mousemove\",\n        this.__onMoveEventWrapper\n      );\n\n      Event.removeNativeListener(\n        this.__root,\n        \"mouseover\",\n        this.__onMoveEventWrapper\n      );\n\n      Event.removeNativeListener(\n        this.__root,\n        \"mouseout\",\n        this.__onMoveEventWrapper\n      );\n    },\n\n    /**\n     * Disconnects the native mouse wheel event listeners.\n     *\n     * @signature function()\n     */\n    _stopWheelObserver() {\n      var data = qx.bom.client.Event.getMouseWheel(this.__window);\n      qx.bom.Event.removeNativeListener(\n        data.target,\n        data.type,\n        this.__onWheelEventWrapper\n      );\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      NATIVE EVENT OBSERVERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Global handler for all mouse move related events like \"mousemove\",\n     * \"mouseout\" and \"mouseover\".\n     *\n     * @signature function(domEvent)\n     * @param domEvent {Event} DOM event\n     */\n    _onMoveEvent: qx.event.GlobalError.observeMethod(function (domEvent) {\n      this.__fireEvent(domEvent);\n    }),\n\n    /**\n     * Global handler for all mouse button related events like \"mouseup\",\n     * \"mousedown\", \"click\", \"dblclick\" and \"contextmenu\".\n     *\n     * @signature function(domEvent)\n     * @param domEvent {Event} DOM event\n     */\n    _onButtonEvent: qx.event.GlobalError.observeMethod(function (domEvent) {\n      var type = domEvent.type;\n      var target = qx.bom.Event.getTarget(domEvent);\n\n      if (type == \"click\" && this.__preventNextClick) {\n        delete this.__preventNextClick;\n        return;\n      }\n\n      // Safari (and maybe gecko) takes text nodes as targets for events\n      // See: http://www.quirksmode.org/js/events_properties.html\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"gecko\" ||\n        qx.core.Environment.get(\"engine.name\") == \"webkit\"\n      ) {\n        if (target && target.nodeType == 3) {\n          target = target.parentNode;\n        }\n      }\n\n      // prevent click events on drop during Drag&Drop [BUG #6846]\n      var isDrag =\n        qx.event.handler.DragDrop &&\n        this.__manager.getHandler(qx.event.handler.DragDrop).isSessionActive();\n      if (isDrag && type == \"click\") {\n        return;\n      }\n\n      if (this.__doubleClickFixPre) {\n        this.__doubleClickFixPre(domEvent, type, target);\n      }\n\n      this.__fireEvent(domEvent, type, target);\n\n      /*\n       * In order to normalize middle button click events we\n       * need to fire an artificial click event if the client\n       * fires auxclick events for non primary buttons instead.\n       *\n       * See https://github.com/qooxdoo/qooxdoo/issues/9268\n       */\n      if (type == \"auxclick\" && domEvent.button == 1) {\n        this.__fireEvent(domEvent, \"click\", target);\n      }\n\n      if (this.__rightClickFixPost) {\n        this.__rightClickFixPost(domEvent, type, target);\n      }\n\n      if (this.__differentTargetClickFixPost && !isDrag) {\n        this.__differentTargetClickFixPost(domEvent, type, target);\n      }\n\n      this.__lastEventType = type;\n    }),\n\n    /**\n     * Global handler for the mouse wheel event.\n     *\n     * @signature function(domEvent)\n     * @param domEvent {Event} DOM event\n     */\n    _onWheelEvent: qx.event.GlobalError.observeMethod(function (domEvent) {\n      this.__fireEvent(domEvent, \"mousewheel\");\n    }),\n\n    /*\n    ---------------------------------------------------------------------------\n      CROSS BROWSER SUPPORT FIXES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Normalizes the click sequence of right click events in Webkit and Opera.\n     * The normalized sequence is:\n     *\n     *  1. mousedown  <- not fired by Webkit\n     *  2. mouseup  <- not fired by Webkit\n     *  3. contextmenu <- not fired by Opera\n     *\n     * @param domEvent {Event} original DOM event\n     * @param type {String} event type\n     * @param target {Element} event target of the DOM event.\n     *\n     * @signature function(domEvent, type, target)\n     */\n    __rightClickFixPost: qx.core.Environment.select(\"engine.name\", {\n      opera(domEvent, type, target) {\n        if (type == \"mouseup\" && domEvent.button == 2) {\n          this.__fireEvent(domEvent, \"contextmenu\", target);\n        }\n      },\n\n      default: null\n    }),\n\n    /**\n     * Normalizes the click sequence of double click event in the Internet\n     * Explorer. The normalized sequence is:\n     *\n     *  1. mousedown\n     *  2. mouseup\n     *  3. click\n     *  4. mousedown  <- not fired by IE\n     *  5. mouseup\n     *  6. click  <- not fired by IE\n     *  7. dblclick\n     *\n     *  Note: This fix is only applied, when the IE event model is used, otherwise\n     *  the fix is ignored.\n     *\n     * @param domEvent {Event} original DOM event\n     * @param type {String} event type\n     * @param target {Element} event target of the DOM event.\n     *\n     * @signature function(domEvent, type, target)\n     */\n    __doubleClickFixPre: qx.core.Environment.select(\"engine.name\", {\n      mshtml(domEvent, type, target) {\n        // Do only apply the fix when the event is from the IE event model,\n        // otherwise do not apply the fix.\n        if (domEvent.target !== undefined) {\n          return;\n        }\n\n        if (type == \"mouseup\" && this.__lastEventType == \"click\") {\n          this.__fireEvent(domEvent, \"mousedown\", target);\n        } else if (type == \"dblclick\") {\n          this.__fireEvent(domEvent, \"click\", target);\n        }\n      },\n\n      default: null\n    }),\n\n    /**\n     * If the mouseup event happens on a different target than the corresponding\n     * mousedown event the internet explorer dispatches a click event on the\n     * first common ancestor of both targets. The presence of this click event\n     * is essential for the qooxdoo widget system. All other browsers don't fire\n     * the click event so it must be emulated.\n     *\n     * @param domEvent {Event} original DOM event\n     * @param type {String} event type\n     * @param target {Element} event target of the DOM event.\n     *\n     * @signature function(domEvent, type, target)\n     */\n    __differentTargetClickFixPost: qx.core.Environment.select(\"engine.name\", {\n      mshtml: null,\n\n      default(domEvent, type, target) {\n        switch (type) {\n          case \"mousedown\":\n            this.__lastMouseDownTarget = target;\n            break;\n\n          case \"mouseup\":\n            if (target !== this.__lastMouseDownTarget) {\n              var commonParent = qx.dom.Hierarchy.getCommonParent(\n                target,\n                this.__lastMouseDownTarget\n              );\n\n              if (commonParent) {\n                this.__fireEvent(domEvent, \"click\", commonParent);\n              }\n            }\n        }\n      }\n    })\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this._stopButtonObserver();\n    this._stopMoveObserver();\n    this._stopWheelObserver();\n\n    this.__manager =\n      this.__window =\n      this.__root =\n      this.__lastMouseDownTarget =\n        null;\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ]
}