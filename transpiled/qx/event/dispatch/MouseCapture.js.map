{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/event/dispatch/MouseCapture.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "event",
    "dispatch",
    "AbstractBubbling",
    "construct",
    "manager",
    "registration",
    "__window",
    "getWindow",
    "__registration",
    "addListener",
    "releaseCapture",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_FIRST",
    "members",
    "__captureElement",
    "__containerCapture",
    "_getParent",
    "target",
    "parentNode",
    "canDispatchEvent",
    "type",
    "__captureEvents",
    "dispatchEvent",
    "stopPropagation",
    "dom",
    "Hierarchy",
    "contains",
    "mouseup",
    "mousedown",
    "click",
    "dblclick",
    "mousemove",
    "mouseout",
    "mouseover",
    "pointerdown",
    "pointerup",
    "pointermove",
    "pointerover",
    "pointerout",
    "tap",
    "dbltap",
    "activateCapture",
    "element",
    "containerCapture",
    "hasNativeCapture",
    "nativeSetCapture",
    "self",
    "onNativeListener",
    "bom",
    "Event",
    "removeNativeListener",
    "addNativeListener",
    "fireEvent",
    "getCaptureElement",
    "nativeReleaseCapture",
    "core",
    "Environment",
    "get",
    "parseInt",
    "select",
    "mshtml",
    "setCapture",
    "defer",
    "addDispatcher",
    "MouseCapture"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n   qooxdoo - the new era of web development\n   http://qooxdoo.org\n   Copyright:\n    2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n   License:\n    MIT: https://opensource.org/licenses/MIT\n    See the LICENSE file in the project's top-level directory for details.\n   Authors:\n    * Fabian Jakobs (fjakobs)\n************************************************************************ */\n\n/**\n * Implementation of the Internet Explorer specific event capturing mode for\n * mouse events http://msdn2.microsoft.com/en-us/library/ms536742.aspx.\n *\n * This class is used internally by {@link qx.event.Manager} to do mouse event\n * capturing.\n *\n * @use(qx.event.handler.Focus)\n * @use(qx.event.handler.Window)\n * @use(qx.event.handler.Capture)\n */\nqx.Class.define(\"qx.event.dispatch.MouseCapture\", {\n  extend: qx.event.dispatch.AbstractBubbling,\n\n  /**\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   * @param registration {qx.event.Registration} The event registration to use\n   */\n  construct(manager, registration) {\n    super(manager);\n    this.__window = manager.getWindow();\n    this.__registration = registration;\n\n    manager.addListener(this.__window, \"blur\", this.releaseCapture, this);\n    manager.addListener(this.__window, \"focus\", this.releaseCapture, this);\n    manager.addListener(this.__window, \"scroll\", this.releaseCapture, this);\n  },\n\n  statics: {\n    /** @type {Integer} Priority of this dispatcher */\n    PRIORITY: qx.event.Registration.PRIORITY_FIRST\n  },\n\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    __registration: null,\n    __captureElement: null,\n    __containerCapture: true,\n    __window: null,\n\n    // overridden\n    _getParent(target) {\n      return target.parentNode;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT DISPATCHER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    canDispatchEvent(target, event, type) {\n      return !!(this.__captureElement && this.__captureEvents[type]);\n    },\n\n    // overridden\n    dispatchEvent(target, event, type) {\n      if (type == \"click\") {\n        event.stopPropagation();\n\n        this.releaseCapture();\n        return;\n      }\n\n      if (\n        this.__containerCapture ||\n        !qx.dom.Hierarchy.contains(this.__captureElement, target)\n      ) {\n        target = this.__captureElement;\n      }\n\n      return super.dispatchEvent(target, event, type);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @lint ignoreReferenceField(__captureEvents)\n     */\n    __captureEvents: {\n      mouseup: 1,\n      mousedown: 1,\n      click: 1,\n      dblclick: 1,\n      mousemove: 1,\n      mouseout: 1,\n      mouseover: 1,\n\n      pointerdown: 1,\n      pointerup: 1,\n      pointermove: 1,\n      pointerover: 1,\n      pointerout: 1,\n      tap: 1,\n      dbltap: 1\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      USER ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Set the given element as target for event\n     *\n     * @param element {Element} The element which should capture the mouse events.\n     * @param containerCapture {Boolean?true} If true all events originating in\n     *   the container are captured. IF false events originating in the container\n     *   are not captured.\n     */\n    activateCapture(element, containerCapture) {\n      var containerCapture = containerCapture !== false;\n\n      if (\n        this.__captureElement === element &&\n        this.__containerCapture == containerCapture\n      ) {\n        return;\n      }\n\n      if (this.__captureElement) {\n        this.releaseCapture();\n      }\n\n      // turn on native mouse capturing if the browser supports it\n      if (this.hasNativeCapture) {\n        this.nativeSetCapture(element, containerCapture);\n        var self = this;\n        var onNativeListener = function () {\n          qx.bom.Event.removeNativeListener(\n            element,\n            \"losecapture\",\n            onNativeListener\n          );\n\n          self.releaseCapture();\n        };\n        qx.bom.Event.addNativeListener(\n          element,\n          \"losecapture\",\n          onNativeListener\n        );\n      }\n\n      this.__containerCapture = containerCapture;\n      this.__captureElement = element;\n      this.__registration.fireEvent(element, \"capture\", qx.event.type.Event, [\n        true,\n        false\n      ]);\n    },\n\n    /**\n     * Get the element currently capturing events.\n     *\n     * @return {Element|null} The current capture element. This value may be\n     *    null.\n     */\n    getCaptureElement() {\n      return this.__captureElement;\n    },\n\n    /**\n     * Stop capturing of mouse events.\n     */\n    releaseCapture() {\n      var element = this.__captureElement;\n\n      if (!element) {\n        return;\n      }\n\n      this.__captureElement = null;\n      this.__registration.fireEvent(\n        element,\n        \"losecapture\",\n        qx.event.type.Event,\n        [true, false]\n      );\n\n      // turn off native mouse capturing if the browser supports it\n      this.nativeReleaseCapture(element);\n    },\n\n    /** Whether the browser should use native mouse capturing */\n    hasNativeCapture:\n      (qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 9) ||\n      (parseInt(qx.core.Environment.get(\"os.version\"), 10) > 7 &&\n        qx.core.Environment.get(\"browser.documentmode\") > 9),\n\n    /**\n     * If the browser supports native mouse capturing, sets the mouse capture to\n     * the object that belongs to the current document.\n     *\n     * Please note that under Windows 7 (but not Windows 8), capturing is\n     * not only applied to mouse events as expected, but also to native pointer events.\n     *\n     * @param element {Element} The capture DOM element\n     * @param containerCapture {Boolean?true} If true all events originating in\n     *   the container are captured. If false events originating in the container\n     *   are not captured.\n     * @signature function(element, containerCapture)\n     */\n    nativeSetCapture: qx.core.Environment.select(\"engine.name\", {\n      mshtml(element, containerCapture) {\n        element.setCapture(containerCapture !== false);\n      },\n\n      default() {}\n    }),\n\n    /**\n     * If the browser supports native mouse capturing, removes mouse capture\n     * from the object in the current document.\n     *\n     * @param element {Element} The DOM element to release the capture for\n     * @signature function(element)\n     */\n    nativeReleaseCapture: qx.core.Environment.select(\"engine.name\", {\n      mshtml(element) {\n        element.releaseCapture();\n      },\n\n      default() {}\n    })\n  },\n\n  defer(statics) {\n    qx.event.Registration.addDispatcher(statics);\n  }\n});\n"
  ]
}