{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/Bootstrap.js"
  ],
  "names": [
    "window",
    "qx",
    "createPlainFunction",
    "construct",
    "apply",
    "slice",
    "call",
    "arguments",
    "Bootstrap",
    "genericToString",
    "classname",
    "createNamespace",
    "name",
    "object",
    "splits",
    "split",
    "part",
    "parent",
    "$$namespaceRoot",
    "i",
    "len",
    "length",
    "setDisplayName",
    "fcn",
    "displayName",
    "setDisplayNames",
    "functionMap",
    "value",
    "Function",
    "base",
    "args",
    "varargs",
    "DEBUG",
    "isFunction",
    "callee",
    "Error",
    "Array",
    "prototype",
    "define",
    "config",
    "isStrictMode",
    "statics",
    "clazz",
    "proto",
    "members",
    "extend",
    "toString",
    "match",
    "extendClass",
    "basename",
    "keys",
    "l",
    "key",
    "member",
    "$$registry",
    "formerClass",
    "defer",
    "curProp",
    "$$type",
    "hasOwnProperty",
    "ex",
    "$$events",
    "events",
    "addPendingDefer",
    "isQxCoreObject",
    "constructor",
    "clz",
    "superclass",
    "LOADSTART",
    "$$start",
    "Date",
    "debug",
    "$$environment",
    "getEnvironmentSetting",
    "setEnvironmentSetting",
    "undefined",
    "setRoot",
    "root",
    "superClass",
    "superproto",
    "helper",
    "self",
    "__pendingDefers",
    "cb",
    "$$loader",
    "delayDefer",
    "push",
    "$$pendingDefer",
    "executePendingDefers",
    "dbClassInfo",
    "executeForDbClassInfo",
    "environment",
    "required",
    "info",
    "load",
    "className",
    "executeForClassName",
    "dependsOn",
    "depInfo",
    "require",
    "usage",
    "getByName",
    "$$deferComplete",
    "$$dbClassInfo",
    "execute",
    "tmp",
    "pendingDefers",
    "forEach",
    "objectGetLength",
    "map",
    "objectMergeWith",
    "target",
    "source",
    "overwrite",
    "__shadowedKeys",
    "ES5",
    "Object",
    "BROKEN_IE",
    "TypeError",
    "arr",
    "shadowedKeys",
    "a",
    "__classToTypeMap",
    "bind",
    "func",
    "fixedArgs",
    "concat",
    "firstUp",
    "str",
    "charAt",
    "toUpperCase",
    "substr",
    "firstLow",
    "toLowerCase",
    "getClass",
    "classString",
    "isString",
    "String",
    "$$isString",
    "isArray",
    "data",
    "IListData",
    "util",
    "OOUtil",
    "hasInterface",
    "$$isArray",
    "isObject",
    "isFunctionOrAsyncFunction",
    "$$logs",
    "message",
    "warn",
    "error",
    "trace"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Create namespace\n *\n * @ignore(qx.data)\n * @ignore(qx.data.IListData)\n * @ignore(qx.util.OOUtil)\n */\nif (!window.qx) {\n  window.qx = {};\n}\n\n/**\n * This wraps a function with a plain `function`; JavaScript does not allow methods which are defined\n * using object method shorthand (eg `{ construct() { this.base(arguments); }}`) to be used as constructors,\n * the constructor must be a plain old `function`.\n *\n * @param {Function} construct\n * @returns {Function}\n */\nfunction createPlainFunction(construct) {\n  return function () {\n    return construct.apply(this, [].slice.call(arguments));\n  };\n}\n\n/**\n * Bootstrap qx.Bootstrap to create myself later\n * This is needed for the API browser etc. to let them detect me\n */\nqx.Bootstrap = {\n  genericToString() {\n    return \"[Class \" + this.classname + \"]\";\n  },\n\n  createNamespace(name, object) {\n    var splits = name.split(\".\");\n    var part = splits[0];\n    var parent =\n      qx.$$namespaceRoot && qx.$$namespaceRoot[part]\n        ? qx.$$namespaceRoot\n        : window;\n\n    for (var i = 0, len = splits.length - 1; i < len; i++, part = splits[i]) {\n      if (!parent[part]) {\n        parent = parent[part] = {};\n      } else {\n        parent = parent[part];\n      }\n    }\n\n    // store object\n    parent[part] = object;\n\n    // return last part name (e.g. classname)\n    return part;\n  },\n\n  setDisplayName(fcn, classname, name) {\n    fcn.displayName = classname + \".\" + name + \"()\";\n  },\n\n  setDisplayNames(functionMap, classname) {\n    for (var name in functionMap) {\n      var value = functionMap[name];\n      if (value instanceof Function) {\n        value.displayName = classname + \".\" + (value.name || name) + \"()\";\n      }\n    }\n  },\n\n  base(args, varargs) {\n    if (qx.Bootstrap.DEBUG) {\n      if (!qx.Bootstrap.isFunction(args.callee.base)) {\n        throw new Error(\n          \"Cannot call super class. Method is not derived: \" +\n            args.callee.displayName\n        );\n      }\n    }\n\n    if (arguments.length === 1) {\n      return args.callee.base.call(this);\n    } else {\n      return args.callee.base.apply(\n        this,\n        Array.prototype.slice.call(arguments, 1)\n      );\n    }\n  },\n\n  define(name, config) {\n    var isStrictMode = function () {\n      return typeof this == \"undefined\";\n    };\n\n    if (!config) {\n      config = { statics: {} };\n    }\n\n    var clazz;\n    var proto = null;\n\n    qx.Bootstrap.setDisplayNames(config.statics, name);\n\n    if (config.members || config.extend) {\n      qx.Bootstrap.setDisplayNames(config.members, name + \".prototype\");\n\n      let construct = config.construct;\n      // Object methods include the method name as part of the signature (eg `construct() {}`),\n      //  whereas plain functions just have `function() {}`\n      if (construct && !construct.toString().match(/^function\\s*\\(/)) {\n        construct = createPlainFunction(construct);\n      }\n      clazz = construct || new Function();\n\n      this.extendClass(clazz, clazz, config.extend, name, basename);\n\n      var statics = config.statics || {};\n      // use keys to include the shadowed in IE\n      for (\n        var i = 0, keys = qx.Bootstrap.keys(statics), l = keys.length;\n        i < l;\n        i++\n      ) {\n        var key = keys[i];\n        clazz[key] = statics[key];\n      }\n\n      proto = clazz.prototype;\n      // Enable basecalls within constructor\n      proto.base = qx.Bootstrap.base;\n      proto.name = proto.classname = name;\n\n      var members = config.members || {};\n      var key, member;\n\n      // use keys to include the shadowed in IE\n      for (\n        var i = 0, keys = qx.Bootstrap.keys(members), l = keys.length;\n        i < l;\n        i++\n      ) {\n        key = keys[i];\n        member = members[key];\n\n        // Enable basecalls for methods\n        // Hint: proto[key] is not yet overwritten here\n        if (member instanceof Function && proto[key]) {\n          member.base = proto[key];\n        }\n\n        proto[key] = member;\n      }\n    } else {\n      clazz = config.statics || {};\n\n      // Merge class into former class (needed for 'optimize: [\"statics\"]')\n      if (qx.Bootstrap.$$registry && qx.Bootstrap.$$registry[name]) {\n        var formerClass = qx.Bootstrap.$$registry[name];\n\n        // Add/overwrite properties and return early if necessary\n        if (this.keys(clazz).length !== 0) {\n          // Execute defer to prevent too early overrides\n          if (config.defer) {\n            config.defer(clazz, proto);\n          }\n\n          for (var curProp in clazz) {\n            formerClass[curProp] = clazz[curProp];\n          }\n          return formerClass;\n        }\n      }\n    }\n\n    // Store type info\n    clazz.$$type = \"Class\";\n\n    // Attach toString\n    if (!clazz.hasOwnProperty(\"toString\")) {\n      clazz.toString = this.genericToString;\n    }\n\n    // Create namespace\n    var basename = name ? this.createNamespace(name, clazz) : \"\";\n\n    // Store names in constructor/object\n    clazz.classname = name;\n    if (!isStrictMode()) {\n      try {\n        clazz.name = name;\n      } catch (ex) {\n        // Nothing\n      }\n    }\n    clazz.basename = basename;\n    clazz.$$events = config.events;\n\n    // Execute defer section\n    if (config.defer) {\n      this.addPendingDefer(clazz, function () {\n        config.defer(clazz, proto);\n      });\n    }\n\n    // Store class reference in global class registry\n    if (name != null) {\n      qx.Bootstrap.$$registry[name] = clazz;\n    }\n\n    return clazz;\n  },\n\n  /**\n   * Tests whether an object is an instance of qx.core.Object without using instanceof - this\n   * is only for certain low level instances which would otherwise cause a circular, load time\n   * dependency\n   *\n   * @param object {Object?} the object to test\n   * @return {Boolean} true if object is an instance of qx.core.Object\n   */\n  isQxCoreObject(object) {\n    if (object === object.constructor) {\n      return false;\n    }\n    var clz = object.constructor;\n    while (clz) {\n      if (clz.classname === \"qx.core.Object\") {\n        return true;\n      }\n      clz = clz.superclass;\n    }\n    return false;\n  }\n};\n\n/**\n * Internal class that is responsible for bootstrapping the qooxdoo\n * framework at load time.\n */\nqx.Bootstrap.define(\"qx.Bootstrap\", {\n  statics: {\n    /** Timestamp of qooxdoo based application startup */\n    LOADSTART: qx.$$start || new Date(),\n\n    /**\n     * Mapping for early use of the qx.debug environment setting.\n     */\n    DEBUG: (function () {\n      // make sure to reflect all changes here to the environment class!\n      var debug = true;\n      if (qx.$$environment && qx.$$environment[\"qx.debug\"] === false) {\n        debug = false;\n      }\n      return debug;\n    })(),\n\n    /**\n     * Minimal accessor API for the environment settings given from the\n     * generator.\n     *\n     * WARNING: This method only should be used if the\n     * {@link qx.core.Environment} class is not loaded!\n     *\n     * @param key {String} The key to get the value from.\n     * @return {var} The value of the setting or <code>undefined</code>.\n     */\n    getEnvironmentSetting(key) {\n      if (qx.$$environment) {\n        return qx.$$environment[key];\n      }\n    },\n\n    /**\n     * Minimal mutator for the environment settings given from the generator.\n     * It checks for the existence of the environment settings and sets the\n     * key if its not given from the generator. If a setting is available from\n     * the generator, the setting will be ignored.\n     *\n     * WARNING: This method only should be used if the\n     * {@link qx.core.Environment} class is not loaded!\n     *\n     * @param key {String} The key of the setting.\n     * @param value {var} The value for the setting.\n     */\n    setEnvironmentSetting(key, value) {\n      if (!qx.$$environment) {\n        qx.$$environment = {};\n      }\n      if (qx.$$environment[key] === undefined) {\n        qx.$$environment[key] = value;\n      }\n    },\n\n    /**\n     * Creates a namespace and assigns the given object to it.\n     *\n     * @internal\n     * @signature function(name, object)\n     * @param name {String} The complete namespace to create. Typically, the last part is the class name itself\n     * @param object {Object} The object to attach to the namespace\n     * @return {String} last part of the namespace (which object is assigned to)\n     * @throws {Error} when the given object already exists.\n     */\n    createNamespace: qx.Bootstrap.createNamespace,\n\n    /**\n     * Offers the ability to change the root for creating namespaces from window to\n     * whatever object is given.\n     *\n     * @param root {Object} The root to use.\n     * @internal\n     */\n    setRoot(root) {\n      qx.$$namespaceRoot = root;\n    },\n\n    /**\n     * Call the same method of the super class.\n     *\n     * @signature function(args, varargs)\n     * @param args {arguments} the arguments variable of the calling method\n     * @param varargs {var} variable number of arguments passed to the overwritten function\n     * @return {var} the return value of the method of the base class.\n     */\n    base: qx.Bootstrap.base,\n\n    /**\n     * Define a new class using the qooxdoo class system.\n     * Lightweight version of {@link qx.Class#define} with less features.\n     *\n     * @signature function(name, config)\n     * @param name {String?} Name of the class. If null, the class will not be\n     *   attached to a namespace.\n     * @param config {Map ? null} Class definition structure. The configuration map has the following keys:\n     *     <table>\n     *       <tr><th>Name</th><th>Type</th><th>Description</th></tr>\n     *       <tr><th>extend</th><td>Class</td><td>The super class the current class inherits from.</td></tr>\n     *       <tr><th>construct</th><td>Function</td><td>The constructor of the class.</td></tr>\n     *       <tr><th>statics</th><td>Map</td><td>Map of static values / functions of the class.</td></tr>\n     *       <tr><th>members</th><td>Map</td><td>Map of instance members of the class.</td></tr>\n     *       <tr><th>defer</th><td>Function</td><td>Function that is called at the end of\n     *          processing the class declaration.</td></tr>\n     *     </table>\n     * @return {Class} The defined class.\n     */\n    define: qx.Bootstrap.define,\n\n    /**\n     * Tests whether an object is an instance of qx.core.Object without using instanceof - this\n     * is only for certain low level instances which would otherwise cause a circular, load time\n     * dependency\n     *\n     * @param object {Object?} the object to test\n     * @return {Boolean} true if object is an instance of qx.core.Object\n     */\n    isQxCoreObject: qx.Bootstrap.isQxCoreObject,\n\n    /**\n     * Sets the display name of the given function\n     *\n     * @signature function(fcn, classname, name)\n     * @param fcn {Function} the function to set the display name for\n     * @param classname {String} the name of the class the function is defined in\n     * @param name {String} the function name\n     */\n    setDisplayName: qx.Bootstrap.setDisplayName,\n\n    /**\n     * Set the names of all functions defined in the given map\n     *\n     * @signature function(functionMap, classname)\n     * @param functionMap {Object} a map with functions as values\n     * @param classname {String} the name of the class, the functions are\n     *   defined in\n     */\n    setDisplayNames: qx.Bootstrap.setDisplayNames,\n\n    /**\n     * This method will be attached to all classes to return\n     * a nice identifier for them.\n     *\n     * @internal\n     * @signature function()\n     * @return {String} The class identifier\n     */\n    genericToString: qx.Bootstrap.genericToString,\n\n    /**\n     * Inherit a clazz from a super class.\n     *\n     * This function differentiates between class and constructor because the\n     * constructor written by the user might be wrapped and the <code>base</code>\n     * property has to be attached to the constructor, while the <code>superclass</code>\n     * property has to be attached to the wrapped constructor.\n     *\n     * @param clazz {Function} The class's wrapped constructor\n     * @param construct {Function} The unwrapped constructor\n     * @param superClass {Function} The super class\n     * @param name {Function} fully qualified class name\n     * @param basename {Function} the base name\n     */\n    extendClass(clazz, construct, superClass, name, basename) {\n      var superproto = superClass ? superClass.prototype : null;\n\n      // Use helper function/class to save the unnecessary constructor call while\n      // setting up inheritance.\n      var helper = new Function();\n      helper.prototype = superproto;\n      var proto = new helper();\n\n      // Apply prototype to new helper instance\n      clazz.prototype = proto;\n\n      // Store names in prototype\n      proto.name = proto.classname = name;\n      proto.basename = basename;\n\n      /*\n        - Store base constructor to constructor-\n        - Store reference to extend class\n      */\n      construct.base = superClass;\n      clazz.superclass = superClass;\n\n      /*\n        - Store statics/constructor onto constructor/prototype\n        - Store correct constructor\n        - Store statics onto prototype\n      */\n      construct.self = clazz.constructor = proto.constructor = clazz;\n    },\n\n    /** Private list of classes which have a defer method that needs to be executed */\n    __pendingDefers: [],\n\n    /**\n     * Adds a callback for a class so that it's defer method can be called, either after all classes\n     * are loaded or when absolutely necessary because of load-time requirements of other classes.\n     *\n     * @param clazz {Class} Class to add a callback to\n     * @param cb {Function} Callback function\n     */\n    addPendingDefer(clazz, cb) {\n      if (qx.$$loader && qx.$$loader.delayDefer) {\n        this.__pendingDefers.push(clazz);\n        clazz.$$pendingDefer = cb;\n      } else {\n        cb.call(clazz);\n      }\n    },\n\n    /**\n     * Executes the defer methods for classes which are required by the dependency information in\n     * dbClassInfo (which is a map in the format generated by qxcompiler).  Defer methods are of course\n     * only executed once but they are always put off until absolutely necessary to avoid potential\n     * side effects and recursive and/or difficult to resolve dependencies.\n     *\n     * @param dbClassInfo {Object} qxcompiler map\n     */\n    executePendingDefers(dbClassInfo) {\n      var executeForDbClassInfo = function (dbClassInfo) {\n        if (dbClassInfo.environment) {\n          var required = dbClassInfo.environment.required;\n          if (required) {\n            for (var key in required) {\n              var info = required[key];\n              if (info.load && info.className) {\n                executeForClassName(info.className);\n              }\n            }\n          }\n        }\n        for (var key in dbClassInfo.dependsOn) {\n          var depInfo = dbClassInfo.dependsOn[key];\n          if (depInfo.require || depInfo.usage === \"dynamic\") {\n            executeForClassName(key);\n          }\n        }\n      };\n\n      var executeForClassName = function (className) {\n        var clazz = getByName(className);\n        if (!clazz) {\n          return;\n        }\n        if (clazz.$$deferComplete) {\n          return;\n        }\n        var dbClassInfo = clazz.$$dbClassInfo;\n        if (dbClassInfo) {\n          executeForDbClassInfo(dbClassInfo);\n        }\n        execute(clazz);\n      };\n\n      var execute = function (clazz) {\n        var cb = clazz.$$pendingDefer;\n        if (cb) {\n          delete clazz.$$pendingDefer;\n          clazz.$$deferComplete = true;\n          cb.call(clazz);\n        }\n      };\n\n      var getByName = function (name) {\n        var clazz = qx.Bootstrap.getByName(name);\n        if (!clazz) {\n          var splits = name.split(\".\");\n          var part = splits[0];\n          var root =\n            qx.$$namespaceRoot && qx.$$namespaceRoot[part]\n              ? qx.$$namespaceRoot\n              : window;\n          var tmp = root;\n\n          for (\n            var i = 0, len = splits.length - 1;\n            tmp && i < len;\n            i++, part = splits[i]\n          ) {\n            tmp = tmp[part];\n          }\n          if (tmp != root) {\n            clazz = tmp;\n          }\n        }\n        return clazz;\n      };\n\n      if (!dbClassInfo) {\n        var pendingDefers = this.__pendingDefers;\n        this.__pendingDefers = [];\n        pendingDefers.forEach(execute);\n        return;\n      }\n\n      executeForDbClassInfo(dbClassInfo);\n    },\n\n    /**\n     * Find a class by its name\n     *\n     * @param name {String} class name to resolve\n     * @return {Class} the class\n     */\n    getByName(name) {\n      return qx.Bootstrap.$$registry[name];\n    },\n\n    /** @type {Map} Stores all defined classes */\n    $$registry: {},\n\n    /*\n    ---------------------------------------------------------------------------\n      OBJECT UTILITY FUNCTIONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Get the number of own properties in the object.\n     *\n     * @param map {Object} the map\n     * @return {Integer} number of objects in the map\n     * @lint ignoreUnused(key)\n     */\n    objectGetLength(map) {\n      return qx.Bootstrap.keys(map).length;\n    },\n\n    /**\n     * Inserts all keys of the source object into the\n     * target objects. Attention: The target map gets modified.\n     *\n     * @param target {Object} target object\n     * @param source {Object} object to be merged\n     * @param overwrite {Boolean ? true} If enabled existing keys will be overwritten\n     * @return {Object} Target with merged values from the source object\n     */\n    objectMergeWith(target, source, overwrite) {\n      if (overwrite === undefined) {\n        overwrite = true;\n      }\n\n      for (var key in source) {\n        if (overwrite || target[key] === undefined) {\n          target[key] = source[key];\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * IE does not return \"shadowed\" keys even if they are defined directly\n     * in the object.\n     *\n     * @internal\n     * @type {String[]}\n     */\n    __shadowedKeys: [\n      \"isPrototypeOf\",\n      \"hasOwnProperty\",\n      \"toLocaleString\",\n      \"toString\",\n      \"valueOf\",\n      \"propertyIsEnumerable\",\n      \"constructor\"\n    ],\n\n    /**\n     * Get the keys of a map as array as returned by a \"for ... in\" statement.\n     *\n     * @signature function(map)\n     * @internal\n     * @param map {Object} the map\n     * @return {Array} array of the keys of the map\n     */\n    keys: {\n      ES5: Object.keys,\n\n      BROKEN_IE(map) {\n        if (\n          map === null ||\n          (typeof map !== \"object\" && typeof map !== \"function\")\n        ) {\n          throw new TypeError(\"Object.keys requires an object as argument.\");\n        }\n\n        var arr = [];\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        for (var key in map) {\n          if (hasOwnProperty.call(map, key)) {\n            arr.push(key);\n          }\n        }\n\n        // IE does not return \"shadowed\" keys even if they are defined directly\n        // in the object. This is incompatible with the ECMA standard!!\n        // This is why this checks are needed.\n        var shadowedKeys = qx.Bootstrap.__shadowedKeys;\n        for (var i = 0, a = shadowedKeys, l = a.length; i < l; i++) {\n          if (hasOwnProperty.call(map, a[i])) {\n            arr.push(a[i]);\n          }\n        }\n\n        return arr;\n      },\n\n      default(map) {\n        if (\n          map === null ||\n          (typeof map !== \"object\" && typeof map !== \"function\")\n        ) {\n          throw new TypeError(\"Object.keys requires an object as argument.\");\n        }\n\n        var arr = [];\n\n        var hasOwnProperty = Object.prototype.hasOwnProperty;\n        for (var key in map) {\n          if (hasOwnProperty.call(map, key)) {\n            arr.push(key);\n          }\n        }\n\n        return arr;\n      }\n    }[\n      typeof Object.keys === \"function\"\n        ? \"ES5\"\n        : (function () {\n            for (var key in { toString: 1 }) {\n              return key;\n            }\n          })() !== \"toString\"\n        ? \"BROKEN_IE\"\n        : \"default\"\n    ],\n\n    /**\n     * Mapping from JavaScript string representation of objects to names\n     * @internal\n     * @type {Map}\n     */\n    __classToTypeMap: {\n      \"[object String]\": \"String\",\n      \"[object Array]\": \"Array\",\n      \"[object Object]\": \"Object\",\n      \"[object RegExp]\": \"RegExp\",\n      \"[object Number]\": \"Number\",\n      \"[object Boolean]\": \"Boolean\",\n      \"[object Date]\": \"Date\",\n      \"[object Function]\": \"Function\",\n      \"[object AsyncFunction]\": \"Function\",\n      \"[object Error]\": \"Error\",\n      \"[object Blob]\": \"Blob\",\n      \"[object ArrayBuffer]\": \"ArrayBuffer\",\n      \"[object FormData]\": \"FormData\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      FUNCTION UTILITY FUNCTIONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns a function whose \"this\" is altered.\n     *\n     * *Syntax*\n     *\n     * <pre class='javascript'>qx.Bootstrap.bind(myFunction, [self, [varargs...]]);</pre>\n     *\n     * *Example*\n     *\n     * <pre class='javascript'>\n     * function myFunction()\n     * {\n     *   this.setStyle('color', 'red');\n     *   // note that 'this' here refers to myFunction, not an element\n     *   // we'll need to bind this function to the element we want to alter\n     * };\n     *\n     * var myBoundFunction = qx.Bootstrap.bind(myFunction, myElement);\n     * myBoundFunction(); // this will make the element myElement red.\n     * </pre>\n     *\n     * @param func {Function} Original function to wrap\n     * @param self {Object ? null} The object that the \"this\" of the function will refer to.\n     * @param varargs {arguments ? null} The arguments to pass to the function.\n     * @return {Function} The bound function.\n     */\n    bind(func, self, varargs) {\n      var fixedArgs = Array.prototype.slice.call(\n        arguments,\n        2,\n        arguments.length\n      );\n\n      return function () {\n        var args = Array.prototype.slice.call(arguments, 0, arguments.length);\n        return func.apply(self, fixedArgs.concat(args));\n      };\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STRING UTILITY FUNCTIONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Convert the first character of the string to upper case.\n     *\n     * @param str {String} the string\n     * @return {String} the string with an upper case first character\n     */\n    firstUp(str) {\n      return str.charAt(0).toUpperCase() + str.substr(1);\n    },\n\n    /**\n     * Convert the first character of the string to lower case.\n     *\n     * @param str {String} the string\n     * @return {String} the string with a lower case first character\n     */\n    firstLow(str) {\n      return str.charAt(0).toLowerCase() + str.substr(1);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      TYPE UTILITY FUNCTIONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Get the internal class of the value. See\n     * http://perfectionkills.com/instanceof-considered-harmful-or-how-to-write-a-robust-isarray/\n     * for details.\n     *\n     * @param value {var} value to get the class for\n     * @return {String} the internal class of the value\n     */\n    getClass(value) {\n      // The typeof null and undefined is \"object\" under IE8\n      if (value === undefined) {\n        return \"Undefined\";\n      } else if (value === null) {\n        return \"Null\";\n      }\n      var classString = Object.prototype.toString.call(value);\n      return (\n        qx.Bootstrap.__classToTypeMap[classString] || classString.slice(8, -1)\n      );\n    },\n\n    /**\n     * Whether the value is a string.\n     *\n     * @param value {var} Value to check.\n     * @return {Boolean} Whether the value is a string.\n     */\n    isString(value) {\n      // Added \"value !== null\" because IE throws an exception \"Object expected\"\n      // by executing \"value instanceof String\" if value is a DOM element that\n      // doesn't exist. It seems that there is an internal difference between a\n      // JavaScript null and a null returned from calling DOM.\n      // e.q. by document.getElementById(\"ReturnedNull\").\n      return (\n        value !== null &&\n        (typeof value === \"string\" ||\n          qx.Bootstrap.getClass(value) === \"String\" ||\n          value instanceof String ||\n          (!!value && !!value.$$isString))\n      );\n    },\n\n    /**\n     * Whether the value is an array.\n     *\n     * @param value {var} Value to check.\n     * @return {Boolean} Whether the value is an array.\n     */\n    isArray(value) {\n      // Added \"value !== null\" because IE throws an exception \"Object expected\"\n      // by executing \"value instanceof Array\" if value is a DOM element that\n      // doesn't exist. It seems that there is an internal difference between a\n      // JavaScript null and a null returned from calling DOM.\n      // e.q. by document.getElementById(\"ReturnedNull\").\n      return (\n        value !== null &&\n        (value instanceof Array ||\n          (value &&\n            qx.data &&\n            qx.data.IListData &&\n            qx.util.OOUtil.hasInterface(\n              value.constructor,\n              qx.data.IListData\n            )) ||\n          qx.Bootstrap.getClass(value) === \"Array\" ||\n          (!!value && !!value.$$isArray))\n      );\n    },\n\n    /**\n     * Whether the value is an object. Note that built-in types like Window are\n     * not reported to be objects.\n     *\n     * @param value {var} Value to check.\n     * @return {Boolean} Whether the value is an object.\n     */\n    isObject(value) {\n      return (\n        value !== undefined &&\n        value !== null &&\n        qx.Bootstrap.getClass(value) === \"Object\"\n      );\n    },\n\n    /**\n     * Whether the value is a function.\n     *\n     * @param value {var} Value to check.\n     * @return {Boolean} Whether the value is a function.\n     */\n    isFunction(value) {\n      return qx.Bootstrap.getClass(value) === \"Function\";\n    },\n\n    /**\n     * Whether the value is a function or an async function.\n     *\n     * @param value {var} Value to check.\n     * @return {Boolean} Whether the value is a function.\n     */\n    isFunctionOrAsyncFunction(value) {\n      var name = qx.Bootstrap.getClass(value);\n      return name === \"Function\" || name === \"AsyncFunction\";\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      LOGGING UTILITY FUNCTIONS\n    ---------------------------------------------------------------------------\n    */\n\n    $$logs: [],\n\n    /**\n     * Sending a message at level \"debug\" to the logger.\n     *\n     * @param object {Object} Contextual object (either instance or static class)\n     * @param message {var} Any number of arguments supported. An argument may\n     *   have any JavaScript data type. All data is serialized immediately and\n     *   does not keep references to other objects.\n     */\n    debug(object, message) {\n      qx.Bootstrap.$$logs.push([\"debug\", arguments]);\n    },\n\n    /**\n     * Sending a message at level \"info\" to the logger.\n     *\n     * @param object {Object} Contextual object (either instance or static class)\n     * @param message {var} Any number of arguments supported. An argument may\n     *   have any JavaScript data type. All data is serialized immediately and\n     *   does not keep references to other objects.\n     */\n    info(object, message) {\n      qx.Bootstrap.$$logs.push([\"info\", arguments]);\n    },\n\n    /**\n     * Sending a message at level \"warn\" to the logger.\n     *\n     * @param object {Object} Contextual object (either instance or static class)\n     * @param message {var} Any number of arguments supported. An argument may\n     *   have any JavaScript data type. All data is serialized immediately and\n     *   does not keep references to other objects.\n     */\n    warn(object, message) {\n      qx.Bootstrap.$$logs.push([\"warn\", arguments]);\n    },\n\n    /**\n     * Sending a message at level \"error\" to the logger.\n     *\n     * @param object {Object} Contextual object (either instance or static class)\n     * @param message {var} Any number of arguments supported. An argument may\n     *   have any JavaScript data type. All data is serialized immediately and\n     *   does not keep references to other objects.\n     */\n    error(object, message) {\n      qx.Bootstrap.$$logs.push([\"error\", arguments]);\n    },\n\n    /**\n     * Prints the current stack trace at level \"info\"\n     *\n     * @param object {Object} Contextual object (either instance or static class)\n     */\n    trace(object) {}\n  }\n});\n"
  ]
}