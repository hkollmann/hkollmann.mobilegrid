{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/root/Abstract.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MChildrenHandling",
    "MBlocker",
    "window",
    "MDesktop",
    "construct",
    "FocusHandler",
    "getInstance",
    "addRoot",
    "queue",
    "Visibility",
    "add",
    "initNativeHelp",
    "addListener",
    "__preventScrollWhenFocused",
    "properties",
    "appearance",
    "refine",
    "init",
    "enabled",
    "focusable",
    "globalCursor",
    "check",
    "nullable",
    "themeable",
    "apply",
    "event",
    "nativeContextMenu",
    "nativeHelp",
    "members",
    "__globalCursorStyleSheet",
    "isRootWidget",
    "getLayout",
    "_getLayout",
    "_applyGlobalCursor",
    "Environment",
    "select",
    "mshtml",
    "value",
    "old",
    "Stylesheet",
    "bom",
    "sheet",
    "createElement",
    "removeAllRules",
    "addRule",
    "element",
    "Cursor",
    "compile",
    "replace",
    "_applyNativeContextMenu",
    "removeListener",
    "_onNativeContextMenu",
    "e",
    "getTarget",
    "getNativeContextMenu",
    "preventDefault",
    "getKeyIdentifier",
    "target",
    "focusHandler",
    "isFocused",
    "el",
    "getContentElement",
    "nodeName",
    "getNodeName",
    "domEl",
    "getDomElement",
    "contentEditable",
    "dom",
    "Node",
    "getName",
    "getOriginalTarget",
    "indexOf",
    "_applyNativeHelp",
    "get",
    "Event",
    "removeNativeListener",
    "document",
    "addNativeListener",
    "destruct",
    "defer",
    "statics",
    "remap",
    "root",
    "Abstract"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,qBAAhB,EAAuC;AACrCC,IAAAA,IAAI,EAAE,UAD+B;AAErCC,IAAAA,MAAM,EAAEP,EAAE,CAACQ,EAAH,CAAMC,IAAN,CAAWC,MAFkB;AAIrCC,IAAAA,OAAO,EAAE,CACPX,EAAE,CAACQ,EAAH,CAAMC,IAAN,CAAWG,iBADJ,EAEPZ,EAAE,CAACQ,EAAH,CAAMC,IAAN,CAAWI,QAFJ,EAGPb,EAAE,CAACQ,EAAH,CAAMM,MAAN,CAAaC,QAHN,CAJ4B;;AAUrC;AACF;AACA;AACA;AACA;AAEEC,IAAAA,SAhBqC,uBAgBzB;AACV,+CADU,CAGV;;AACAhB,MAAAA,EAAE,CAACQ,EAAH,CAAMC,IAAN,CAAWQ,YAAX,CAAwBC,WAAxB,GAAsCC,OAAtC,CAA8C,IAA9C,EAJU,CAMV;;AACAnB,MAAAA,EAAE,CAACQ,EAAH,CAAMC,IAAN,CAAWW,KAAX,CAAiBC,UAAjB,CAA4BC,GAA5B,CAAgC,IAAhC;AAEA,WAAKC,cAAL;AAEA,WAAKC,WAAL,CAAiB,UAAjB,EAA6B,KAAKC,SAAlC,EAA8D,IAA9D;AACD,KA5BoC;;AA8BrC;AACF;AACA;AACA;AACA;AAEEC,IAAAA,UAAU,EAAE;AACV;AACAC,MAAAA,UAAU,EAAE;AACVC,QAAAA,MAAM,EAAE,IADE;AAEVC,QAAAA,IAAI,EAAE;AAFI,OAFF;AAOV;AACAC,MAAAA,OAAO,EAAE;AACPF,QAAAA,MAAM,EAAE,IADD;AAEPC,QAAAA,IAAI,EAAE;AAFC,OARC;AAaV;AACAE,MAAAA,SAAS,EAAE;AACTH,QAAAA,MAAM,EAAE,IADC;AAETC,QAAAA,IAAI,EAAE;AAFG,OAdD;;AAmBV;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIG,MAAAA,YAAY,EAAE;AACZC,QAAAA,KAAK,EAAE,QADK;AAEZC,QAAAA,QAAQ,EAAE,IAFE;AAGZC,QAAAA,SAAS,EAAE,IAHC;AAIZC,QAAAA,KAAK,EAAE,oBAJK;AAKZC,QAAAA,KAAK,EAAE;AALK,OA9CJ;;AAsDV;AACJ;AACA;AACA;AACA;AACIC,MAAAA,iBAAiB,EAAE;AACjBV,QAAAA,MAAM,EAAE,IADS;AAEjBC,QAAAA,IAAI,EAAE;AAFW,OA3DT;;AAgEV;AACJ;AACA;AACA;AACA;AACIU,MAAAA,UAAU,EAAE;AACVN,QAAAA,KAAK,EAAE,SADG;AAEVJ,QAAAA,IAAI,EAAE,KAFI;AAGVO,QAAAA,KAAK,EAAE;AAHG;AArEF,KApCyB;;AAgHrC;AACF;AACA;AACA;AACA;AAEEI,IAAAA,OAAO,EAAE;AACPC,MAAAA,SAAwB,EAAE,IADnB;AAGP;AACAC,MAAAA,YAJO,0BAIQ;AACb,eAAO,IAAP;AACD,OANM;;AAQP;AACJ;AACA;AACA;AACA;AACIC,MAAAA,SAbO,uBAaK;AACV,eAAO,KAAKC,UAAL,EAAP;AACD,OAfM;AAiBP;AACAC,MAAAA,kBAAkB,EAAE7C,EAAE,CAACS,IAAH,CAAQqC,WAAR,CAAoBC,MAApB,CAA2B,aAA3B,EAA0C;AAC5DC,QAAAA,MAD4D,kBACrDC,KADqD,EAC9CC,GAD8C,EACzC,CACjB;AACD,SAH2D;AAK5D;AACA;AAN4D,qCAOpDD,KAPoD,EAO7CC,GAP6C,EAOxC;AAClB,cAAIC,UAAU,GAAGnD,EAAE,CAACoD,GAAH,CAAOD,UAAxB;AAEA,cAAIE,KAAK,GAAG,KAAKZ,SAAjB;;AACA,cAAI,CAACY,KAAL,EAAY;AACV,iBAAKZ,SAAL,GAAgCY,KAAK,GAAGF,UAAU,CAACG,aAAX,EAAxC;AACD;;AAEDH,UAAAA,UAAU,CAACI,cAAX,CAA0BF,KAA1B;;AAEA,cAAIJ,KAAJ,EAAW;AACTE,YAAAA,UAAU,CAACK,OAAX,CACEH,KADF,EAEE,GAFF,EAGErD,EAAE,CAACoD,GAAH,CAAOK,OAAP,CAAeC,MAAf,CAAsBC,OAAtB,CAA8BV,KAA9B,EAAqCW,OAArC,CAA6C,GAA7C,EAAkD,EAAlD,IACE,aAJJ;AAMD;AACF;AAzB2D,OAA1C,CAlBb;AA8CP;AACAC,MAAAA,uBA/CO,mCA+CiBZ,KA/CjB,EA+CwBC,GA/CxB,EA+C6B;AAClC,YAAID,KAAJ,EAAW;AACT,eAAKa,cAAL,CACE,aADF,EAEE,KAAKC,oBAFP,EAGE,IAHF,EAIE,IAJF;AAMD,SAPD,MAOO;AACL,eAAKvC,WAAL,CAAiB,aAAjB,EAAgC,KAAKuC,oBAArC,EAA2D,IAA3D,EAAiE,IAAjE;AACD;AACF,OA1DM;;AA4DP;AACJ;AACA;AACA;AACA;AACIA,MAAAA,oBAjEO,gCAiEcC,CAjEd,EAiEiB;AACtB,YAAIA,CAAC,CAACC,SAAF,GAAcC,oBAAd,EAAJ,EAA0C;AACxC;AACD;;AACDF,QAAAA,CAAC,CAACG,cAAF;AACD,OAtEM;;AAwEP;AACJ;AACA;AACA;AACA;AACI1C,MAAAA,SA7EO,qBA6EoBuC,CA7EpB,EA6EuB;AAC5B;AACA,YAAIA,CAAC,CAACI,gBAAF,OAAyB,OAA7B,EAAsC;AACpC;AACD;;AAED,YAAIC,MAAM,GAAGL,CAAC,CAACC,SAAF,EAAb,CAN4B,CAQ5B;;AACA,YAAIK,YAAY,GAAGtE,EAAE,CAACQ,EAAH,CAAMC,IAAN,CAAWQ,YAAX,CAAwBC,WAAxB,EAAnB;;AACA,YAAI,CAACoD,YAAY,CAACC,SAAb,CAAuBF,MAAvB,CAAL,EAAqC;AACnC;AACD,SAZ2B,CAc5B;;;AACA,YAAIG,EAAE,GAAGH,MAAM,CAACI,iBAAP,EAAT;AACA,YAAIC,QAAQ,GAAGF,EAAE,CAACG,WAAH,EAAf;AACA,YAAIC,KAAK,GAAGJ,EAAE,CAACK,aAAH,EAAZ;;AACA,YACEH,QAAQ,KAAK,OAAb,IACAA,QAAQ,KAAK,UADb,IAECE,KAAK,IAAIA,KAAK,CAACE,eAAN,KAA0B,MAHtC,EAIE;AACA;AACD,SAxB2B,CA0B5B;;;AACAJ,QAAAA,QAAQ,GAAG1E,EAAE,CAAC+E,GAAH,CAAOC,IAAP,CAAYC,OAAZ,CAAoBjB,CAAC,CAACkB,iBAAF,EAApB,CAAX;;AACA,YACER,QAAQ,IACR,CAAC,OAAD,EAAU,UAAV,EAAsB,QAAtB,EAAgC,GAAhC,EAAqCS,OAArC,CAA6CT,QAA7C,IAAyD,CAAC,CAF5D,EAGE;AACA;AACD,SAjC2B,CAmC5B;;;AACAV,QAAAA,CAAC,CAACG,cAAF;AACD,OAlHM;AAoHP;AACAiB,MAAAA,gBArHO,4BAqHUnC,KArHV,EAqHiBC,GArHjB,EAqHsB;AAC3B,YAAIlD,EAAE,CAACS,IAAH,CAAQqC,WAAR,CAAoBuC,GAApB,CAAwB,YAAxB,CAAJ,EAA2C;AACzC,cAAInC,GAAG,KAAK,KAAZ,EAAmB;AACjBlD,YAAAA,EAAE,CAACoD,GAAH,CAAOkC,KAAP,CAAaC,oBAAb,CAAkCC,QAAlC,EAA4C,MAA5C,EAAoD,YAAY;AAC9D,qBAAO,KAAP;AACD,aAFD;AAGD;;AAED,cAAIvC,KAAK,KAAK,KAAd,EAAqB;AACnBjD,YAAAA,EAAE,CAACoD,GAAH,CAAOkC,KAAP,CAAaG,iBAAb,CAA+BD,QAA/B,EAAyC,MAAzC,EAAiD,YAAY;AAC3D,qBAAO,KAAP;AACD,aAFD;AAGD;AACF;AACF;AAnIM,KAtH4B;;AA4PrC;AACF;AACA;AACA;AACA;AAEEE,IAAAA,QAlQqC,sBAkQ1B;AACT,WAAKjD,SAAL,GAAgC,IAAhC;AACD,KApQoC;;AAsQrC;AACF;AACA;AACA;AACA;AAEEkD,IAAAA,KA5QqC,iBA4Q/BC,OA5Q+B,EA4QtBpD,OA5QsB,EA4Qb;AACtBxC,MAAAA,EAAE,CAACQ,EAAH,CAAMC,IAAN,CAAWG,iBAAX,CAA6BiF,KAA7B,CAAmCrD,OAAnC;AACD;AA9QoC,GAAvC;AAtBAxC,EAAAA,EAAE,CAACQ,EAAH,CAAMsF,IAAN,CAAWC,QAAX,CAAoB5F,aAApB,GAAoCA,aAApC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Shared implementation for all root widgets.\n */\nqx.Class.define(\"qx.ui.root.Abstract\", {\n  type: \"abstract\",\n  extend: qx.ui.core.Widget,\n\n  include: [\n    qx.ui.core.MChildrenHandling,\n    qx.ui.core.MBlocker,\n    qx.ui.window.MDesktop\n  ],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    // Register as root for the focus handler\n    qx.ui.core.FocusHandler.getInstance().addRoot(this);\n\n    // Directly add to visibility queue\n    qx.ui.core.queue.Visibility.add(this);\n\n    this.initNativeHelp();\n\n    this.addListener(\"keypress\", this.__preventScrollWhenFocused, this);\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"root\"\n    },\n\n    // overridden\n    enabled: {\n      refine: true,\n      init: true\n    },\n\n    // overridden\n    focusable: {\n      refine: true,\n      init: true\n    },\n\n    /**\n     *  Sets the global cursor style\n     *\n     *  The name of the cursor to show when the mouse pointer is over the widget.\n     *  This is any valid CSS2 cursor name defined by W3C.\n     *\n     *  The following values are possible:\n     *  <ul><li>default</li>\n     *  <li>crosshair</li>\n     *  <li>pointer (hand is the ie name and will mapped to pointer in non-ie).</li>\n     *  <li>move</li>\n     *  <li>n-resize</li>\n     *  <li>ne-resize</li>\n     *  <li>e-resize</li>\n     *  <li>se-resize</li>\n     *  <li>s-resize</li>\n     *  <li>sw-resize</li>\n     *  <li>w-resize</li>\n     *  <li>nw-resize</li>\n     *  <li>text</li>\n     *  <li>wait</li>\n     *  <li>help </li>\n     *  <li>url([file]) = self defined cursor, file should be an ANI- or CUR-type</li>\n     *  </ul>\n     *\n     * Please note that in the current implementation this has no effect in IE.\n     */\n    globalCursor: {\n      check: \"String\",\n      nullable: true,\n      themeable: true,\n      apply: \"_applyGlobalCursor\",\n      event: \"changeGlobalCursor\"\n    },\n\n    /**\n     * Whether the native context menu should be globally enabled. Setting this\n     * property to <code>true</code> will allow native context menus in all\n     * child widgets of this root.\n     */\n    nativeContextMenu: {\n      refine: true,\n      init: false\n    },\n\n    /**\n     * If the user presses F1 in IE by default the onhelp event is fired and\n     * IEâ€™s help window is opened. Setting this property to <code>false</code>\n     * prevents this behavior.\n     */\n    nativeHelp: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyNativeHelp\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __globalCursorStyleSheet: null,\n\n    // overridden\n    isRootWidget() {\n      return true;\n    },\n\n    /**\n     * Get the widget's layout manager.\n     *\n     * @return {qx.ui.layout.Abstract} The widget's layout manager\n     */\n    getLayout() {\n      return this._getLayout();\n    },\n\n    // property apply\n    _applyGlobalCursor: qx.core.Environment.select(\"engine.name\", {\n      mshtml(value, old) {\n        // empty implementation\n      },\n\n      // This would be the optimal solution.\n      // For performance reasons this is impractical in IE\n      default(value, old) {\n        var Stylesheet = qx.bom.Stylesheet;\n\n        var sheet = this.__globalCursorStyleSheet;\n        if (!sheet) {\n          this.__globalCursorStyleSheet = sheet = Stylesheet.createElement();\n        }\n\n        Stylesheet.removeAllRules(sheet);\n\n        if (value) {\n          Stylesheet.addRule(\n            sheet,\n            \"*\",\n            qx.bom.element.Cursor.compile(value).replace(\";\", \"\") +\n              \" !important\"\n          );\n        }\n      }\n    }),\n\n    // property apply\n    _applyNativeContextMenu(value, old) {\n      if (value) {\n        this.removeListener(\n          \"contextmenu\",\n          this._onNativeContextMenu,\n          this,\n          true\n        );\n      } else {\n        this.addListener(\"contextmenu\", this._onNativeContextMenu, this, true);\n      }\n    },\n\n    /**\n     * Stops the <code>contextmenu</code> event from showing the native context menu\n     *\n     * @param e {qx.event.type.Mouse} The event object\n     */\n    _onNativeContextMenu(e) {\n      if (e.getTarget().getNativeContextMenu()) {\n        return;\n      }\n      e.preventDefault();\n    },\n\n    /**\n     * Fix unexpected scrolling when pressing \"Space\" while a widget is focused.\n     *\n     * @param e {qx.event.type.KeySequence} The KeySequence event\n     */\n    __preventScrollWhenFocused(e) {\n      // Require space pressed\n      if (e.getKeyIdentifier() !== \"Space\") {\n        return;\n      }\n\n      var target = e.getTarget();\n\n      // Require focused. Allow scroll when container or root widget.\n      var focusHandler = qx.ui.core.FocusHandler.getInstance();\n      if (!focusHandler.isFocused(target)) {\n        return;\n      }\n\n      // Require that widget does not accept text input\n      var el = target.getContentElement();\n      var nodeName = el.getNodeName();\n      var domEl = el.getDomElement();\n      if (\n        nodeName === \"input\" ||\n        nodeName === \"textarea\" ||\n        (domEl && domEl.contentEditable === \"true\")\n      ) {\n        return;\n      }\n\n      // do not prevent \"space\" key for natively focusable elements\n      nodeName = qx.dom.Node.getName(e.getOriginalTarget());\n      if (\n        nodeName &&\n        [\"input\", \"textarea\", \"select\", \"a\"].indexOf(nodeName) > -1\n      ) {\n        return;\n      }\n\n      // Ultimately, prevent default\n      e.preventDefault();\n    },\n\n    // property apply\n    _applyNativeHelp(value, old) {\n      if (qx.core.Environment.get(\"event.help\")) {\n        if (old === false) {\n          qx.bom.Event.removeNativeListener(document, \"help\", function () {\n            return false;\n          });\n        }\n\n        if (value === false) {\n          qx.bom.Event.addNativeListener(document, \"help\", function () {\n            return false;\n          });\n        }\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this.__globalCursorStyleSheet = null;\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer(statics, members) {\n    qx.ui.core.MChildrenHandling.remap(members);\n  }\n});\n"
  ]
}