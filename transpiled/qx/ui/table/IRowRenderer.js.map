{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/table/IRowRenderer.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Interface",
    "define",
    "members",
    "updateDataRowElement",
    "rowInfo",
    "rowElement",
    "getRowHeightStyle",
    "height",
    "createRowStyle",
    "getRowClass",
    "ui",
    "table",
    "IRowRenderer"
  ],
  "mappings": ";;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,SAAH,CAAaC,MAAb,CAAoB,0BAApB,EAAgD;AAC9CC,IAAAA,OAAO,EAAE;AACP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,MAAAA,oBApBO,gCAoBcC,OApBd,EAoBuBC,UApBvB,EAoBmC,CAAE,CApBrC;;AAsBP;AACJ;AACA;AACA;AACA;AACIC,MAAAA,iBA3BO,6BA2BWC,MA3BX,EA2BmB,CAAE,CA3BrB;;AA6BP;AACJ;AACA;AACA;AACA;AACA;AACIC,MAAAA,cAnCO,0BAmCQJ,OAnCR,EAmCiB,CAAE,CAnCnB;;AAqCP;AACJ;AACA;AACA;AACA;AACA;AACIK,MAAAA,WA3CO,uBA2CKL,OA3CL,EA2Cc,CAAE;AA3ChB;AADqC,GAAhD;AArBAR,EAAAA,EAAE,CAACc,EAAH,CAAMC,KAAN,CAAYC,YAAZ,CAAyBb,aAAzB,GAAyCA,aAAzC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n\n************************************************************************ */\n\n/**\n * Interface for a row renderer.\n */\nqx.Interface.define(\"qx.ui.table.IRowRenderer\", {\n  members: {\n    /**\n     * Updates a data row.\n     *\n     * The rowInfo map contains the following properties:\n     * <ul>\n     * <li>rowData (var): contains the row data for the row.\n     *   The kind of this object depends on the table model, see\n     *   {@link ITableModel#getRowData()}</li>\n     * <li>row (int): the model index of the row.</li>\n     * <li>selected (boolean): whether a cell in this row is selected.</li>\n     * <li>focusedRow (boolean): whether the focused cell is in this row.</li>\n     * <li>table (qx.ui.table.Table): the table the row belongs to.</li>\n     * </ul>\n     *\n     * @abstract\n     * @param rowInfo {Map} A map containing the information about the row to\n     *      update.\n     * @param rowElement {Element} the DOM element that renders the data row.\n     */\n    updateDataRowElement(rowInfo, rowElement) {},\n\n    /**\n     * Get the row's height CSS style taking the box model into account\n     *\n     * @param height {Integer} The row's (border-box) height in pixel\n     */\n    getRowHeightStyle(height) {},\n\n    /**\n     * Create a style string, which will be set as the style property of the row.\n     *\n     * @param rowInfo {Map} A map containing the information about the row to\n     *      update. See {@link #updateDataRowElement} for more information.\n     */\n    createRowStyle(rowInfo) {},\n\n    /**\n     * Create a HTML class string, which will be set as the class property of the row.\n     *\n     * @param rowInfo {Map} A map containing the information about the row to\n     *      update. See {@link #updateDataRowElement} for more information.\n     */\n    getRowClass(rowInfo) {}\n  }\n});\n"
  ]
}