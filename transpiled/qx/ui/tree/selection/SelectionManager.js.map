{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/tree/selection/SelectionManager.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "selection",
    "ScrollArea",
    "members",
    "_getSelectableLocationY",
    "item",
    "computed",
    "getBounds",
    "top",
    "_getWidget",
    "getItemTop",
    "bottom",
    "height",
    "_isSelectable",
    "_isItemSelectable",
    "tree",
    "AbstractTreeItem",
    "_getSelectableFromPointerEvent",
    "event",
    "getTreeItem",
    "getTarget",
    "getSelectables",
    "all",
    "oldUserInteraction",
    "_userInteraction",
    "widget",
    "result",
    "getRoot",
    "items",
    "getItems",
    "getHideRoot",
    "i",
    "length",
    "push",
    "_getSelectableRange",
    "item1",
    "item2",
    "selectables",
    "item1Index",
    "indexOf",
    "item2Index",
    "slice",
    "_getFirstSelectable",
    "_getLastSelectable",
    "_getRelatedSelectable",
    "relation",
    "related",
    "getPreviousNodeOf",
    "getNextNodeOf",
    "SelectionManager"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Responsible for the selection management of the {@link qx.ui.tree.Tree}.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.tree.selection.SelectionManager\", {\n  extend: qx.ui.core.selection.ScrollArea,\n\n  members: {\n    // overridden\n    _getSelectableLocationY(item) {\n      var computed = item.getBounds();\n      if (computed) {\n        var top = this._getWidget().getItemTop(item);\n        return {\n          top: top,\n          bottom: top + computed.height\n        };\n      }\n    },\n\n    // overridden\n    _isSelectable(item) {\n      return (\n        this._isItemSelectable(item) &&\n        item instanceof qx.ui.tree.core.AbstractTreeItem\n      );\n    },\n\n    // overridden\n    _getSelectableFromPointerEvent(event) {\n      return this._getWidget().getTreeItem(event.getTarget());\n    },\n\n    // overridden\n    getSelectables(all) {\n      // if only the user selectables should be returned\n      var oldUserInteraction = false;\n      if (!all) {\n        oldUserInteraction = this._userInteraction;\n        this._userInteraction = true;\n      }\n\n      var widget = this._getWidget();\n      var result = [];\n\n      if (widget.getRoot() != null) {\n        var items = widget\n          .getRoot()\n          .getItems(true, !!all, widget.getHideRoot());\n\n        for (var i = 0; i < items.length; i++) {\n          if (this._isSelectable(items[i])) {\n            result.push(items[i]);\n          }\n        }\n      }\n\n      // reset to the former user interaction state\n      this._userInteraction = oldUserInteraction;\n\n      return result;\n    },\n\n    // overridden\n    _getSelectableRange(item1, item2) {\n      // Fast path for identical items\n      if (item1 === item2) {\n        return [item1];\n      }\n\n      var selectables = this.getSelectables();\n\n      var item1Index = selectables.indexOf(item1);\n      var item2Index = selectables.indexOf(item2);\n\n      if (item1Index < 0 || item2Index < 0) {\n        return [];\n      }\n\n      if (item1Index < item2Index) {\n        return selectables.slice(item1Index, item2Index + 1);\n      } else {\n        return selectables.slice(item2Index, item1Index + 1);\n      }\n    },\n\n    // overridden\n    _getFirstSelectable() {\n      return this.getSelectables()[0] || null;\n    },\n\n    // overridden\n    _getLastSelectable() {\n      var selectables = this.getSelectables();\n      if (selectables.length > 0) {\n        return selectables[selectables.length - 1];\n      } else {\n        return null;\n      }\n    },\n\n    // overridden\n    _getRelatedSelectable(item, relation) {\n      var widget = this._getWidget();\n      var related = null;\n\n      switch (relation) {\n        case \"above\":\n          related = widget.getPreviousNodeOf(item, false);\n          break;\n\n        case \"under\":\n          related = widget.getNextNodeOf(item, false);\n          break;\n\n        case \"left\":\n        case \"right\":\n          break;\n      }\n\n      if (!related) {\n        return null;\n      }\n\n      if (this._isSelectable(related)) {\n        return related;\n      } else {\n        return this._getRelatedSelectable(related, relation);\n      }\n    }\n  }\n});\n"
  ]
}