{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/tree/core/AbstractTreeItem.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "tree",
    "core",
    "AbstractItem",
    "type",
    "construct",
    "label",
    "__children",
    "properties",
    "parent",
    "check",
    "nullable",
    "members",
    "__childrenContainer",
    "getTree",
    "treeItem",
    "getParent",
    "getLayoutParent",
    "scroll",
    "ScrollPane",
    "_applyOpen",
    "value",
    "old",
    "hasChildren",
    "getChildrenContainer",
    "setVisibility",
    "_shouldShowOpenSymbol",
    "open",
    "getChildControl",
    "getRootOpenClose",
    "getHideRoot",
    "getRoot",
    "isOpenable",
    "_updateIndent",
    "getLevel",
    "level",
    "addState",
    "state",
    "children",
    "_getChildren",
    "i",
    "l",
    "length",
    "child",
    "removeState",
    "container",
    "Composite",
    "layout",
    "VBox",
    "set",
    "visibility",
    "isOpen",
    "hasChildrenContainer",
    "getParentChildrenContainer",
    "getChildren",
    "getItems",
    "recursive",
    "invisible",
    "ignoreFirst",
    "items",
    "addChildren",
    "concat",
    "chl",
    "recursiveAddToWidgetQueue",
    "queue",
    "Widget",
    "add",
    "__addChildrenToParent",
    "_addAfter",
    "varargs",
    "arguments",
    "oldParent",
    "remove",
    "setParent",
    "push",
    "fireNonBubblingEvent",
    "event",
    "Data",
    "addAt",
    "index",
    "nextItem",
    "addBefore",
    "addAfter",
    "lang",
    "Array",
    "insertAt",
    "before",
    "indexOf",
    "after",
    "addAtBegin",
    "warn",
    "treeItemChildContainer",
    "removeAt",
    "item",
    "removeAll",
    "destruct",
    "_disposeArray",
    "_disposeObjects",
    "AbstractTreeItem"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,kCAAhB,EAAoD;AAClDC,IAAAA,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWC,IAAX,CAAgBC,YAD0B;AAElDC,IAAAA,IAAI,EAAE,UAF4C;AAIlDC,IAAAA,SAJkD,qBAIxCC,KAJwC,EAIjC;AACf,0DAAMA,KAAN;AAEA,WAAKC,SAAL,GAAkB,EAAlB;AACD,KARiD;AAUlDC,IAAAA,UAAU,EAAE;AACV;AACJ;AACA;AACIC,MAAAA,MAAM,EAAE;AACNC,QAAAA,KAAK,EAAE,kCADD;AAENC,QAAAA,QAAQ,EAAE;AAFJ;AAJE,KAVsC;AAoBlDC,IAAAA,OAAO,EAAE;AACPL,MAAAA,SAAU,EAAE,IADL;AAEPM,MAAAA,SAAmB,EAAE,IAFd;;AAIP;AACJ;AACA;AACA;AACA;AACA;AACIC,MAAAA,OAVO,qBAUG;AACR,YAAIC,QAAQ,GAAG,IAAf;;AACA,eAAOA,QAAQ,CAACC,SAAT,EAAP,EAA6B;AAC3BD,UAAAA,QAAQ,GAAGA,QAAQ,CAACC,SAAT,EAAX;AACD;;AAED,YAAIf,IAAI,GAAGc,QAAQ,CAACE,eAAT,KACPF,QAAQ,CAACE,eAAT,GAA2BA,eAA3B,EADO,GAEP,CAFJ;;AAGA,YAAIhB,IAAI,IAAIA,IAAI,YAAYR,EAAE,CAACO,EAAH,CAAME,IAAN,CAAWgB,MAAX,CAAkBC,UAA9C,EAA0D;AACxD,iBAAOlB,IAAI,CAACgB,eAAL,EAAP;AACD;;AACD,eAAO,IAAP;AACD,OAvBM;AAyBP;AACAG,MAAAA,UA1BO,sBA0BIC,KA1BJ,EA0BWC,GA1BX,EA0BgB;AACrB,YAAI,KAAKC,WAAL,EAAJ,EAAwB;AACtB,eAAKC,oBAAL,GAA4BC,aAA5B,CACEJ,KAAK,GAAG,SAAH,GAAe,UADtB;AAGD;;AAED,oFAAiBA,KAAjB,EAAwBC,GAAxB;AACD,OAlCM;;AAoCP;AACJ;AACA;AACA;AACA;AAEI;AACAI,MAAAA,qBA3CO,mCA2CiB;AACtB,YAAIC,IAAI,GAAG,KAAKC,eAAL,CAAqB,MAArB,EAA6B,IAA7B,CAAX;;AACA,YAAI,CAACD,IAAL,EAAW;AACT,iBAAO,KAAP;AACD;;AAED,YAAI1B,IAAI,GAAG,KAAKa,OAAL,EAAX;;AACA,YAAI,CAACb,IAAI,CAAC4B,gBAAL,EAAL,EAA8B;AAC5B,cAAI5B,IAAI,CAAC6B,WAAL,EAAJ,EAAwB;AACtB,gBAAI7B,IAAI,CAAC8B,OAAL,MAAkB,KAAKf,SAAL,EAAtB,EAAwC;AACtC,qBAAO,KAAP;AACD;AACF,WAJD,MAIO;AACL,gBAAIf,IAAI,CAAC8B,OAAL,MAAkB,IAAtB,EAA4B;AAC1B,qBAAO,KAAP;AACD;AACF;AACF;;AAED,eAAO,KAAKC,UAAL,EAAP;AACD,OA/DM;AAiEP;AACAC,MAAAA,aAlEO,2BAkES;AACd,YAAI,CAAC,KAAKnB,OAAL,EAAL,EAAqB;AACnB;AACD;;AAED;AACD,OAxEM;AA0EP;AACAoB,MAAAA,QA3EO,sBA2EI;AACT,YAAIjC,IAAI,GAAG,KAAKa,OAAL,EAAX;;AACA,YAAI,CAACb,IAAL,EAAW;AACT;AACD;;AAED,YAAIc,QAAQ,GAAG,IAAf;AACA,YAAIoB,KAAK,GAAG,CAAC,CAAb;;AAEA,eAAOpB,QAAP,EAAiB;AACfA,UAAAA,QAAQ,GAAGA,QAAQ,CAACC,SAAT,EAAX;AACAmB,UAAAA,KAAK,IAAI,CAAT;AACD,SAZQ,CAcT;;;AACA,YAAIlC,IAAI,CAAC6B,WAAL,EAAJ,EAAwB;AACtBK,UAAAA,KAAK,IAAI,CAAT;AACD;;AAED,YAAI,CAAClC,IAAI,CAAC4B,gBAAL,EAAL,EAA8B;AAC5BM,UAAAA,KAAK,IAAI,CAAT;AACD;;AAED,eAAOA,KAAP;AACD,OAnGM;;AAqGP;AACJ;AACA;AACA;AACA;AAEI;AACAC,MAAAA,QA5GO,oBA4GEC,KA5GF,EA4GS;AACd,kFAAeA,KAAf;;AAEA,YAAIC,QAAQ,GAAG,KAAKC,YAAL,EAAf;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCF,CAAC,GAAGC,CAAzC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,cAAIG,KAAK,GAAGL,QAAQ,CAACE,CAAD,CAApB;;AACA,cAAIG,KAAK,CAACP,QAAV,EAAoB;AAClBE,YAAAA,QAAQ,CAACE,CAAD,CAAR,CAAYJ,QAAZ,CAAqBC,KAArB;AACD;AACF;AACF,OAtHM;AAwHP;AACAO,MAAAA,WAzHO,uBAyHKP,KAzHL,EAyHY;AACjB,qFAAkBA,KAAlB;;AAEA,YAAIC,QAAQ,GAAG,KAAKC,YAAL,EAAf;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCF,CAAC,GAAGC,CAAzC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C,cAAIG,KAAK,GAAGL,QAAQ,CAACE,CAAD,CAApB;;AACA,cAAIG,KAAK,CAACC,WAAV,EAAuB;AACrBN,YAAAA,QAAQ,CAACE,CAAD,CAAR,CAAYI,WAAZ,CAAwBP,KAAxB;AACD;AACF;AACF,OAnIM;;AAqIP;AACJ;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACIb,MAAAA,oBAjJO,kCAiJgB;AACrB,YAAI,CAAC,KAAKX,SAAV,EAA+B;AAC7B,eAAKA,SAAL,GAA2B,IAAIpB,EAAE,CAACO,EAAH,CAAM6C,SAAN,CAAgBC,SAApB,CACzB,IAAIrD,EAAE,CAACO,EAAH,CAAM+C,MAAN,CAAaC,IAAjB,EADyB,EAEzBC,GAFyB,CAErB;AACJC,YAAAA,UAAU,EAAE,KAAKC,MAAL,KAAgB,SAAhB,GAA4B;AADpC,WAFqB,CAA3B;AAKD;;AAED,eAAO,KAAKtC,SAAZ;AACD,OA3JM;;AA6JP;AACJ;AACA;AACA;AACA;AACIuC,MAAAA,oBAlKO,kCAkKgB;AACrB,eAAO,KAAKvC,SAAZ;AACD,OApKM;;AAsKP;AACJ;AACA;AACA;AACA;AACA;AACA;AACIwC,MAAAA,0BA7KO,wCA6KsB;AAC3B,YAAI,KAAKrC,SAAL,EAAJ,EAAsB;AACpB,iBAAO,KAAKA,SAAL,GAAiBQ,oBAAjB,EAAP;AACD,SAFD,MAEO,IAAI,KAAKP,eAAL,EAAJ,EAA4B;AACjC,iBAAO,KAAKA,eAAL,EAAP;AACD,SAFM,MAEA;AACL,iBAAO,IAAP;AACD;AACF,OArLM;;AAuLP;AACJ;AACA;AACA;AACA;;AAEI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACIqC,MAAAA,WArMO,yBAqMO;AACZ,eAAO,KAAK/C,SAAZ;AACD,OAvMM;AAyMP;AACAgB,MAAAA,WA1MO,yBA0MO;AACZ,eAAO,KAAKhB,SAAL,GAAkB,KAAKA,SAAL,CAAgBmC,MAAhB,GAAyB,CAA3C,GAA+C,KAAtD;AACD,OA5MM;;AA8MP;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIa,MAAAA,QAzNO,oBAyNEC,SAzNF,EAyNaC,SAzNb,EAyNwBC,WAzNxB,EAyNqC;AAC1C,YAAIA,WAAW,KAAK,KAApB,EAA2B;AACzB,cAAIC,KAAK,GAAG,EAAZ;AACD,SAFD,MAEO;AACL,cAAIA,KAAK,GAAG,CAAC,IAAD,CAAZ;AACD;;AAED,YAAIC,WAAW,GACb,KAAKrC,WAAL,OAAuBkC,SAAS,KAAK,KAAd,IAAuB,KAAKN,MAAL,EAA9C,CADF;;AAGA,YAAIS,WAAJ,EAAiB;AACf,cAAItB,QAAQ,GAAG,KAAKgB,WAAL,EAAf;;AACA,cAAIE,SAAS,KAAK,KAAlB,EAAyB;AACvBG,YAAAA,KAAK,GAAGA,KAAK,CAACE,MAAN,CAAavB,QAAb,CAAR;AACD,WAFD,MAEO;AACL,iBAAK,IAAIE,CAAC,GAAG,CAAR,EAAWsB,GAAG,GAAGxB,QAAQ,CAACI,MAA/B,EAAuCF,CAAC,GAAGsB,GAA3C,EAAgDtB,CAAC,EAAjD,EAAqD;AACnDmB,cAAAA,KAAK,GAAGA,KAAK,CAACE,MAAN,CACNvB,QAAQ,CAACE,CAAD,CAAR,CAAYe,QAAZ,CAAqBC,SAArB,EAAgCC,SAAhC,EAA2C,KAA3C,CADM,CAAR;AAGD;AACF;AACF;;AACD,eAAOE,KAAP;AACD,OAhPM;;AAkPP;AACJ;AACA;AACA;AACA;AACA;AACII,MAAAA,yBAxPO,uCAwPqB;AAC1B,YAAIzB,QAAQ,GAAG,KAAKiB,QAAL,CAAc,IAAd,EAAoB,IAApB,EAA0B,KAA1B,CAAf;;AACA,aAAK,IAAIf,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,QAAQ,CAACI,MAA7B,EAAqCF,CAAC,GAAGC,CAAzC,EAA4CD,CAAC,EAA7C,EAAiD;AAC/C/C,UAAAA,EAAE,CAACO,EAAH,CAAME,IAAN,CAAW8D,KAAX,CAAiBC,MAAjB,CAAwBC,GAAxB,CAA4B5B,QAAQ,CAACE,CAAD,CAApC;AACD;AACF,OA7PM;;AA+PP;AACJ;AACA;AACI2B,MAAAA,SAlQO,uBAkQiB;AACtB,YAAI,KAAKd,0BAAL,EAAJ,EAAuC;AACrC,eAAKA,0BAAL,GAAkCe,SAAlC,CACE,KAAK5C,oBAAL,EADF,EAEE,IAFF;AAID;AACF,OAzQM;;AA2QP;AACJ;AACA;AACA;AACA;AACI0C,MAAAA,GAhRO,eAgRHG,OAhRG,EAgRM;AACX,YAAIxB,SAAS,GAAG,KAAKrB,oBAAL,EAAhB;AACA,YAAIvB,IAAI,GAAG,KAAKa,OAAL,EAAX;;AAEA,aAAK,IAAI0B,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG6B,SAAS,CAAC5B,MAA9B,EAAsCF,CAAC,GAAGC,CAA1C,EAA6CD,CAAC,EAA9C,EAAkD;AAChD,cAAIzB,QAAQ,GAAGuD,SAAS,CAAC9B,CAAD,CAAxB;AAEA,cAAI+B,SAAS,GAAGxD,QAAQ,CAACC,SAAT,EAAhB;;AACA,cAAIuD,SAAJ,EAAe;AACbA,YAAAA,SAAS,CAACC,MAAV,CAAiBzD,QAAjB;AACD;;AAEDA,UAAAA,QAAQ,CAAC0D,SAAT,CAAmB,IAAnB;AACA,cAAIlD,WAAW,GAAG,KAAKA,WAAL,EAAlB;AAEAsB,UAAAA,SAAS,CAACqB,GAAV,CAAcnD,QAAd;;AAEA,cAAIA,QAAQ,CAACQ,WAAT,EAAJ,EAA4B;AAC1BsB,YAAAA,SAAS,CAACqB,GAAV,CAAcnD,QAAQ,CAACS,oBAAT,EAAd;AACD;;AACD,eAAKjB,SAAL,CAAgBmE,IAAhB,CAAqB3D,QAArB;;AAEA,cAAI,CAACQ,WAAL,EAAkB;AAChB,iBAAK4C,SAAL;AACD;;AAED,cAAIlE,IAAJ,EAAU;AACRc,YAAAA,QAAQ,CAACgD,yBAAT;AACA9D,YAAAA,IAAI,CAAC0E,oBAAL,CAA0B,SAA1B,EAAqClF,EAAE,CAACmF,KAAH,CAASxE,IAAT,CAAcyE,IAAnD,EAAyD,CAAC9D,QAAD,CAAzD;AACD;AACF;;AACD,YAAId,IAAJ,EAAU;AACRR,UAAAA,EAAE,CAACO,EAAH,CAAME,IAAN,CAAW8D,KAAX,CAAiBC,MAAjB,CAAwBC,GAAxB,CAA4B,IAA5B;AACD;AACF,OAlTM;;AAoTP;AACJ;AACA;AACA;AACA;AACA;AACIY,MAAAA,KA1TO,iBA0TD/D,QA1TC,EA0TSgE,KA1TT,EA0TgB;AAQrB,YAAIA,KAAK,IAAI,KAAKxE,SAAL,CAAgBmC,MAA7B,EAAqC;AACnC,eAAKwB,GAAL,CAASnD,QAAT;AACA;AACD;;AAED,YAAIwD,SAAS,GAAGxD,QAAQ,CAACC,SAAT,EAAhB;;AACA,YAAIuD,SAAJ,EAAe;AACbA,UAAAA,SAAS,CAACC,MAAV,CAAiBzD,QAAjB;AACD;;AAED,YAAI8B,SAAS,GAAG,KAAKrB,oBAAL,EAAhB;AAEAT,QAAAA,QAAQ,CAAC0D,SAAT,CAAmB,IAAnB;AACA,YAAIlD,WAAW,GAAG,KAAKA,WAAL,EAAlB;AAEA,YAAIyD,QAAQ,GAAG,KAAKzE,SAAL,CAAgBwE,KAAhB,CAAf;AACAlC,QAAAA,SAAS,CAACoC,SAAV,CAAoBlE,QAApB,EAA8BiE,QAA9B;;AAEA,YAAIjE,QAAQ,CAACQ,WAAT,EAAJ,EAA4B;AAC1BsB,UAAAA,SAAS,CAACqC,QAAV,CAAmBnE,QAAQ,CAACS,oBAAT,EAAnB,EAAoDT,QAApD;AACD;;AACDtB,QAAAA,EAAE,CAAC0F,IAAH,CAAQC,KAAR,CAAcC,QAAd,CAAuB,KAAK9E,SAA5B,EAAwCQ,QAAxC,EAAkDgE,KAAlD;;AAEA,YAAI,CAACxD,WAAL,EAAkB;AAChB,eAAK4C,SAAL;AACD;;AAED,YAAI,KAAKrD,OAAL,EAAJ,EAAoB;AAClBC,UAAAA,QAAQ,CAACgD,yBAAT;AACAtE,UAAAA,EAAE,CAACO,EAAH,CAAME,IAAN,CAAW8D,KAAX,CAAiBC,MAAjB,CAAwBC,GAAxB,CAA4B,IAA5B;AACD;AACF,OAjWM;;AAmWP;AACJ;AACA;AACA;AACA;AACA;AACIe,MAAAA,SAzWO,qBAyWGlE,QAzWH,EAyWauE,MAzWb,EAyWqB;AAK1B;AACA;AACA,YAAIf,SAAS,GAAGxD,QAAQ,CAACC,SAAT,EAAhB;;AACA,YAAIuD,SAAJ,EAAe;AACbA,UAAAA,SAAS,CAACC,MAAV,CAAiBzD,QAAjB;AACD;;AAED,aAAK+D,KAAL,CAAW/D,QAAX,EAAqB,KAAKR,SAAL,CAAgBgF,OAAhB,CAAwBD,MAAxB,CAArB;AACD,OAtXM;;AAwXP;AACJ;AACA;AACA;AACA;AACA;AACIJ,MAAAA,QA9XO,oBA8XEnE,QA9XF,EA8XYyE,KA9XZ,EA8XmB;AAKxB;AACA;AACA,YAAIjB,SAAS,GAAGxD,QAAQ,CAACC,SAAT,EAAhB;;AACA,YAAIuD,SAAJ,EAAe;AACbA,UAAAA,SAAS,CAACC,MAAV,CAAiBzD,QAAjB;AACD;;AAED,aAAK+D,KAAL,CAAW/D,QAAX,EAAqB,KAAKR,SAAL,CAAgBgF,OAAhB,CAAwBC,KAAxB,IAAiC,CAAtD;AACD,OA3YM;;AA6YP;AACJ;AACA;AACA;AACA;AACIC,MAAAA,UAlZO,sBAkZI1E,QAlZJ,EAkZc;AACnB,aAAK+D,KAAL,CAAW/D,QAAX,EAAqB,CAArB;AACD,OApZM;;AAsZP;AACJ;AACA;AACA;AACA;AACIyD,MAAAA,MA3ZO,kBA2ZAH,OA3ZA,EA2ZS;AACd,aAAK,IAAI7B,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAG6B,SAAS,CAAC5B,MAA9B,EAAsCF,CAAC,GAAGC,CAA1C,EAA6CD,CAAC,EAA9C,EAAkD;AAChD,cAAIzB,QAAQ,GAAGuD,SAAS,CAAC9B,CAAD,CAAxB;;AACA,cAAI,KAAKjC,SAAL,CAAgBgF,OAAhB,CAAwBxE,QAAxB,KAAqC,CAAC,CAA1C,EAA6C;AAC3C,iBAAK2E,IAAL,CACE,6BACE3E,QADF,GAEE,yCAHJ;AAMA;AACD;;AAED,cAAI8B,SAAS,GAAG,KAAKrB,oBAAL,EAAhB;;AAEA,cAAIT,QAAQ,CAACqC,oBAAT,EAAJ,EAAqC;AACnC,gBAAIuC,sBAAsB,GAAG5E,QAAQ,CAACS,oBAAT,EAA7B;;AACA,gBAAIqB,SAAS,CAACS,WAAV,GAAwBiC,OAAxB,CAAgCI,sBAAhC,KAA2D,CAA/D,EAAkE;AAChE;AACA9C,cAAAA,SAAS,CAAC2B,MAAV,CAAiBmB,sBAAjB;AACD;AACF;;AACDlG,UAAAA,EAAE,CAAC0F,IAAH,CAAQC,KAAR,CAAcZ,MAAd,CAAqB,KAAKjE,SAA1B,EAAsCQ,QAAtC;AAEAA,UAAAA,QAAQ,CAAC0D,SAAT,CAAmB,IAAnB;AACA5B,UAAAA,SAAS,CAAC2B,MAAV,CAAiBzD,QAAjB;AACD;;AAED,YAAId,IAAI,GAAG,KAAKa,OAAL,EAAX;;AACA,YAAIb,IAAJ,EAAU;AACRA,UAAAA,IAAI,CAAC0E,oBAAL,CAA0B,YAA1B,EAAwClF,EAAE,CAACmF,KAAH,CAASxE,IAAT,CAAcyE,IAAtD,EAA4D,CAAC9D,QAAD,CAA5D;AACD;;AAEDtB,QAAAA,EAAE,CAACO,EAAH,CAAME,IAAN,CAAW8D,KAAX,CAAiBC,MAAjB,CAAwBC,GAAxB,CAA4B,IAA5B;AACD,OA7bM;;AA+bP;AACJ;AACA;AACA;AACA;AACI0B,MAAAA,QApcO,oBAocEb,KApcF,EAocS;AACd,YAAIc,IAAI,GAAG,KAAKtF,SAAL,CAAgBwE,KAAhB,CAAX;;AACA,YAAIc,IAAJ,EAAU;AACR,eAAKrB,MAAL,CAAYqB,IAAZ;AACD;AACF,OAzcM;;AA2cP;AACJ;AACA;AACIC,MAAAA,SA9cO,uBA8cK;AACV;AACA,YAAIxD,QAAQ,GAAG,KAAK/B,SAAL,CAAgBsD,MAAhB,EAAf;;AACA,aAAK,IAAIrB,CAAC,GAAG,KAAKjC,SAAL,CAAgBmC,MAAhB,GAAyB,CAAtC,EAAyCF,CAAC,IAAI,CAA9C,EAAiDA,CAAC,EAAlD,EAAsD;AACpD,eAAKgC,MAAL,CAAY,KAAKjE,SAAL,CAAgBiC,CAAhB,CAAZ;AACD;;AACD,eAAOF,QAAP;AACD;AArdM,KApByC;AA4elDyD,IAAAA,QA5ekD,sBA4evC;AACT,WAAKC,aAAL,CAAmB,WAAnB;;AACA,WAAKC,eAAL,CAAqB,WAArB;AACD;AA/eiD,GAApD;AA7BAxG,EAAAA,EAAE,CAACO,EAAH,CAAMC,IAAN,CAAWC,IAAX,CAAgBgG,gBAAhB,CAAiCtG,aAAjC,GAAiDA,aAAjD",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Derrell Lipman (derrell)\n\n************************************************************************ */\n\n/**\n * The AbstractTreeItem serves as a common superclass for the {@link\n * qx.ui.tree.TreeFile} and {@link qx.ui.tree.TreeFolder} classes.\n *\n * @childControl label {qx.ui.basic.Label} label of the tree item\n * @childControl icon {qx.ui.basic.Image} icon of the tree item\n * @childControl open {qx.ui.tree.core.FolderOpenButton} button to open/close a subtree\n */\nqx.Class.define(\"qx.ui.tree.core.AbstractTreeItem\", {\n  extend: qx.ui.tree.core.AbstractItem,\n  type: \"abstract\",\n\n  construct(label) {\n    super(label);\n\n    this.__children = [];\n  },\n\n  properties: {\n    /**\n     * The parent tree folder.\n     */\n    parent: {\n      check: \"qx.ui.tree.core.AbstractTreeItem\",\n      nullable: true\n    }\n  },\n\n  members: {\n    __children: null,\n    __childrenContainer: null,\n\n    /**\n     * Returns the tree the tree item is connected to. If the item is not part of\n     * a tree <code>null</code> will be returned.\n     *\n     * @return {qx.ui.tree.Tree|null} The item's tree or <code>null</code>.\n     */\n    getTree() {\n      var treeItem = this;\n      while (treeItem.getParent()) {\n        treeItem = treeItem.getParent();\n      }\n\n      var tree = treeItem.getLayoutParent()\n        ? treeItem.getLayoutParent().getLayoutParent()\n        : 0;\n      if (tree && tree instanceof qx.ui.core.scroll.ScrollPane) {\n        return tree.getLayoutParent();\n      }\n      return null;\n    },\n\n    // property apply\n    _applyOpen(value, old) {\n      if (this.hasChildren()) {\n        this.getChildrenContainer().setVisibility(\n          value ? \"visible\" : \"excluded\"\n        );\n      }\n\n      super._applyOpen(value, old);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INDENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _shouldShowOpenSymbol() {\n      var open = this.getChildControl(\"open\", true);\n      if (!open) {\n        return false;\n      }\n\n      var tree = this.getTree();\n      if (!tree.getRootOpenClose()) {\n        if (tree.getHideRoot()) {\n          if (tree.getRoot() == this.getParent()) {\n            return false;\n          }\n        } else {\n          if (tree.getRoot() == this) {\n            return false;\n          }\n        }\n      }\n\n      return this.isOpenable();\n    },\n\n    // overridden\n    _updateIndent() {\n      if (!this.getTree()) {\n        return;\n      }\n\n      super._updateIndent();\n    },\n\n    // overridden\n    getLevel() {\n      var tree = this.getTree();\n      if (!tree) {\n        return;\n      }\n\n      var treeItem = this;\n      var level = -1;\n\n      while (treeItem) {\n        treeItem = treeItem.getParent();\n        level += 1;\n      }\n\n      // don't count the hidden root node in the tree widget\n      if (tree.getHideRoot()) {\n        level -= 1;\n      }\n\n      if (!tree.getRootOpenClose()) {\n        level -= 1;\n      }\n\n      return level;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STATE HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    addState(state) {\n      super.addState(state);\n\n      var children = this._getChildren();\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i];\n        if (child.addState) {\n          children[i].addState(state);\n        }\n      }\n    },\n\n    // overridden\n    removeState(state) {\n      super.removeState(state);\n\n      var children = this._getChildren();\n      for (var i = 0, l = children.length; i < l; i++) {\n        var child = children[i];\n        if (child.removeState) {\n          children[i].removeState(state);\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN CONTAINER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the widget, which acts as container for the child items.\n     * This widget must have a vertical box layout.\n     *\n     * @return {qx.ui.core.Widget} The children container\n     */\n    getChildrenContainer() {\n      if (!this.__childrenContainer) {\n        this.__childrenContainer = new qx.ui.container.Composite(\n          new qx.ui.layout.VBox()\n        ).set({\n          visibility: this.isOpen() ? \"visible\" : \"excluded\"\n        });\n      }\n\n      return this.__childrenContainer;\n    },\n\n    /**\n     * Whether the tree item has a children container\n     *\n     * @return {Boolean} Whether it has a children container\n     */\n    hasChildrenContainer() {\n      return this.__childrenContainer;\n    },\n\n    /**\n     * Get the children container of the item's parent. This function will return\n     * <code>null</code>, if the item does not have a parent or is not the root\n     * item.\n     *\n     * @return {qx.ui.core.Widget} The parent's children container.\n     */\n    getParentChildrenContainer() {\n      if (this.getParent()) {\n        return this.getParent().getChildrenContainer();\n      } else if (this.getLayoutParent()) {\n        return this.getLayoutParent();\n      } else {\n        return null;\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      CHILDREN HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Get all child items.\n     *\n     * Note: Don not modify the returned array, since this function does not\n     * return a copy!\n     *\n     * @return {qx.ui.tree.core.AbstractTreeItem[]} An array of all child items.\n     */\n    getChildren() {\n      return this.__children;\n    },\n\n    // overridden\n    hasChildren() {\n      return this.__children ? this.__children.length > 0 : false;\n    },\n\n    /**\n     * Returns all children of the folder.\n     *\n     * @param recursive {Boolean ? true} whether children of subfolder should be\n     *     included\n     * @param invisible {Boolean ? true} whether invisible children should be\n     *     included\n     * @param ignoreFirst {Boolean ? true} Whether the current treeItem should\n     *     be excluded from the list.\n     * @return {qx.ui.tree.core.AbstractTreeItem[]} list of children\n     */\n    getItems(recursive, invisible, ignoreFirst) {\n      if (ignoreFirst !== false) {\n        var items = [];\n      } else {\n        var items = [this];\n      }\n\n      var addChildren =\n        this.hasChildren() && (invisible !== false || this.isOpen());\n\n      if (addChildren) {\n        var children = this.getChildren();\n        if (recursive === false) {\n          items = items.concat(children);\n        } else {\n          for (var i = 0, chl = children.length; i < chl; i++) {\n            items = items.concat(\n              children[i].getItems(recursive, invisible, false)\n            );\n          }\n        }\n      }\n      return items;\n    },\n\n    /**\n     * Adds this item and recursively all sub items to the widget queue to\n     * update the indentation.\n     *\n     * @internal\n     */\n    recursiveAddToWidgetQueue() {\n      var children = this.getItems(true, true, false);\n      for (var i = 0, l = children.length; i < l; i++) {\n        qx.ui.core.queue.Widget.add(children[i]);\n      }\n    },\n\n    /**\n     * Adds the item's children container to the parent's children container.\n     */\n    __addChildrenToParent() {\n      if (this.getParentChildrenContainer()) {\n        this.getParentChildrenContainer()._addAfter(\n          this.getChildrenContainer(),\n          this\n        );\n      }\n    },\n\n    /**\n     * Adds the passed tree items to the end of this item's children list.\n     *\n     * @param varargs {qx.ui.tree.core.AbstractTreeItem} variable number of tree items to add\n     */\n    add(varargs) {\n      var container = this.getChildrenContainer();\n      var tree = this.getTree();\n\n      for (var i = 0, l = arguments.length; i < l; i++) {\n        var treeItem = arguments[i];\n\n        var oldParent = treeItem.getParent();\n        if (oldParent) {\n          oldParent.remove(treeItem);\n        }\n\n        treeItem.setParent(this);\n        var hasChildren = this.hasChildren();\n\n        container.add(treeItem);\n\n        if (treeItem.hasChildren()) {\n          container.add(treeItem.getChildrenContainer());\n        }\n        this.__children.push(treeItem);\n\n        if (!hasChildren) {\n          this.__addChildrenToParent();\n        }\n\n        if (tree) {\n          treeItem.recursiveAddToWidgetQueue();\n          tree.fireNonBubblingEvent(\"addItem\", qx.event.type.Data, [treeItem]);\n        }\n      }\n      if (tree) {\n        qx.ui.core.queue.Widget.add(this);\n      }\n    },\n\n    /**\n     * Adds the tree item to the current item, at the given index.\n     *\n     * @param treeItem {qx.ui.tree.core.AbstractTreeItem} new tree item to insert\n     * @param index {Integer} position to insert into\n     */\n    addAt(treeItem, index) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assert(\n          index <= this.__children.length && index >= 0,\n          \"Invalid child index: \" + index\n        );\n      }\n\n      if (index == this.__children.length) {\n        this.add(treeItem);\n        return;\n      }\n\n      var oldParent = treeItem.getParent();\n      if (oldParent) {\n        oldParent.remove(treeItem);\n      }\n\n      var container = this.getChildrenContainer();\n\n      treeItem.setParent(this);\n      var hasChildren = this.hasChildren();\n\n      var nextItem = this.__children[index];\n      container.addBefore(treeItem, nextItem);\n\n      if (treeItem.hasChildren()) {\n        container.addAfter(treeItem.getChildrenContainer(), treeItem);\n      }\n      qx.lang.Array.insertAt(this.__children, treeItem, index);\n\n      if (!hasChildren) {\n        this.__addChildrenToParent();\n      }\n\n      if (this.getTree()) {\n        treeItem.recursiveAddToWidgetQueue();\n        qx.ui.core.queue.Widget.add(this);\n      }\n    },\n\n    /**\n     * Add a tree item to this item before the existing child <code>before</code>.\n     *\n     * @param treeItem {qx.ui.tree.core.AbstractTreeItem} tree item to add\n     * @param before {qx.ui.tree.core.AbstractTreeItem} existing child to add the item before\n     */\n    addBefore(treeItem, before) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assert(this.__children.indexOf(before) >= 0);\n      }\n\n      // It's important to remove the item before the addAt is called\n      // otherwise the index calculation could be wrong\n      var oldParent = treeItem.getParent();\n      if (oldParent) {\n        oldParent.remove(treeItem);\n      }\n\n      this.addAt(treeItem, this.__children.indexOf(before));\n    },\n\n    /**\n     * Add a tree item to this item after the existing child <code>before</code>.\n     *\n     * @param treeItem {qx.ui.tree.core.AbstractTreeItem} tree item to add\n     * @param after {qx.ui.tree.core.AbstractTreeItem} existing child to add the item after\n     */\n    addAfter(treeItem, after) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        this.assert(this.__children.indexOf(after) >= 0);\n      }\n\n      // It's important to remove the item before the addAt is called\n      // otherwise the index calculation could be wrong\n      var oldParent = treeItem.getParent();\n      if (oldParent) {\n        oldParent.remove(treeItem);\n      }\n\n      this.addAt(treeItem, this.__children.indexOf(after) + 1);\n    },\n\n    /**\n     * Add a tree item as the first child of this item.\n     *\n     * @param treeItem {qx.ui.tree.core.AbstractTreeItem} tree item to add\n     */\n    addAtBegin(treeItem) {\n      this.addAt(treeItem, 0);\n    },\n\n    /**\n     * Removes the passed tree items from this item.\n     *\n     * @param varargs {qx.ui.tree.core.AbstractTreeItem} variable number of tree items to remove\n     */\n    remove(varargs) {\n      for (var i = 0, l = arguments.length; i < l; i++) {\n        var treeItem = arguments[i];\n        if (this.__children.indexOf(treeItem) == -1) {\n          this.warn(\n            \"Cannot remove treeitem '\" +\n              treeItem +\n              \"'. It is not a child of this tree item.\"\n          );\n\n          return;\n        }\n\n        var container = this.getChildrenContainer();\n\n        if (treeItem.hasChildrenContainer()) {\n          var treeItemChildContainer = treeItem.getChildrenContainer();\n          if (container.getChildren().indexOf(treeItemChildContainer) >= 0) {\n            // Sometimes not, see bug #3038\n            container.remove(treeItemChildContainer);\n          }\n        }\n        qx.lang.Array.remove(this.__children, treeItem);\n\n        treeItem.setParent(null);\n        container.remove(treeItem);\n      }\n\n      var tree = this.getTree();\n      if (tree) {\n        tree.fireNonBubblingEvent(\"removeItem\", qx.event.type.Data, [treeItem]);\n      }\n\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n    /**\n     * Remove the child with the given child index.\n     *\n     * @param index {Integer} Index of the child to remove\n     */\n    removeAt(index) {\n      var item = this.__children[index];\n      if (item) {\n        this.remove(item);\n      }\n    },\n\n    /**\n     * Remove all child items from this item.\n     */\n    removeAll() {\n      // create a copy for returning\n      var children = this.__children.concat();\n      for (var i = this.__children.length - 1; i >= 0; i--) {\n        this.remove(this.__children[i]);\n      }\n      return children;\n    }\n  },\n\n  destruct() {\n    this._disposeArray(\"__children\");\n    this._disposeObjects(\"__childrenContainer\");\n  }\n});\n"
  ]
}