{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/form/AbstractField.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "form",
    "IStringForm",
    "IForm",
    "include",
    "MForm",
    "type",
    "statics",
    "__stylesheet",
    "__addedPlaceholderRules",
    "__addPlaceholderRules",
    "AbstractField",
    "engine",
    "Environment",
    "get",
    "browser",
    "colorManager",
    "theme",
    "manager",
    "Color",
    "getInstance",
    "appearanceProperties",
    "Appearance",
    "styleFrom",
    "showingPlaceholder",
    "styles",
    "color",
    "font",
    "resolve",
    "Font",
    "lang",
    "Object",
    "mergeWith",
    "getStyles",
    "selector",
    "parseFloat",
    "separator",
    "join",
    "style",
    "Stylesheet",
    "addRule",
    "construct",
    "value",
    "__useQxPlaceholder",
    "setValue",
    "getContentElement",
    "addListener",
    "_onChangeContent",
    "_syncPlaceholder",
    "addClass",
    "locale",
    "Manager",
    "_onChangeLocale",
    "events",
    "input",
    "changeValue",
    "properties",
    "textAlign",
    "check",
    "nullable",
    "themeable",
    "apply",
    "readOnly",
    "event",
    "init",
    "selectable",
    "refine",
    "focusable",
    "maxLength",
    "Infinity",
    "liveUpdate",
    "liveUpdateOnRxMatch",
    "transform",
    "placeholder",
    "filter",
    "members",
    "__nullValue",
    "_placeholder",
    "__oldValue",
    "__oldInputValue",
    "__font",
    "__webfontListenerId",
    "getFocusElement",
    "el",
    "_createInputElement",
    "html",
    "Input",
    "renderLayout",
    "left",
    "top",
    "width",
    "height",
    "updateInsets",
    "_updateInsets",
    "changes",
    "inner",
    "size",
    "pixel",
    "local",
    "margin",
    "innerWidth",
    "innerHeight",
    "insets",
    "getInsets",
    "_getPlaceholderElement",
    "setStyles",
    "paddingTop",
    "paddingRight",
    "right",
    "paddingBottom",
    "bottom",
    "paddingLeft",
    "_renderContentElement",
    "position",
    "element",
    "_createContentElement",
    "setSelectable",
    "getSelectable",
    "setEnabled",
    "getEnabled",
    "_onHtmlInput",
    "setAttribute",
    "backgroundImage",
    "util",
    "ResourceManager",
    "toUri",
    "_applyEnabled",
    "old",
    "_showPlaceholder",
    "_removePlaceholder",
    "getPlaceholder",
    "__textSize",
    "_getContentHint",
    "_applyFont",
    "removeListenerById",
    "bom",
    "webfonts",
    "WebFont",
    "_onWebFontStatusChange",
    "getDefaultStyles",
    "getTextColor",
    "Element",
    "flush",
    "Label",
    "getTextSize",
    "queue",
    "Layout",
    "add",
    "_applyTextColor",
    "setStyle",
    "removeStyle",
    "_applyMaxLength",
    "removeAttribute",
    "_string2RegExp",
    "Type",
    "isString",
    "RegExp",
    "tabFocus",
    "selectAllText",
    "_getTextSize",
    "e",
    "getData",
    "fireEvents",
    "getFilter",
    "filteredValue",
    "_validateInput",
    "fireDataEvent",
    "getLiveUpdate",
    "__fireChangeValueEvent",
    "fireRx",
    "getLiveUpdateOnRxMatch",
    "match",
    "ev",
    "valid",
    "fireNonBubblingEvent",
    "Data",
    "isDisposed",
    "elem",
    "getValue",
    "oldValue",
    "data",
    "Error",
    "resetValue",
    "getTextSelection",
    "getTextSelectionLength",
    "getTextSelectionStart",
    "getTextSelectionEnd",
    "setTextSelection",
    "start",
    "end",
    "clearTextSelection",
    "setLayoutParent",
    "parent",
    "getLayoutParent",
    "getParent",
    "remove",
    "fieldValue",
    "hasState",
    "addState",
    "_onPointerDownPlaceholder",
    "window",
    "setTimeout",
    "focus",
    "bind",
    "removeState",
    "zIndex",
    "whiteSpace",
    "cursor",
    "visibility",
    "select",
    "content",
    "translate",
    "setPlaceholder",
    "_onChangeTheme",
    "dispose",
    "removeSheet",
    "index",
    "search",
    "processedValue",
    "length",
    "charAt",
    "substring",
    "_applyPlaceholder",
    "removeListener",
    "getNodeName",
    "getDomElement",
    "addListenerOnce",
    "_applyTextAlign",
    "_applyReadOnly",
    "setFocusable",
    "defer",
    "css",
    "destruct"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This is a basic form field with common functionality for\n * {@link TextArea} and {@link TextField}.\n *\n * On every keystroke the value is synchronized with the\n * value of the textfield. Value changes can be monitored by listening to the\n * {@link #input} or {@link #changeValue} events, respectively.\n */\nqx.Class.define(\"qx.ui.form.AbstractField\", {\n  extend: qx.ui.core.Widget,\n  implement: [qx.ui.form.IStringForm, qx.ui.form.IForm],\n\n  include: [qx.ui.form.MForm],\n\n  type: \"abstract\",\n\n  statics: {\n    /** Stylesheet needed to style the native placeholder element. */\n    __stylesheet: null,\n\n    __addedPlaceholderRules: false,\n\n    /**\n     * Adds the CSS rules needed to style the native placeholder element.\n     */\n    __addPlaceholderRules() {\n      if (qx.ui.form.AbstractField.__addedPlaceholderRules) {\n        return;\n      }\n      qx.ui.form.AbstractField.__addedPlaceholderRules = true;\n      var engine = qx.core.Environment.get(\"engine.name\");\n      var browser = qx.core.Environment.get(\"browser.name\");\n      var colorManager = qx.theme.manager.Color.getInstance();\n\n      var appearanceProperties =\n        qx.theme.manager.Appearance.getInstance().styleFrom(\"textfield\", {\n          showingPlaceholder: true\n        });\n\n      var styles = {};\n\n      var color = null;\n      var font = null;\n      if (appearanceProperties) {\n        color = appearanceProperties[\"textColor\"]\n          ? colorManager.resolve(appearanceProperties[\"textColor\"])\n          : null;\n        font = appearanceProperties[\"font\"]\n          ? qx.theme.manager.Font.getInstance().resolve(\n              appearanceProperties[\"font\"]\n            )\n          : null;\n      }\n      if (!color) {\n        color = colorManager.resolve(\"text-placeholder\");\n      }\n      if (color) {\n        styles.color = color + \" !important\";\n      }\n      if (font) {\n        qx.lang.Object.mergeWith(styles, font.getStyles(), false);\n      }\n\n      var selector;\n      if (engine == \"gecko\") {\n        // see https://developer.mozilla.org/de/docs/CSS/:-moz-placeholder for details\n        if (parseFloat(qx.core.Environment.get(\"engine.version\")) >= 19) {\n          selector = \"input::-moz-placeholder, textarea::-moz-placeholder\";\n        } else {\n          selector = \"input:-moz-placeholder, textarea:-moz-placeholder\";\n        }\n      } else if (engine == \"webkit\" && browser != \"edge\") {\n        selector =\n          \"input.qx-placeholder-color::-webkit-input-placeholder, textarea.qx-placeholder-color::-webkit-input-placeholder\";\n      } else if (engine == \"mshtml\" || browser == \"edge\") {\n        var separator = browser == \"edge\" ? \"::\" : \":\";\n        selector = [\n          \"input.qx-placeholder-color\",\n          \"-ms-input-placeholder, textarea.qx-placeholder-color\",\n          \"-ms-input-placeholder\"\n        ].join(separator);\n        qx.ui.style.Stylesheet.getInstance().addRule(\n          selector,\n          \"color: \" + color + \" !important\"\n        );\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param value {String} initial text value of the input field ({@link #setValue}).\n   */\n  construct(value) {\n    super();\n\n    // shortcut for placeholder feature detection\n    this.__useQxPlaceholder = !qx.core.Environment.get(\"css.placeholder\");\n\n    if (value != null) {\n      this.setValue(value);\n    }\n\n    this.getContentElement().addListener(\"change\", this._onChangeContent, this);\n\n    // use qooxdoo placeholder if no native placeholder is supported\n    if (this.__useQxPlaceholder) {\n      // assign the placeholder text after the appearance has been applied\n      this.addListener(\"syncAppearance\", this._syncPlaceholder, this);\n    } else {\n      // add rules for native placeholder color\n      qx.ui.form.AbstractField.__addPlaceholderRules();\n      // add a class to the input to restrict the placeholder color\n      this.getContentElement().addClass(\"qx-placeholder-color\");\n    }\n\n    // translation support\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().addListener(\n        \"changeLocale\",\n        this._onChangeLocale,\n        this\n      );\n    }\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /**\n     * The event is fired on every keystroke modifying the value of the field.\n     *\n     * The method {@link qx.event.type.Data#getData} returns the\n     * current value of the text field.\n     */\n    input: \"qx.event.type.Data\",\n\n    /**\n     * The event is fired each time the text field looses focus and the\n     * text field values has changed.\n     *\n     * If you change {@link #liveUpdate} to true, the changeValue event will\n     * be fired after every keystroke and not only after every focus loss. In\n     * that mode, the changeValue event is equal to the {@link #input} event.\n     *\n     * The method {@link qx.event.type.Data#getData} returns the\n     * current text value of the field.\n     */\n    changeValue: \"qx.event.type.Data\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Alignment of the text\n     */\n    textAlign: {\n      check: [\"left\", \"center\", \"right\"],\n      nullable: true,\n      themeable: true,\n      apply: \"_applyTextAlign\"\n    },\n\n    /** Whether the field is read only */\n    readOnly: {\n      check: \"Boolean\",\n      apply: \"_applyReadOnly\",\n      event: \"changeReadOnly\",\n      init: false\n    },\n\n    // overridden\n    selectable: {\n      refine: true,\n      init: true\n    },\n\n    // overridden\n    focusable: {\n      refine: true,\n      init: true\n    },\n\n    /** Maximal number of characters that can be entered in the TextArea. */\n    maxLength: {\n      apply: \"_applyMaxLength\",\n      check: \"PositiveInteger\",\n      init: Infinity\n    },\n\n    /**\n     * Whether the {@link #changeValue} event should be fired on every key\n     * input. If set to true, the changeValue event is equal to the\n     * {@link #input} event.\n     */\n    liveUpdate: {\n      check: \"Boolean\",\n      init: false\n    },\n\n    /**\n     * Fire a {@link #changeValue} event whenever the content of the\n     * field matches the given regular expression. Accepts both regular\n     * expression objects as well as strings for input.\n     */\n    liveUpdateOnRxMatch: {\n      check: \"RegExp\",\n      transform: \"_string2RegExp\",\n      init: null\n    },\n\n    /**\n     * String value which will be shown as a hint if the field is all of:\n     * unset, unfocused and enabled. Set to null to not show a placeholder\n     * text.\n     */\n    placeholder: {\n      check: \"String\",\n      nullable: true,\n      apply: \"_applyPlaceholder\"\n    },\n\n    /**\n     * RegExp responsible for filtering the value of the textfield. the RegExp\n     * gives the range of valid values.\n     * Note: The regexp specified is applied to each character in turn,\n     * NOT to the entire string. So only regular expressions matching a\n     * single character make sense in the context.\n     * The following example only allows digits in the textfield.\n     * <pre class='javascript'>field.setFilter(/[0-9]/);</pre>\n     */\n    filter: {\n      check: \"RegExp\",\n      nullable: true,\n      init: null\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    __nullValue: true,\n    _placeholder: null,\n    __oldValue: null,\n    __oldInputValue: null,\n    __useQxPlaceholder: true,\n    __font: null,\n    __webfontListenerId: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    getFocusElement() {\n      var el = this.getContentElement();\n      if (el) {\n        return el;\n      }\n    },\n\n    /**\n     * Creates the input element. Derived classes may override this\n     * method, to create different input elements.\n     *\n     * @return {qx.html.Input} a new input element.\n     */\n    _createInputElement() {\n      return new qx.html.Input(\"text\");\n    },\n\n    // overridden\n    renderLayout(left, top, width, height) {\n      var updateInsets = this._updateInsets;\n      var changes = super.renderLayout(left, top, width, height);\n\n      // Directly return if superclass has detected that no\n      // changes needs to be applied\n      if (!changes) {\n        return;\n      }\n\n      var inner = changes.size || updateInsets;\n      var pixel = \"px\";\n\n      if (inner || changes.local || changes.margin) {\n        var innerWidth = width;\n        var innerHeight = height;\n      }\n\n      var input = this.getContentElement();\n\n      // we don't need to update positions on native placeholders\n      if (updateInsets && this.__useQxPlaceholder) {\n        if (this.__useQxPlaceholder) {\n          var insets = this.getInsets();\n          this._getPlaceholderElement().setStyles({\n            paddingTop: insets.top + pixel,\n            paddingRight: insets.right + pixel,\n            paddingBottom: insets.bottom + pixel,\n            paddingLeft: insets.left + pixel\n          });\n        }\n      }\n\n      if (inner || changes.margin) {\n        // we don't need to update dimensions on native placeholders\n        if (this.__useQxPlaceholder) {\n          var insets = this.getInsets();\n          this._getPlaceholderElement().setStyles({\n            width: innerWidth - insets.left - insets.right + pixel,\n            height: innerHeight - insets.top - insets.bottom + pixel\n          });\n        }\n\n        input.setStyles({\n          width: innerWidth + pixel,\n          height: innerHeight + pixel\n        });\n\n        this._renderContentElement(innerHeight, input);\n      }\n\n      if (changes.position) {\n        if (this.__useQxPlaceholder) {\n          this._getPlaceholderElement().setStyles({\n            left: left + pixel,\n            top: top + pixel\n          });\n        }\n      }\n    },\n\n    /**\n     * Hook into {@link qx.ui.form.AbstractField#renderLayout} method.\n     * Called after the contentElement has a width and an innerWidth.\n     *\n     * Note: This was introduced to fix BUG#1585\n     *\n     * @param innerHeight {Integer} The inner height of the element.\n     * @param element {Element} The element.\n     */\n    _renderContentElement(innerHeight, element) {\n      //use it in child classes\n    },\n\n    // overridden\n    _createContentElement() {\n      // create and add the input element\n      var el = this._createInputElement();\n\n      // initialize the html input\n      el.setSelectable(this.getSelectable());\n      el.setEnabled(this.getEnabled());\n\n      // Add listener for input event\n      el.addListener(\"input\", this._onHtmlInput, this);\n\n      // Disable HTML5 spell checking\n      el.setAttribute(\"spellcheck\", \"false\");\n      el.addClass(\"qx-abstract-field\");\n\n      // IE8 in standard mode needs some extra love here to receive events.\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") == 8\n      ) {\n        el.setStyles({\n          backgroundImage:\n            \"url(\" +\n            qx.util.ResourceManager.getInstance().toUri(\"qx/static/blank.gif\") +\n            \")\"\n        });\n      }\n\n      return el;\n    },\n\n    // overridden\n    _applyEnabled(value, old) {\n      super._applyEnabled(value, old);\n\n      this.getContentElement().setEnabled(value);\n\n      if (this.__useQxPlaceholder) {\n        if (value) {\n          this._showPlaceholder();\n        } else {\n          this._removePlaceholder();\n        }\n      } else {\n        var input = this.getContentElement();\n        // remove the placeholder on disabled input elements\n        input.setAttribute(\"placeholder\", value ? this.getPlaceholder() : \"\");\n      }\n    },\n\n    // default text sizes\n    /**\n     * @lint ignoreReferenceField(__textSize)\n     */\n    __textSize: {\n      width: 16,\n      height: 16\n    },\n\n    // overridden\n    _getContentHint() {\n      return {\n        width: this.__textSize.width * 10,\n        height: this.__textSize.height || 16\n      };\n    },\n\n    // overridden\n    _applyFont(value, old) {\n      if (old && this.__font && this.__webfontListenerId) {\n        this.__font.removeListenerById(this.__webfontListenerId);\n        this.__webfontListenerId = null;\n      }\n\n      // Apply\n      var styles;\n      if (value) {\n        this.__font = qx.theme.manager.Font.getInstance().resolve(value);\n        if (this.__font instanceof qx.bom.webfonts.WebFont) {\n          this.__webfontListenerId = this.__font.addListener(\n            \"changeStatus\",\n            this._onWebFontStatusChange,\n            this\n          );\n        }\n        styles = this.__font.getStyles();\n      } else {\n        styles = qx.bom.Font.getDefaultStyles();\n      }\n\n      // check if text color already set - if so this local value has higher priority\n      if (this.getTextColor() != null) {\n        delete styles[\"color\"];\n      }\n\n      // apply the font to the content element\n      // IE 8 - 10 (but not 11 Preview) will ignore the lineHeight value\n      // unless it's applied directly.\n      if (\n        qx.core.Environment.get(\"engine.name\") == \"mshtml\" &&\n        qx.core.Environment.get(\"browser.documentmode\") < 11\n      ) {\n        qx.html.Element.flush();\n        this.getContentElement().setStyles(styles, true);\n      } else {\n        this.getContentElement().setStyles(styles);\n      }\n\n      // the font will adjust automatically on native placeholders\n      if (this.__useQxPlaceholder) {\n        // don't apply the color to the placeholder\n        delete styles[\"color\"];\n        // apply the font to the placeholder\n        this._getPlaceholderElement().setStyles(styles);\n      }\n\n      // Compute text size\n      if (value) {\n        this.__textSize = qx.bom.Label.getTextSize(\"A\", styles);\n      } else {\n        delete this.__textSize;\n      }\n\n      // Update layout\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n    // overridden\n    _applyTextColor(value, old) {\n      if (value) {\n        this.getContentElement().setStyle(\n          \"color\",\n          qx.theme.manager.Color.getInstance().resolve(value)\n        );\n      } else {\n        this.getContentElement().removeStyle(\"color\");\n      }\n    },\n\n    // property apply\n    _applyMaxLength(value, old) {\n      if (value) {\n        this.getContentElement().setAttribute(\"maxLength\", value);\n      } else {\n        this.getContentElement().removeAttribute(\"maxLength\");\n      }\n    },\n\n    // property transform\n    _string2RegExp(value, old) {\n      if (qx.lang.Type.isString(value)) {\n        value = new RegExp(value);\n      }\n      return value;\n    },\n\n    // overridden\n    tabFocus() {\n      super.tabFocus();\n\n      this.selectAllText();\n    },\n\n    /**\n     * Returns the text size.\n     * @return {Map} The text size.\n     */\n    _getTextSize() {\n      return this.__textSize;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENTS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for native input events. Redirects the event\n     * to the widget. Also checks for the filter and max length.\n     *\n     * @param e {qx.event.type.Data} Input event\n     */\n    _onHtmlInput(e) {\n      var value = e.getData();\n      var fireEvents = true;\n\n      this.__nullValue = false;\n\n      // value unchanged; Firefox fires \"input\" when pressing ESC [BUG #5309]\n      if (this.__oldInputValue && this.__oldInputValue === value) {\n        fireEvents = false;\n      }\n\n      // check for the filter\n      if (this.getFilter() != null) {\n        var filteredValue = this._validateInput(value);\n        if (filteredValue != value) {\n          fireEvents = this.__oldInputValue !== filteredValue;\n          value = filteredValue;\n          this.getContentElement().setValue(value);\n        }\n      }\n      // fire the events, if necessary\n      if (fireEvents) {\n        // store the old input value\n        this.fireDataEvent(\"input\", value, this.__oldInputValue);\n        this.__oldInputValue = value;\n\n        // check for the live change event\n        if (this.getLiveUpdate()) {\n          this.__fireChangeValueEvent(value);\n        }\n        // check for the liveUpdateOnRxMatch change event\n        else {\n          var fireRx = this.getLiveUpdateOnRxMatch();\n          if (fireRx && value.match(fireRx)) {\n            this.__fireChangeValueEvent(value);\n          }\n        }\n      }\n    },\n\n    /**\n     * Triggers text size recalculation after a web font was loaded\n     *\n     * @param ev {qx.event.type.Data} \"changeStatus\" event\n     */\n    _onWebFontStatusChange(ev) {\n      if (ev.getData().valid === true) {\n        var styles = this.__font.getStyles();\n        this.__textSize = qx.bom.Label.getTextSize(\"A\", styles);\n        qx.ui.core.queue.Layout.add(this);\n      }\n    },\n\n    /**\n     * Handles the firing of the changeValue event including the local cache\n     * for sending the old value in the event.\n     *\n     * @param value {String} The new value.\n     */\n    __fireChangeValueEvent(value) {\n      var old = this.__oldValue;\n      this.__oldValue = value;\n      if (old != value) {\n        this.fireNonBubblingEvent(\"changeValue\", qx.event.type.Data, [\n          value,\n          old\n        ]);\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      TEXTFIELD VALUE API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Sets the value of the textfield to the given value.\n     *\n     * @param value {String} The new value\n     */\n    setValue(value) {\n      if (this.isDisposed()) {\n        return null;\n      }\n\n      // handle null values\n      if (value === null) {\n        // just do nothing if null is already set\n        if (this.__nullValue) {\n          return value;\n        }\n        value = \"\";\n        this.__nullValue = true;\n      } else {\n        this.__nullValue = false;\n        // native placeholders will be removed by the browser\n        if (this.__useQxPlaceholder) {\n          this._removePlaceholder();\n        }\n      }\n\n      if (qx.lang.Type.isString(value)) {\n        var elem = this.getContentElement();\n        if (elem.getValue() != value) {\n          var oldValue = elem.getValue();\n          elem.setValue(value);\n          var data = this.__nullValue ? null : value;\n          this.__oldValue = oldValue;\n          this.__fireChangeValueEvent(data);\n          // reset the input value on setValue calls [BUG #6892]\n          this.__oldInputValue = this.__oldValue;\n        }\n        // native placeholders will be shown by the browser\n        if (this.__useQxPlaceholder) {\n          this._showPlaceholder();\n        }\n        return value;\n      }\n      throw new Error(\"Invalid value type: \" + value);\n    },\n\n    /**\n     * Returns the current value of the textfield.\n     *\n     * @return {String|null} The current value\n     */\n    getValue() {\n      return this.isDisposed() || this.__nullValue\n        ? null\n        : this.getContentElement().getValue();\n    },\n\n    /**\n     * Resets the value to the default\n     */\n    resetValue() {\n      this.setValue(null);\n    },\n\n    /**\n     * Event listener for change event of content element\n     *\n     * @param e {qx.event.type.Data} Incoming change event\n     */\n    _onChangeContent(e) {\n      this.__nullValue = e.getData() === null;\n      this.__fireChangeValueEvent(e.getData());\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      TEXTFIELD SELECTION API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the current selection.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @return {String|null}\n     */\n    getTextSelection() {\n      return this.getContentElement().getTextSelection();\n    },\n\n    /**\n     * Returns the current selection length.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @return {Integer|null}\n     */\n    getTextSelectionLength() {\n      return this.getContentElement().getTextSelectionLength();\n    },\n\n    /**\n     * Returns the start of the text selection\n     *\n     * @return {Integer|null} Start of selection or null if not available\n     */\n    getTextSelectionStart() {\n      return this.getContentElement().getTextSelectionStart();\n    },\n\n    /**\n     * Returns the end of the text selection\n     *\n     * @return {Integer|null} End of selection or null if not available\n     */\n    getTextSelectionEnd() {\n      return this.getContentElement().getTextSelectionEnd();\n    },\n\n    /**\n     * Set the selection to the given start and end (zero-based).\n     * If no end value is given the selection will extend to the\n     * end of the textfield's content.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     * @param start {Integer} start of the selection (zero-based)\n     * @param end {Integer} end of the selection\n     */\n    setTextSelection(start, end) {\n      this.getContentElement().setTextSelection(start, end);\n    },\n\n    /**\n     * Clears the current selection.\n     * This method only works if the widget is already created and\n     * added to the document.\n     *\n     */\n    clearTextSelection() {\n      this.getContentElement().clearTextSelection();\n    },\n\n    /**\n     * Selects the whole content\n     *\n     */\n    selectAllText() {\n      this.setTextSelection(0);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PLACEHOLDER HELPERS\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    setLayoutParent(parent) {\n      super.setLayoutParent(parent);\n      if (this.__useQxPlaceholder) {\n        if (parent) {\n          this.getLayoutParent()\n            .getContentElement()\n            .add(this._getPlaceholderElement());\n        } else {\n          var placeholder = this._getPlaceholderElement();\n          placeholder.getParent().remove(placeholder);\n        }\n      }\n    },\n\n    /**\n     * Helper to show the placeholder text in the field. It checks for all\n     * states and possible conditions and shows the placeholder only if allowed.\n     */\n    _showPlaceholder() {\n      var fieldValue = this.getValue() || \"\";\n      var placeholder = this.getPlaceholder();\n      if (\n        placeholder != null &&\n        fieldValue == \"\" &&\n        !this.hasState(\"focused\") &&\n        !this.hasState(\"disabled\")\n      ) {\n        if (this.hasState(\"showingPlaceholder\")) {\n          this._syncPlaceholder();\n        } else {\n          // the placeholder will be set as soon as the appearance is applied\n          this.addState(\"showingPlaceholder\");\n        }\n      }\n    },\n\n    /**\n     * Remove the fake placeholder\n     */\n    _onPointerDownPlaceholder() {\n      window.setTimeout(\n        function () {\n          this.focus();\n        }.bind(this),\n        0\n      );\n    },\n\n    /**\n     * Helper to remove the placeholder. Deletes the placeholder text from the\n     * field and removes the state.\n     */\n    _removePlaceholder() {\n      if (this.hasState(\"showingPlaceholder\")) {\n        if (this.__useQxPlaceholder) {\n          this._getPlaceholderElement().setStyle(\"visibility\", \"hidden\");\n        }\n        this.removeState(\"showingPlaceholder\");\n      }\n    },\n\n    /**\n     * Updates the placeholder text with the DOM\n     */\n    _syncPlaceholder() {\n      if (this.hasState(\"showingPlaceholder\") && this.__useQxPlaceholder) {\n        this._getPlaceholderElement().setStyle(\"visibility\", \"visible\");\n      }\n    },\n\n    /**\n     * Returns the placeholder label and creates it if necessary.\n     */\n    _getPlaceholderElement() {\n      if (this._placeholder == null) {\n        // create the placeholder\n        this._placeholder = new qx.html.Label();\n        var colorManager = qx.theme.manager.Color.getInstance();\n        this._placeholder.setStyles({\n          zIndex: 11,\n          position: \"absolute\",\n          color: colorManager.resolve(\"text-placeholder\"),\n          whiteSpace: \"normal\", // enable wrap by default\n          cursor: \"text\",\n          visibility: \"hidden\"\n        });\n\n        this._placeholder.addListener(\n          \"pointerdown\",\n          this._onPointerDownPlaceholder,\n          this\n        );\n      }\n      return this._placeholder;\n    },\n\n    /**\n     * Locale change event handler\n     *\n     * @signature function(e)\n     * @param e {Event} the change event\n     */\n    _onChangeLocale: qx.core.Environment.select(\"qx.dynlocale\", {\n      true(e) {\n        var content = this.getPlaceholder();\n        if (content && content.translate) {\n          this.setPlaceholder(content.translate());\n        }\n      },\n\n      false: null\n    }),\n\n    // overridden\n    _onChangeTheme() {\n      super._onChangeTheme();\n      if (this._placeholder) {\n        // delete the placeholder element because it uses a theme dependent color\n        this._placeholder.dispose();\n        this._placeholder = null;\n      }\n      if (!this.__useQxPlaceholder && qx.ui.form.AbstractField.__stylesheet) {\n        qx.bom.Stylesheet.removeSheet(qx.ui.form.AbstractField.__stylesheet);\n        qx.ui.form.AbstractField.__stylesheet = null;\n        qx.ui.form.AbstractField.__addPlaceholderRules();\n      }\n    },\n\n    /**\n     * Validates the the input value.\n     *\n     * @param value {Object} The value to check\n     * @returns The checked value\n     */\n    _validateInput(value) {\n      var filteredValue = value;\n      var filter = this.getFilter();\n\n      // If no filter is set return just the value\n      if (filter !== null) {\n        filteredValue = \"\";\n        var index = value.search(filter);\n        var processedValue = value;\n\n        while (index >= 0 && processedValue.length > 0) {\n          filteredValue = filteredValue + processedValue.charAt(index);\n          processedValue = processedValue.substring(\n            index + 1,\n            processedValue.length\n          );\n\n          index = processedValue.search(filter);\n        }\n      }\n\n      return filteredValue;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyPlaceholder(value, old) {\n      if (this.__useQxPlaceholder) {\n        this._getPlaceholderElement().setValue(value);\n        if (value != null) {\n          this.addListener(\"focusin\", this._removePlaceholder, this);\n          this.addListener(\"focusout\", this._showPlaceholder, this);\n          this._showPlaceholder();\n        } else {\n          this.removeListener(\"focusin\", this._removePlaceholder, this);\n          this.removeListener(\"focusout\", this._showPlaceholder, this);\n          this._removePlaceholder();\n        }\n      } else {\n        // only apply if the widget is enabled\n        if (this.getEnabled()) {\n          this.getContentElement().setAttribute(\"placeholder\", value);\n\n          if (\n            qx.core.Environment.get(\"browser.name\") === \"firefox\" &&\n            parseFloat(qx.core.Environment.get(\"browser.version\")) < 36 &&\n            this.getContentElement().getNodeName() === \"textarea\" &&\n            !this.getContentElement().getDomElement()\n          ) {\n            /* qx Bug #8870: Firefox 35 will not display a text area's\n               placeholder text if the attribute is set before the\n               element is added to the DOM. This is fixed in FF 36. */\n            this.addListenerOnce(\n              \"appear\",\n              function () {\n                this.getContentElement()\n                  .getDomElement()\n                  .removeAttribute(\"placeholder\");\n                this.getContentElement()\n                  .getDomElement()\n                  .setAttribute(\"placeholder\", value);\n              },\n              this\n            );\n          }\n        }\n      }\n    },\n\n    // property apply\n    _applyTextAlign(value, old) {\n      this.getContentElement().setStyle(\"textAlign\", value);\n    },\n\n    // property apply\n    _applyReadOnly(value, old) {\n      var element = this.getContentElement();\n\n      element.setAttribute(\"readOnly\", value);\n\n      if (value) {\n        this.addState(\"readonly\");\n        this.setFocusable(false);\n      } else {\n        this.removeState(\"readonly\");\n        this.setFocusable(true);\n      }\n    }\n  },\n\n  defer(statics) {\n    var css =\n      \"border: none;\" +\n      \"padding: 0;\" +\n      \"margin: 0;\" +\n      \"display : block;\" +\n      \"background : transparent;\" +\n      \"outline: none;\" +\n      \"appearance: none;\" +\n      \"position: absolute;\" +\n      \"autoComplete: off;\" +\n      \"resize: none;\" +\n      \"border-radius: 0;\";\n\n    qx.ui.style.Stylesheet.getInstance().addRule(\".qx-abstract-field\", css);\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n  destruct() {\n    if (this._placeholder) {\n      this._placeholder.removeListener(\n        \"pointerdown\",\n        this._onPointerDownPlaceholder,\n        this\n      );\n\n      var parent = this._placeholder.getParent();\n      if (parent) {\n        parent.remove(this._placeholder);\n      }\n      this._placeholder.dispose();\n    }\n\n    this._placeholder = this.__font = null;\n\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeListener(\n        \"changeLocale\",\n        this._onChangeLocale,\n        this\n      );\n    }\n\n    if (this.__font && this.__webfontListenerId) {\n      this.__font.removeListenerById(this.__webfontListenerId);\n    }\n\n    this.getContentElement().removeListener(\"input\", this._onHtmlInput, this);\n  }\n});\n"
  ]
}