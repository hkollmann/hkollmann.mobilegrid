{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/form/HoverButton.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "basic",
    "Atom",
    "include",
    "core",
    "MExecutable",
    "implement",
    "form",
    "IExecutable",
    "construct",
    "label",
    "icon",
    "addListener",
    "_onPointerOver",
    "_onPointerOut",
    "__timer",
    "event",
    "AcceleratingTimer",
    "_onInterval",
    "properties",
    "appearance",
    "refine",
    "init",
    "interval",
    "check",
    "firstInterval",
    "minTimer",
    "timerDecrease",
    "members",
    "e",
    "isEnabled",
    "getTarget",
    "set",
    "getInterval",
    "getFirstInterval",
    "minimum",
    "getMinTimer",
    "decrease",
    "getTimerDecrease",
    "start",
    "addState",
    "stop",
    "removeState",
    "execute",
    "destruct",
    "_disposeObjects",
    "HoverButton"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2009 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The HoverButton is an {@link qx.ui.basic.Atom}, which fires repeatedly\n * execute events while the pointer is over the widget.\n *\n * The rate at which the execute event is fired accelerates is the pointer keeps\n * inside of the widget. The initial delay and the interval time can be set using\n * the properties {@link #firstInterval} and {@link #interval}. The\n * {@link #execute} events will be fired in a shorter amount of time if the pointer\n * remains over the widget, until the min {@link #minTimer} is reached.\n * The {@link #timerDecrease} property sets the amount of milliseconds which will\n * decreased after every firing.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   var button = new qx.ui.form.HoverButton(\"Hello World\");\n *\n *   button.addListener(\"execute\", function(e) {\n *     alert(\"Button is hovered\");\n *   }, this);\n *\n *   this.getRoot.add(button);\n * </pre>\n *\n * This example creates a button with the label \"Hello World\" and attaches an\n * event listener to the {@link #execute} event.\n *\n * *External Documentation*\n *\n * <a href='http://qooxdoo.org/docs/#desktop/widget/hoverbutton.md' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n */\nqx.Class.define(\"qx.ui.form.HoverButton\", {\n  extend: qx.ui.basic.Atom,\n  include: [qx.ui.core.MExecutable],\n  implement: [qx.ui.form.IExecutable],\n\n  /**\n   * @param label {String} Label to use\n   * @param icon {String?null} Icon to use\n   */\n  construct(label, icon) {\n    super(label, icon);\n\n    this.addListener(\"pointerover\", this._onPointerOver, this);\n    this.addListener(\"pointerout\", this._onPointerOut, this);\n\n    this.__timer = new qx.event.AcceleratingTimer();\n    this.__timer.addListener(\"interval\", this._onInterval, this);\n  },\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"hover-button\"\n    },\n\n    /**\n     * Interval used after the first run of the timer. Usually a smaller value\n     * than the \"firstInterval\" property value to get a faster reaction.\n     */\n    interval: {\n      check: \"Integer\",\n      init: 80\n    },\n\n    /**\n     * Interval used for the first run of the timer. Usually a greater value\n     * than the \"interval\" property value to a little delayed reaction at the first\n     * time.\n     */\n    firstInterval: {\n      check: \"Integer\",\n      init: 200\n    },\n\n    /** This configures the minimum value for the timer interval. */\n    minTimer: {\n      check: \"Integer\",\n      init: 20\n    },\n\n    /** Decrease of the timer on each interval (for the next interval) until minTimer reached. */\n    timerDecrease: {\n      check: \"Integer\",\n      init: 2\n    }\n  },\n\n  members: {\n    __timer: null,\n\n    /**\n     * Start timer on pointer over\n     *\n     * @param e {qx.event.type.Pointer} The pointer event\n     */\n    _onPointerOver(e) {\n      if (!this.isEnabled() || e.getTarget() !== this) {\n        return;\n      }\n\n      this.__timer\n        .set({\n          interval: this.getInterval(),\n          firstInterval: this.getFirstInterval(),\n          minimum: this.getMinTimer(),\n          decrease: this.getTimerDecrease()\n        })\n        .start();\n\n      this.addState(\"hovered\");\n    },\n\n    /**\n     * Stop timer on pointer out\n     *\n     * @param e {qx.event.type.Pointer} The pointer event\n     */\n    _onPointerOut(e) {\n      this.__timer.stop();\n      this.removeState(\"hovered\");\n\n      if (!this.isEnabled() || e.getTarget() !== this) {\n        return;\n      }\n    },\n\n    /**\n     * Fire execute event on timer interval event\n     */\n    _onInterval() {\n      if (this.isEnabled()) {\n        this.execute();\n      } else {\n        this.__timer.stop();\n      }\n    }\n  },\n\n  destruct() {\n    this._disposeObjects(\"__timer\");\n  }\n});\n"
  ]
}