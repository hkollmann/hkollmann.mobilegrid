{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/form/MenuButton.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "form",
    "Button",
    "construct",
    "label",
    "icon",
    "menu",
    "setMenu",
    "getContentElement",
    "setAttribute",
    "properties",
    "check",
    "nullable",
    "apply",
    "event",
    "appearance",
    "refine",
    "init",
    "members",
    "_applyVisibility",
    "value",
    "old",
    "getMenu",
    "hide",
    "_applyMenu",
    "removeListener",
    "_onMenuChange",
    "resetOpener",
    "addListener",
    "setOpener",
    "removeState",
    "contentEl",
    "isVisible",
    "getAttribute",
    "removeAttribute",
    "open",
    "selectFirst",
    "isFocusable",
    "core",
    "FocusHandler",
    "getInstance",
    "isFocused",
    "focus",
    "Manager",
    "hideAll",
    "first",
    "getSelectables",
    "setSelectedButton",
    "e",
    "menuVisible",
    "addState",
    "_onPointerDown",
    "getButton",
    "exclude",
    "stopPropagation",
    "_onPointerUp",
    "_onPointerOver",
    "_onPointerOut",
    "_onKeyDown",
    "getKeyIdentifier",
    "_onKeyUp",
    "MenuButton"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * A button which opens the connected menu when tapping on it.\n */\nqx.Class.define(\"qx.ui.form.MenuButton\", {\n  extend: qx.ui.form.Button,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String} Initial label\n   * @param icon {String?null} Initial icon\n   * @param menu {qx.ui.menu.Menu} Connect to menu instance\n   */\n  construct(label, icon, menu) {\n    super(label, icon);\n\n    // Initialize properties\n    if (menu != null) {\n      this.setMenu(menu);\n    }\n\n    // ARIA attrs\n    this.getContentElement().setAttribute(\"role\", \"button\");\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** The menu instance to show when tapping on the button */\n    menu: {\n      check: \"qx.ui.menu.Menu\",\n      nullable: true,\n      apply: \"_applyMenu\",\n      event: \"changeMenu\"\n    },\n\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"menubutton\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n    // overridden\n    _applyVisibility(value, old) {\n      super._applyVisibility(value, old);\n\n      // hide the menu too\n      var menu = this.getMenu();\n      if (value != \"visible\" && menu) {\n        menu.hide();\n      }\n    },\n\n    // property apply\n    _applyMenu(value, old) {\n      if (old) {\n        old.removeListener(\"changeVisibility\", this._onMenuChange, this);\n        old.resetOpener();\n      }\n\n      if (value) {\n        value.addListener(\"changeVisibility\", this._onMenuChange, this);\n        value.setOpener(this);\n\n        value.removeState(\"submenu\");\n        value.removeState(\"contextmenu\");\n      }\n\n      // ARIA attrs\n      const contentEl = this.getContentElement();\n      if (!contentEl) {\n        return;\n      }\n      if (value) {\n        contentEl.setAttribute(\"aria-haspopup\", \"menu\");\n        contentEl.setAttribute(\"aria-expanded\", value.isVisible());\n        contentEl.setAttribute(\n          \"aria-controls\",\n          value.getContentElement().getAttribute(\"id\")\n        );\n      } else {\n        contentEl.removeAttribute(\"aria-haspopup\");\n        contentEl.removeAttribute(\"aria-expanded\");\n        contentEl.removeAttribute(\"aria-controls\");\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER METHODS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Positions and shows the attached menu widget.\n     *\n     * @param selectFirst {Boolean?false} Whether the first menu button should be selected\n     */\n    open(selectFirst) {\n      var menu = this.getMenu();\n\n      if (menu) {\n        // Focus this button when the menu opens\n        if (\n          this.isFocusable() &&\n          !qx.ui.core.FocusHandler.getInstance().isFocused(this)\n        ) {\n          this.focus();\n        }\n        // Hide all menus first\n        qx.ui.menu.Manager.getInstance().hideAll();\n\n        // Open the attached menu\n        menu.setOpener(this);\n        menu.open();\n\n        // Select first item\n        if (selectFirst) {\n          var first = menu.getSelectables()[0];\n          if (first) {\n            menu.setSelectedButton(first);\n          }\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Listener for visibility property changes of the attached menu\n     *\n     * @param e {qx.event.type.Data} Property change event\n     */\n    _onMenuChange(e) {\n      var menu = this.getMenu();\n      const menuVisible = menu.isVisible();\n      if (menuVisible) {\n        this.addState(\"pressed\");\n      } else {\n        this.removeState(\"pressed\");\n      }\n\n      // ARIA attrs\n      this.getContentElement().setAttribute(\"aria-expanded\", menuVisible);\n    },\n\n    // overridden\n    _onPointerDown(e) {\n      // call the base function to get into the capture phase [BUG #4340]\n      super._onPointerDown(e);\n\n      // only open on left clicks [BUG #5125]\n      if (e.getButton() != \"left\") {\n        return;\n      }\n\n      var menu = this.getMenu();\n      if (menu) {\n        // Toggle sub menu visibility\n        if (!menu.isVisible()) {\n          this.open();\n        } else {\n          menu.exclude();\n        }\n\n        // Event is processed, stop it for others\n        e.stopPropagation();\n      }\n    },\n\n    // overridden\n    _onPointerUp(e) {\n      // call base for firing the execute event\n      super._onPointerUp(e);\n\n      // Just stop propagation to stop menu manager\n      // from getting the event\n      e.stopPropagation();\n    },\n\n    // overridden\n    _onPointerOver(e) {\n      // Add hovered state\n      this.addState(\"hovered\");\n    },\n\n    // overridden\n    _onPointerOut(e) {\n      // Just remove the hover state\n      this.removeState(\"hovered\");\n    },\n\n    // overridden\n    _onKeyDown(e) {\n      switch (e.getKeyIdentifier()) {\n        case \"Space\":\n        case \"Enter\":\n          this.removeState(\"abandoned\");\n          this.addState(\"pressed\");\n\n          var menu = this.getMenu();\n          if (menu) {\n            // Toggle sub menu visibility\n            if (!menu.isVisible()) {\n              this.open();\n            } else {\n              menu.exclude();\n            }\n          }\n\n          e.stopPropagation();\n      }\n    },\n\n    // overridden\n    _onKeyUp(e) {\n      // no action required here\n    }\n  }\n});\n"
  ]
}