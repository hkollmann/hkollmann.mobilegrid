{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/basic/Label.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "implement",
    "form",
    "IStringForm",
    "construct",
    "value",
    "setValue",
    "locale",
    "Manager",
    "getInstance",
    "addListener",
    "_onChangeLocale",
    "properties",
    "rich",
    "check",
    "init",
    "event",
    "apply",
    "wrap",
    "breakWithinWords",
    "nullable",
    "buddy",
    "dereference",
    "textAlign",
    "themeable",
    "appearance",
    "refine",
    "selectable",
    "allowGrowX",
    "allowGrowY",
    "allowShrinkY",
    "members",
    "__font",
    "__invalidContentSize",
    "__tapListenerId",
    "__webfontListenerId",
    "_getContentHint",
    "__contentSize",
    "__computeContentSize",
    "width",
    "height",
    "_hasHeightForWidth",
    "getRich",
    "getWrap",
    "_applySelectable",
    "Environment",
    "get",
    "isRich",
    "_getContentHeightForWidth",
    "_createContentElement",
    "html",
    "Label",
    "_applyTextAlign",
    "old",
    "getContentElement",
    "setStyle",
    "_applyTextColor",
    "theme",
    "manager",
    "Color",
    "resolve",
    "removeStyle",
    "_applyFont",
    "removeListenerById",
    "styles",
    "Font",
    "bom",
    "webfonts",
    "WebFont",
    "isValid",
    "_onWebFontStatusChange",
    "getStyles",
    "getDefaultStyles",
    "getTextColor",
    "setStyles",
    "queue",
    "Layout",
    "add",
    "font",
    "getFont",
    "content",
    "getValue",
    "__fixEllipsis",
    "getBreakWithinWords",
    "wordBreak",
    "getHtmlSize",
    "getTextSize",
    "parseInt",
    "domEl",
    "getDomElement",
    "innerHTML",
    "_applyBuddy",
    "removeRelatedBindings",
    "bind",
    "isFocusable",
    "focus",
    "toggleValue",
    "_applyRich",
    "setRich",
    "_applyWrap",
    "whiteSpace",
    "_applyBreakWithinWords",
    "select",
    "e",
    "translate",
    "ev",
    "getData",
    "valid",
    "parseFloat",
    "window",
    "setTimeout",
    "_applyValue",
    "destruct",
    "removeListener",
    "basic"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * The label class brings typical text content to the widget system.\n *\n * It supports simple text nodes and complex HTML (rich). The default\n * content mode is for text only. The mode is changeable through the property\n * {@link #rich}.\n *\n * The label supports heightForWidth when used in HTML mode. This means\n * that multi line HTML automatically computes the correct preferred height.\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   // a simple text label without wrapping and markup support\n *   var label1 = new qx.ui.basic.Label(\"Simple text label\");\n *   this.getRoot().add(label1, {left:20, top:10});\n *\n *   // a HTML label with automatic line wrapping\n *   var label2 = new qx.ui.basic.Label().set({\n *     value: \"A <b>long label</b> text with auto-wrapping. This also may contain <b style='color:red'>rich HTML</b> markup.\",\n *     rich : true,\n *     width: 120\n *   });\n *   this.getRoot().add(label2, {left:20, top:50});\n * </pre>\n *\n * The first label in this example is a basic text only label. As such no\n * automatic wrapping is supported. The second label is a long label containing\n * HTML markup with automatic line wrapping.\n *\n * *External Documentation*\n *\n * <a href='http://qooxdoo.org/docs/#desktop/widget/label.md' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.ui.basic.Label\", {\n  extend: qx.ui.core.Widget,\n  implement: [qx.ui.form.IStringForm],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param value {String} Text or HTML content to use\n   */\n  construct(value) {\n    super();\n\n    if (value != null) {\n      this.setValue(value);\n    }\n\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().addListener(\n        \"changeLocale\",\n        this._onChangeLocale,\n        this\n      );\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Switches between rich HTML and text content. The text mode (<code>false</code>) supports\n     * advanced features like ellipsis when the available space is not\n     * enough. HTML mode (<code>true</code>) supports multi-line content and all the\n     * markup features of HTML content.\n     */\n    rich: {\n      check: \"Boolean\",\n      init: false,\n      event: \"changeRich\",\n      apply: \"_applyRich\"\n    },\n\n    /**\n     * Controls whether text wrap is activated or not. But please note, that\n     * this property works only in combination with the property {@link #rich}.\n     * The {@link #wrap} has only an effect if the {@link #rich} property is\n     * set to <code>true</code>, otherwise {@link #wrap} has no effect.\n     */\n    wrap: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyWrap\"\n    },\n\n    /**\n     * Controls whether line wrapping can occur in the middle of a word; this is\n     * typically only useful when there is a restricted amount of horizontal space\n     * and words would otherwise overflow beyond the width of the element.  Words\n     * are typically considered as separated by spaces, so \"abc/def/ghi\" is a 11\n     * character word that would not be split without `breakWithWords` set to true.\n     */\n    breakWithinWords: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyBreakWithinWords\"\n    },\n\n    /**\n     * Contains the HTML or text content. Interpretation depends on the value\n     * of {@link #rich}. In text mode entities and other HTML special content\n     * is not supported. But it is possible to use unicode escape sequences\n     * to insert symbols and other non ASCII characters.\n     */\n    value: {\n      check: \"String\",\n      apply: \"_applyValue\",\n      event: \"changeValue\",\n      nullable: true\n    },\n\n    /**\n     * The buddy property can be used to connect the label to another widget.\n     * That causes two things:\n     * <ul>\n     *   <li>The label will always take the same enabled state as the buddy\n     *       widget.\n     *   </li>\n     *   <li>A tap on the label will focus the buddy widget.</li>\n     * </ul>\n     * This is the behavior of the for attribute of HTML:\n     * http://www.w3.org/TR/html401/interact/forms.html#adef-for\n     */\n    buddy: {\n      check: \"qx.ui.core.Widget\",\n      apply: \"_applyBuddy\",\n      nullable: true,\n      init: null,\n      dereference: true\n    },\n\n    /** Control the text alignment */\n    textAlign: {\n      check: [\"left\", \"center\", \"right\", \"justify\"],\n      nullable: true,\n      themeable: true,\n      apply: \"_applyTextAlign\",\n      event: \"changeTextAlign\"\n    },\n\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"label\"\n    },\n\n    // overridden\n    selectable: {\n      refine: true,\n      init: false\n    },\n\n    // overridden\n    allowGrowX: {\n      refine: true,\n      init: false\n    },\n\n    // overridden\n    allowGrowY: {\n      refine: true,\n      init: false\n    },\n\n    // overridden\n    allowShrinkY: {\n      refine: true,\n      init: false\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    __font: null,\n    __invalidContentSize: null,\n    __tapListenerId: null,\n    __webfontListenerId: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _getContentHint() {\n      if (this.__invalidContentSize) {\n        this.__contentSize = this.__computeContentSize();\n        delete this.__invalidContentSize;\n      }\n\n      return {\n        width: this.__contentSize.width,\n        height: this.__contentSize.height\n      };\n    },\n\n    // overridden\n    _hasHeightForWidth() {\n      return this.getRich() && this.getWrap();\n    },\n\n    // overridden\n    _applySelectable(value) {\n      // This is needed for all browsers not having text-overflow:ellipsis\n      // but supporting XUL (firefox < 4)\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=312156\n      if (\n        !qx.core.Environment.get(\"css.textoverflow\") &&\n        qx.core.Environment.get(\"html.xul\")\n      ) {\n        if (value && !this.isRich()) {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            this.warn(\n              \"Only rich labels are selectable in browsers with Gecko engine!\"\n            );\n          }\n          return;\n        }\n      }\n\n      super._applySelectable(value);\n    },\n\n    // overridden\n    _getContentHeightForWidth(width) {\n      if (!this.getRich() && !this.getWrap()) {\n        return null;\n      }\n      return this.__computeContentSize(width).height;\n    },\n\n    // overridden\n    _createContentElement() {\n      return new qx.html.Label();\n    },\n\n    // property apply\n    _applyTextAlign(value, old) {\n      this.getContentElement().setStyle(\"textAlign\", value);\n    },\n\n    // overridden\n    _applyTextColor(value, old) {\n      if (value) {\n        this.getContentElement().setStyle(\n          \"color\",\n          qx.theme.manager.Color.getInstance().resolve(value)\n        );\n      } else {\n        this.getContentElement().removeStyle(\"color\");\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      LABEL ADDONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * @type {Map} Internal fallback of label size when no font is defined\n     *\n     * @lint ignoreReferenceField(__contentSize)\n     */\n    __contentSize: {\n      width: 0,\n      height: 0\n    },\n\n    // property apply\n    _applyFont(value, old) {\n      if (old && this.__font && this.__webfontListenerId) {\n        this.__font.removeListenerById(this.__webfontListenerId);\n        this.__webfontListenerId = null;\n      }\n      // Apply\n      var styles;\n      if (value) {\n        this.__font = qx.theme.manager.Font.getInstance().resolve(value);\n        if (this.__font instanceof qx.bom.webfonts.WebFont) {\n          if (!this.__font.isValid()) {\n            this.__webfontListenerId = this.__font.addListener(\n              \"changeStatus\",\n              this._onWebFontStatusChange,\n              this\n            );\n          }\n        }\n        styles = this.__font.getStyles();\n      } else {\n        this.__font = null;\n        styles = qx.bom.Font.getDefaultStyles();\n      }\n\n      // check if text color already set - if so this local value has higher priority\n      if (this.getTextColor() != null) {\n        delete styles[\"color\"];\n      }\n\n      this.getContentElement().setStyles(styles);\n\n      // Invalidate text size\n      this.__invalidContentSize = true;\n\n      // Update layout\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n    /**\n     * Internal utility to compute the content dimensions.\n     *\n     * @param width {Integer?null} Optional width constraint\n     * @return {Map} Map with <code>width</code> and <code>height</code> keys\n     */\n    __computeContentSize(width) {\n      var Label = qx.bom.Label;\n      var font = this.getFont();\n\n      var styles = font\n        ? this.__font.getStyles()\n        : qx.bom.Font.getDefaultStyles();\n      var content = this.getValue() || \"A\";\n      var rich = this.getRich();\n\n      if (this.__webfontListenerId) {\n        this.__fixEllipsis();\n      }\n      if (rich && this.getBreakWithinWords()) {\n        styles.wordBreak = \"break-all\";\n      }\n\n      return rich\n        ? Label.getHtmlSize(content, styles, width)\n        : Label.getTextSize(content, styles);\n    },\n\n    /**\n     * Firefox > 9 on OS X will draw an ellipsis on top of the label content even\n     * though there is enough space for the text. Re-applying the content forces\n     * a recalculation and fixes the problem. See qx bug #6293\n     */\n    __fixEllipsis() {\n      if (!this.getContentElement()) {\n        return;\n      }\n      if (\n        qx.core.Environment.get(\"os.name\") == \"osx\" &&\n        qx.core.Environment.get(\"engine.name\") == \"gecko\" &&\n        parseInt(qx.core.Environment.get(\"engine.version\"), 10) < 16 &&\n        parseInt(qx.core.Environment.get(\"engine.version\"), 10) > 9\n      ) {\n        var domEl = this.getContentElement().getDomElement();\n        if (domEl) {\n          /* eslint-disable-next-line no-self-assign */\n          domEl.innerHTML = domEl.innerHTML;\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLIER\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyBuddy(value, old) {\n      if (old != null) {\n        this.removeRelatedBindings(old);\n        this.removeListenerById(this.__tapListenerId);\n        this.__tapListenerId = null;\n      }\n\n      if (value != null) {\n        value.bind(\"enabled\", this, \"enabled\");\n        this.__tapListenerId = this.addListener(\n          \"tap\",\n          function () {\n            // only focus focusable elements [BUG #3555]\n            if (value.isFocusable()) {\n              value.focus.apply(value);\n            }\n            // furthermore toggle if possible [BUG #6881]\n            if (\n              \"toggleValue\" in value &&\n              typeof value.toggleValue === \"function\"\n            ) {\n              value.toggleValue();\n            }\n          },\n          this\n        );\n      }\n    },\n\n    // property apply\n    _applyRich(value) {\n      // Sync with content element\n      this.getContentElement().setRich(value);\n\n      // Mark text size cache as invalid\n      this.__invalidContentSize = true;\n\n      // Update layout\n      qx.ui.core.queue.Layout.add(this);\n    },\n\n    // property apply\n    _applyWrap(value, old) {\n      if (value && !this.isRich()) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          this.warn(\"Only rich labels support wrap.\");\n        }\n      }\n\n      if (this.isRich()) {\n        // apply the white space style to the label to force it not\n        // to wrap if wrap is set to false [BUG #3732]\n        var whiteSpace = value ? \"normal\" : \"nowrap\";\n        this.getContentElement().setStyle(\"whiteSpace\", whiteSpace);\n      }\n    },\n\n    // property apply\n    _applyBreakWithinWords(value, old) {\n      if (this.isRich()) {\n        this.getContentElement().setStyle(\n          \"wordBreak\",\n          value ? \"break-all\" : \"normal\"\n        );\n      }\n    },\n\n    /**\n     * Locale change event handler\n     *\n     * @signature function(e)\n     * @param e {Event} the change event\n     */\n    _onChangeLocale: qx.core.Environment.select(\"qx.dynlocale\", {\n      true(e) {\n        var content = this.getValue();\n        if (content && content.translate) {\n          this.setValue(content.translate());\n        }\n      },\n\n      false: null\n    }),\n\n    /**\n     * Triggers layout recalculation after a web font was loaded\n     *\n     * @param ev {qx.event.type.Data} \"changeStatus\" event\n     */\n    _onWebFontStatusChange(ev) {\n      if (ev.getData().valid === true) {\n        // safari has trouble resizing, adding it again fixed the issue [BUG #8786]\n        if (\n          qx.core.Environment.get(\"browser.name\") == \"safari\" &&\n          parseFloat(qx.core.Environment.get(\"browser.version\")) >= 8\n        ) {\n          window.setTimeout(\n            function () {\n              this.__invalidContentSize = true;\n              qx.ui.core.queue.Layout.add(this);\n            }.bind(this),\n            0\n          );\n        }\n\n        this.__invalidContentSize = true;\n        qx.ui.core.queue.Layout.add(this);\n      }\n    },\n\n    // property apply\n    _applyValue: qx.core.Environment.select(\"qx.dynlocale\", {\n      true(value, old) {\n        // Sync with content element\n        if (value && value.translate) {\n          this.getContentElement().setValue(value.translate());\n        } else {\n          this.getContentElement().setValue(value);\n        }\n\n        // Mark text size cache as invalid\n        this.__invalidContentSize = true;\n\n        // Update layout\n        qx.ui.core.queue.Layout.add(this);\n      },\n\n      false(value, old) {\n        this.getContentElement().setValue(value);\n\n        // Mark text size cache as invalid\n        this.__invalidContentSize = true;\n\n        // Update layout\n        qx.ui.core.queue.Layout.add(this);\n      }\n    })\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeListener(\n        \"changeLocale\",\n        this._onChangeLocale,\n        this\n      );\n    }\n\n    if (this.__font && this.__webfontListenerId) {\n      this.__font.removeListenerById(this.__webfontListenerId);\n    }\n\n    this.__font = null;\n  }\n});\n"
  ]
}