{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/basic/Atom.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "construct",
    "label",
    "icon",
    "_setLayout",
    "layout",
    "Atom",
    "setLabel",
    "undefined",
    "setIcon",
    "properties",
    "appearance",
    "refine",
    "init",
    "apply",
    "nullable",
    "check",
    "event",
    "rich",
    "themeable",
    "gap",
    "show",
    "inheritable",
    "iconPosition",
    "center",
    "members",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "basic",
    "Label",
    "getLabel",
    "setAnonymous",
    "setRich",
    "getRich",
    "setSelectable",
    "getSelectable",
    "_add",
    "getShow",
    "exclude",
    "Image",
    "getIcon",
    "_addAt",
    "_forwardStates",
    "focused",
    "hovered",
    "_handleLabel",
    "_excludeChildControl",
    "_showChildControl",
    "_handleIcon",
    "_applyLabel",
    "value",
    "old",
    "getChildControl",
    "setValue",
    "_applyRich",
    "_applyIcon",
    "setSource",
    "_applyGap",
    "_getLayout",
    "setGap",
    "_applyShow",
    "_applyIconPosition",
    "setIconPosition",
    "_applyCenter",
    "setCenter",
    "_applySelectable"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A multi-purpose widget, which combines a label with an icon.\n *\n * The intended purpose of qx.ui.basic.Atom is to easily align the common icon-text\n * combination in different ways.\n *\n * This is useful for all types of buttons, tooltips, ...\n *\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   var atom = new qx.ui.basic.Atom(\"Icon Right\", \"icon/32/actions/go-next.png\");\n *   this.getRoot().add(atom);\n * </pre>\n *\n * This example creates an atom with the label \"Icon Right\" and an icon.\n *\n * *External Documentation*\n *\n * <a href='http://qooxdoo.org/docs/#desktop/widget/atom.md' target='_blank'>\n * Documentation of this widget in the qooxdoo manual.</a>\n *\n *\n * @childControl label {qx.ui.basic.Label} label part of the atom\n * @childControl icon {qx.ui.basic.Image} icon part of the atom\n */\nqx.Class.define(\"qx.ui.basic.Atom\", {\n  extend: qx.ui.core.Widget,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String} Label to use\n   * @param icon {String?null} Icon to use\n   */\n  construct(label, icon) {\n    if (qx.core.Environment.get(\"qx.debug\")) {\n      this.assertArgumentsCount(arguments, 0, 2);\n    }\n\n    super();\n\n    this._setLayout(new qx.ui.layout.Atom());\n\n    if (label != null) {\n      this.setLabel(label);\n    }\n\n    if (icon !== undefined) {\n      this.setIcon(icon);\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"atom\"\n    },\n\n    /** The label/caption/text of the qx.ui.basic.Atom instance */\n    label: {\n      apply: \"_applyLabel\",\n      nullable: true,\n      check: \"String\",\n      event: \"changeLabel\"\n    },\n\n    /**\n     * Switches between rich HTML and text content. The text mode (<code>false</code>) supports\n     * advanced features like ellipsis when the available space is not\n     * enough. HTML mode (<code>true</code>) supports multi-line content and all the\n     * markup features of HTML content.\n     */\n    rich: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyRich\"\n    },\n\n    /** Any URI String supported by qx.ui.basic.Image to display an icon */\n    icon: {\n      check: \"String\",\n      apply: \"_applyIcon\",\n      nullable: true,\n      themeable: true,\n      event: \"changeIcon\"\n    },\n\n    /**\n     * The space between the icon and the label\n     */\n    gap: {\n      check: \"Integer\",\n      nullable: false,\n      event: \"changeGap\",\n      apply: \"_applyGap\",\n      themeable: true,\n      init: 4\n    },\n\n    /**\n     * Configure the visibility of the sub elements/widgets.\n     * Possible values: both, label, icon\n     */\n    show: {\n      init: \"both\",\n      check: [\"both\", \"label\", \"icon\"],\n      themeable: true,\n      inheritable: true,\n      apply: \"_applyShow\",\n      event: \"changeShow\"\n    },\n\n    /**\n     * The position of the icon in relation to the text.\n     * Only useful/needed if text and icon is configured and 'show' is configured as 'both' (default)\n     */\n    iconPosition: {\n      init: \"left\",\n      check: [\n        \"top\",\n        \"right\",\n        \"bottom\",\n        \"left\",\n        \"top-left\",\n        \"bottom-left\",\n        \"top-right\",\n        \"bottom-right\"\n      ],\n\n      themeable: true,\n      apply: \"_applyIconPosition\"\n    },\n\n    /**\n     * Whether the content should be rendered centrally when to much space\n     * is available. Enabling this property centers in both axis. The behavior\n     * when disabled of the centering depends on the {@link #iconPosition} property.\n     * If the icon position is <code>left</code> or <code>right</code>, the X axis\n     * is not centered, only the Y axis. If the icon position is <code>top</code>\n     * or <code>bottom</code>, the Y axis is not centered. In case of e.g. an\n     * icon position of <code>top-left</code> no axis is centered.\n     */\n    center: {\n      init: false,\n      check: \"Boolean\",\n      themeable: true,\n      apply: \"_applyCenter\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n  members: {\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"label\":\n          control = new qx.ui.basic.Label(this.getLabel());\n          control.setAnonymous(true);\n          control.setRich(this.getRich());\n          control.setSelectable(this.getSelectable());\n          this._add(control);\n          if (this.getLabel() == null || this.getShow() === \"icon\") {\n            control.exclude();\n          }\n          break;\n\n        case \"icon\":\n          control = new qx.ui.basic.Image(this.getIcon());\n          control.setAnonymous(true);\n          this._addAt(control, 0);\n          if (this.getIcon() == null || this.getShow() === \"label\") {\n            control.exclude();\n          }\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      focused: true,\n      hovered: true\n    },\n\n    /**\n     * Updates the visibility of the label\n     */\n    _handleLabel() {\n      if (this.getLabel() == null || this.getShow() === \"icon\") {\n        this._excludeChildControl(\"label\");\n      } else {\n        this._showChildControl(\"label\");\n      }\n    },\n\n    /**\n     * Updates the visibility of the icon\n     */\n    _handleIcon() {\n      if (this.getIcon() == null || this.getShow() === \"label\") {\n        this._excludeChildControl(\"icon\");\n      } else {\n        this._showChildControl(\"icon\");\n      }\n    },\n\n    // property apply\n    _applyLabel(value, old) {\n      var label = this.getChildControl(\"label\", true);\n      if (label) {\n        label.setValue(value);\n      }\n\n      this._handleLabel();\n    },\n\n    // property apply\n    _applyRich(value, old) {\n      var label = this.getChildControl(\"label\", true);\n      if (label) {\n        label.setRich(value);\n      }\n    },\n\n    // property apply\n    _applyIcon(value, old) {\n      var icon = this.getChildControl(\"icon\", true);\n      if (icon) {\n        icon.setSource(value);\n      }\n\n      this._handleIcon();\n    },\n\n    // property apply\n    _applyGap(value, old) {\n      this._getLayout().setGap(value);\n    },\n\n    // property apply\n    _applyShow(value, old) {\n      this._handleLabel();\n      this._handleIcon();\n    },\n\n    // property apply\n    _applyIconPosition(value, old) {\n      this._getLayout().setIconPosition(value);\n    },\n\n    // property apply\n    _applyCenter(value, old) {\n      this._getLayout().setCenter(value);\n    },\n\n    // overridden\n    _applySelectable(value, old) {\n      super._applySelectable(value, old);\n\n      var label = this.getChildControl(\"label\", true);\n      if (label) {\n        this.getChildControl(\"label\").setSelectable(value);\n      }\n    }\n  }\n});\n"
  ]
}