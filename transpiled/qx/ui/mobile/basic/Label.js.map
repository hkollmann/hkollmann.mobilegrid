{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/basic/Label.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "mobile",
    "core",
    "Widget",
    "construct",
    "value",
    "setValue",
    "initWrap",
    "locale",
    "Manager",
    "getInstance",
    "addListener",
    "_onChangeLocale",
    "properties",
    "defaultCssClass",
    "refine",
    "init",
    "nullable",
    "check",
    "apply",
    "event",
    "anonymous",
    "wrap",
    "members",
    "_applyValue",
    "old",
    "_setHtml",
    "_applyWrap",
    "removeCssClass",
    "addCssClass",
    "Environment",
    "select",
    "e",
    "content",
    "getValue",
    "translate",
    "destruct",
    "removeListener",
    "basic",
    "Label"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,0BAAhB,EAA4C;AAC1CC,IAAAA,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,MAAN,CAAaC,IAAb,CAAkBC,MADgB;;AAG1C;AACF;AACA;AACA;AACA;;AAEE;AACF;AACA;AACEC,IAAAA,SAZ0C,qBAYhCC,KAZgC,EAYzB;AACf;;AACA,UAAIA,KAAJ,EAAW;AACT,aAAKC,QAAL,CAAcD,KAAd;AACD;;AACD,WAAKE,QAAL;AAE6C;AAC3Cd,QAAAA,EAAE,CAACe,MAAH,CAAUC,OAAV,CAAkBC,WAAlB,GAAgCC,WAAhC,CACE,cADF,EAEE,KAAKC,eAFP,EAGE,IAHF;AAKD;AACF,KA1ByC;;AA4B1C;AACF;AACA;AACA;AACA;AAEEC,IAAAA,UAAU,EAAE;AACV;AACAC,MAAAA,eAAe,EAAE;AACfC,QAAAA,MAAM,EAAE,IADO;AAEfC,QAAAA,IAAI,EAAE;AAFS,OAFP;;AAOV;AACJ;AACA;AACIX,MAAAA,KAAK,EAAE;AACLY,QAAAA,QAAQ,EAAE,IADL;AAELD,QAAAA,IAAI,EAAE,IAFD;AAGLE,QAAAA,KAAK,EAAE,QAHF;AAILC,QAAAA,KAAK,EAAE,aAJF;AAKLC,QAAAA,KAAK,EAAE;AALF,OAVG;AAkBV;AACAC,MAAAA,SAAS,EAAE;AACTN,QAAAA,MAAM,EAAE,IADC;AAETC,QAAAA,IAAI,EAAE;AAFG,OAnBD;;AAwBV;AACJ;AACA;AACIM,MAAAA,IAAI,EAAE;AACJJ,QAAAA,KAAK,EAAE,SADH;AAEJF,QAAAA,IAAI,EAAE,IAFF;AAGJG,QAAAA,KAAK,EAAE;AAHH;AA3BI,KAlC8B;;AAoE1C;AACF;AACA;AACA;AACA;AAEEI,IAAAA,OAAO,EAAE;AACP;AACAC,MAAAA,WAFO,uBAEKnB,KAFL,EAEYoB,GAFZ,EAEiB;AACtB,aAAKC,QAAL,CAAcrB,KAAd;AACD,OAJM;AAMP;AACAsB,MAAAA,UAPO,sBAOItB,KAPJ,EAOWoB,GAPX,EAOgB;AACrB,YAAIpB,KAAJ,EAAW;AACT,eAAKuB,cAAL,CAAoB,SAApB;AACD,SAFD,MAEO;AACL,eAAKC,WAAL,CAAiB,SAAjB;AACD;AACF,OAbM;;AAeP;AACJ;AACA;AACA;AACA;AACA;AACIjB,MAAAA,eAAe,EAAEnB,EAAE,CAACS,IAAH,CAAQ4B,WAAR,CAAoBC,MAApB,CAA2B,cAA3B,EAA2C;AAAA,+BACrDC,CADqD,EAClD;AACN,cAAIC,OAAO,GAAG,KAAKC,QAAL,EAAd;;AACA,cAAID,OAAO,IAAIA,OAAO,CAACE,SAAvB,EAAkC;AAChC,iBAAK7B,QAAL,CAAc2B,OAAO,CAACE,SAAR,EAAd;AACD;AACF,SANyD;AAQ1D,iBAAO;AARmD,OAA3C;AArBV,KA1EiC;;AA2G1C;AACF;AACA;AACA;AACA;AAEEC,IAAAA,QAjH0C,sBAiH/B;AACoC;AAC3C3C,QAAAA,EAAE,CAACe,MAAH,CAAUC,OAAV,CAAkBC,WAAlB,GAAgC2B,cAAhC,CACE,cADF,EAEE,KAAKzB,eAFP,EAGE,IAHF;AAKD;AACF;AAzHyC,GAA5C;AAjCAnB,EAAAA,EAAE,CAACO,EAAH,CAAMC,MAAN,CAAaqC,KAAb,CAAmBC,KAAnB,CAAyB3C,aAAzB,GAAyCA,aAAzC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\n/**\n * The label widget displays a text or HTML content.\n * *Example*\n *\n * Here is a little example of how to use the widget.\n *\n * <pre class='javascript'>\n *   var label = new qx.ui.mobile.basic.Label(\"Hello World\");\n *\n *   this.getRoot().add(label);\n * </pre>\n *\n * This example create a widget to display the label.\n *\n */\nqx.Class.define(\"qx.ui.mobile.basic.Label\", {\n  extend: qx.ui.mobile.core.Widget,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param value {String?null} Text or HTML content to display\n   */\n  construct(value) {\n    super();\n    if (value) {\n      this.setValue(value);\n    }\n    this.initWrap();\n\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().addListener(\n        \"changeLocale\",\n        this._onChangeLocale,\n        this\n      );\n    }\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    defaultCssClass: {\n      refine: true,\n      init: \"label\"\n    },\n\n    /**\n     * Text or HTML content to display\n     */\n    value: {\n      nullable: true,\n      init: null,\n      check: \"String\",\n      apply: \"_applyValue\",\n      event: \"changeValue\"\n    },\n\n    // overridden\n    anonymous: {\n      refine: true,\n      init: true\n    },\n\n    /**\n     * Controls whether text wrap is activated or not.\n     */\n    wrap: {\n      check: \"Boolean\",\n      init: true,\n      apply: \"_applyWrap\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    // property apply\n    _applyValue(value, old) {\n      this._setHtml(value);\n    },\n\n    // property apply\n    _applyWrap(value, old) {\n      if (value) {\n        this.removeCssClass(\"no-wrap\");\n      } else {\n        this.addCssClass(\"no-wrap\");\n      }\n    },\n\n    /**\n     * Locale change event handler\n     *\n     * @signature function(e)\n     * @param e {Event} the change event\n     */\n    _onChangeLocale: qx.core.Environment.select(\"qx.dynlocale\", {\n      true(e) {\n        var content = this.getValue();\n        if (content && content.translate) {\n          this.setValue(content.translate());\n        }\n      },\n\n      false: null\n    })\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    if (qx.core.Environment.get(\"qx.dynlocale\")) {\n      qx.locale.Manager.getInstance().removeListener(\n        \"changeLocale\",\n        this._onChangeLocale,\n        this\n      );\n    }\n  }\n});\n"
  ]
}