{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/mobile/core/DomUpdatedHandler.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "event",
    "IEventHandler",
    "construct",
    "manager",
    "__manager",
    "__targets",
    "ui",
    "mobile",
    "DomUpdatedHandler",
    "__instances",
    "toHashCode",
    "statics",
    "PRIORITY",
    "Registration",
    "PRIORITY_NORMAL",
    "SUPPORTED_TYPES",
    "domupdated",
    "IGNORE_CAN_HANDLE",
    "refresh",
    "all",
    "hash",
    "members",
    "canHandleEvent",
    "target",
    "type",
    "Widget",
    "registerEvent",
    "capture",
    "targets",
    "unregisterEvent",
    "$$disposed",
    "isSeeable",
    "evt",
    "createEvent",
    "dispatchEvent",
    "destruct",
    "defer",
    "addHandler"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Tino Butz (tbtz)\n\n************************************************************************ */\n\n/**\n * This class provides the <code>domupdated</code> event. The event is\n * delegated to all widget instances that have a\n * listener for the <code>domupdated</code> event registered.\n *\n * @internal\n */\nqx.Class.define(\"qx.ui.mobile.core.DomUpdatedHandler\", {\n  extend: qx.core.Object,\n  implement: qx.event.IEventHandler,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * Create a new instance\n   *\n   * @param manager {qx.event.Manager} Event manager for the window to use\n   */\n  construct(manager) {\n    super();\n\n    this.__manager = manager;\n    this.__targets = {};\n\n    // Register\n    qx.ui.mobile.core.DomUpdatedHandler.__instances[this.toHashCode()] = this;\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /** @type {Integer} Priority of this handler */\n    PRIORITY: qx.event.Registration.PRIORITY_NORMAL,\n\n    /** @type {Map} Supported event types */\n    SUPPORTED_TYPES: {\n      domupdated: 1\n    },\n\n    /** @type {Integer} Whether the method \"canHandleEvent\" must be called */\n    IGNORE_CAN_HANDLE: false,\n\n    /** @type {Map} Stores all domUpdated manager instances */\n    __instances: {},\n\n    /**\n     * Informs all handlers. Useful after massive DOM manipulations e.g.\n     * through {@link qx.ui.mobile.core.Widget}.\n     *\n     */\n    refresh() {\n      var all = this.__instances;\n      for (var hash in all) {\n        all[hash].refresh();\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __manager: null,\n    __targets: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER INTERFACE\n    ---------------------------------------------------------------------------\n    */\n\n    // interface implementation\n    canHandleEvent(target, type) {\n      return target instanceof qx.ui.mobile.core.Widget;\n    },\n\n    // interface implementation\n    registerEvent(target, type, capture) {\n      var hash = target.toHashCode();\n      var targets = this.__targets;\n\n      if (targets && !targets[hash]) {\n        targets[hash] = target;\n      }\n    },\n\n    // interface implementation\n    unregisterEvent(target, type, capture) {\n      var hash = target.toHashCode();\n      var targets = this.__targets;\n      if (!targets) {\n        return;\n      }\n\n      if (targets[hash]) {\n        delete targets[hash];\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      USER ACCESS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * This method is called by all DOM tree modifying routines\n     * to inform the widgets.\n     *\n     */\n    refresh() {\n      var targets = this.__targets;\n      var target;\n      for (var hash in targets) {\n        target = targets[hash];\n        if (target && !target.$$disposed && target.isSeeable()) {\n          var evt = qx.event.Registration.createEvent(\"domupdated\");\n          this.__manager.dispatchEvent(target, evt);\n        }\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this.__manager = this.__targets = null;\n\n    // Deregister\n    delete qx.ui.mobile.core.DomUpdatedHandler.__instances[this.toHashCode()];\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer(statics) {\n    qx.event.Registration.addHandler(statics);\n  }\n});\n"
  ]
}