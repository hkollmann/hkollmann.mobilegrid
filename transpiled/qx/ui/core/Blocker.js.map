{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/core/Blocker.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "events",
    "blocked",
    "unblocked",
    "construct",
    "widget",
    "_widget",
    "addListener",
    "__onBoundsChange",
    "__onWidgetDisappear",
    "isDefined",
    "ui",
    "root",
    "Abstract",
    "_isRoot",
    "setKeepBlockerActive",
    "theme",
    "manager",
    "Meta",
    "getInstance",
    "_onChangeTheme",
    "__activeElements",
    "__focusElements",
    "properties",
    "color",
    "check",
    "init",
    "nullable",
    "apply",
    "themeable",
    "opacity",
    "keepBlockerActive",
    "members",
    "__blocker",
    "__blockerCount",
    "__timer",
    "__appearListener",
    "e",
    "data",
    "getData",
    "isBlocked",
    "_updateBlockerBounds",
    "__onWidgetAppear",
    "getBounds",
    "isRootWidget",
    "getContentElement",
    "add",
    "getBlockerElement",
    "getLayoutParent",
    "getParent",
    "remove",
    "addListenerOnce",
    "bounds",
    "setStyles",
    "width",
    "height",
    "left",
    "top",
    "_applyColor",
    "value",
    "old",
    "Color",
    "resolve",
    "__setBlockersStyle",
    "_applyOpacity",
    "Environment",
    "select",
    "getColor",
    "key",
    "blockers",
    "push",
    "i",
    "length",
    "setStyle",
    "_backupActiveWidget",
    "focusHandler",
    "event",
    "Registration",
    "getManager",
    "window",
    "getHandler",
    "handler",
    "Focus",
    "activeWidget",
    "Widget",
    "getWidgetByElement",
    "getActive",
    "focusedWidget",
    "getFocus",
    "deactivate",
    "isFocusable",
    "blur",
    "_restoreActiveWidget",
    "focusElementsLength",
    "pop",
    "isDisposed",
    "focus",
    "activeElementsLength",
    "activate",
    "__createBlockerElement",
    "html",
    "Blocker",
    "getOpacity",
    "exclude",
    "block",
    "_block",
    "zIndex",
    "blockContent",
    "bind",
    "parent",
    "blocker",
    "include",
    "__activateBlockerElement",
    "__stopTabEvent",
    "fireEvent",
    "type",
    "Event",
    "unblock",
    "removeListenerById",
    "__unblock",
    "forceUnblock",
    "removeListener",
    "getKeyIdentifier",
    "stop",
    "getKeepBlockerActive",
    "FocusHandler",
    "isFocusRoot",
    "destruct",
    "_disposeObjects"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This class blocks events and can be included into all widgets.\n *\n * The {@link #block} and {@link #unblock} methods provided by this class can be used\n * to block any event from the widget. When blocked,\n * the blocker widget overlays the widget to block, including the padding area.\n *\n * @ignore(qx.ui.root.Abstract)\n */\nqx.Class.define(\"qx.ui.core.Blocker\", {\n  extend: qx.core.Object,\n\n  events: {\n    /**\n     * Fires after {@link #block} executed.\n     */\n    blocked: \"qx.event.type.Event\",\n\n    /**\n     * Fires after {@link #unblock} executed.\n     */\n    unblocked: \"qx.event.type.Event\"\n  },\n\n  /**\n   * Creates a blocker for the passed widget.\n   *\n   * @param widget {qx.ui.core.Widget} Widget which should be added the blocker\n   */\n  construct(widget) {\n    super();\n    this._widget = widget;\n\n    widget.addListener(\"resize\", this.__onBoundsChange, this);\n    widget.addListener(\"move\", this.__onBoundsChange, this);\n    widget.addListener(\"disappear\", this.__onWidgetDisappear, this);\n\n    if (\n      qx.Class.isDefined(\"qx.ui.root.Abstract\") &&\n      widget instanceof qx.ui.root.Abstract\n    ) {\n      this._isRoot = true;\n      this.setKeepBlockerActive(true);\n    }\n\n    // dynamic theme switch\n    if (qx.core.Environment.get(\"qx.dyntheme\")) {\n      qx.theme.manager.Meta.getInstance().addListener(\n        \"changeTheme\",\n        this._onChangeTheme,\n        this\n      );\n    }\n\n    this.__activeElements = [];\n    this.__focusElements = [];\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /**\n     * Color of the blocker\n     */\n    color: {\n      check: \"Color\",\n      init: null,\n      nullable: true,\n      apply: \"_applyColor\",\n      themeable: true\n    },\n\n    /**\n     * Opacity of the blocker\n     */\n    opacity: {\n      check: \"Number\",\n      init: 1,\n      apply: \"_applyOpacity\",\n      themeable: true\n    },\n\n    /**\n     * If this property is enabled, the blocker created with {@link #block}\n     * will always stay activated. This means that the blocker then gets all keyboard\n     * events, this is useful to block keyboard input on other widgets.\n     * Take care that only one blocker instance will be kept active, otherwise your\n     * browser will freeze.\n     *\n     * Setting this property to true is ignored, if the blocker is attached to a\n     * widget with a focus handler, as this would mean that the focus handler\n     * tries to activate the widget behind the blocker.\n     *\n     * fixes:\n     *     https://github.com/qooxdoo/qooxdoo/issues/9449\n     *     https://github.com/qooxdoo/qooxdoo/issues/8104\n     */\n    keepBlockerActive: {\n      check: \"Boolean\",\n      init: false\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __blocker: null,\n    __blockerCount: 0,\n\n    __activeElements: null,\n    __focusElements: null,\n\n    __timer: null,\n\n    _widget: null,\n    _isRoot: false,\n\n    __appearListener: null,\n\n    /**\n     * Adjust html element size on layout resizes.\n     *\n     * @param e {qx.event.type.Data} event object\n     */\n    __onBoundsChange(e) {\n      var data = e.getData();\n\n      if (this.isBlocked()) {\n        this._updateBlockerBounds(data);\n      }\n    },\n\n    /**\n     * Widget re-appears: Update blocker size/position and attach to (new) parent\n     */\n    __onWidgetAppear() {\n      this._updateBlockerBounds(this._widget.getBounds());\n      if (this._widget.isRootWidget()) {\n        this._widget.getContentElement().add(this.getBlockerElement());\n      } else {\n        this._widget\n          .getLayoutParent()\n          .getContentElement()\n          .add(this.getBlockerElement());\n      }\n    },\n\n    /**\n     * Remove the blocker if the widget disappears\n     */\n    __onWidgetDisappear() {\n      if (this.isBlocked()) {\n        this.getBlockerElement().getParent().remove(this.getBlockerElement());\n        this._widget.addListenerOnce(\"appear\", this.__onWidgetAppear, this);\n      }\n    },\n\n    /**\n     * set the blocker's size and position\n     * @param bounds {Map} Map with the new width, height, left and top values\n     */\n    _updateBlockerBounds(bounds) {\n      this.getBlockerElement().setStyles({\n        width: bounds.width + \"px\",\n        height: bounds.height + \"px\",\n        left: bounds.left + \"px\",\n        top: bounds.top + \"px\"\n      });\n    },\n\n    // property apply\n    _applyColor(value, old) {\n      var color = qx.theme.manager.Color.getInstance().resolve(value);\n      this.__setBlockersStyle(\"backgroundColor\", color);\n    },\n\n    // property apply\n    _applyOpacity(value, old) {\n      this.__setBlockersStyle(\"opacity\", value);\n    },\n\n    /**\n     * Handler for the theme change.\n     * @signature function()\n     */\n    _onChangeTheme: qx.core.Environment.select(\"qx.dyntheme\", {\n      true() {\n        this._applyColor(this.getColor());\n      },\n      false: null\n    }),\n\n    /**\n     * Set the style to all blockers (blocker and content blocker).\n     *\n     * @param key {String} The name of the style attribute.\n     * @param value {String} The value.\n     */\n    __setBlockersStyle(key, value) {\n      var blockers = [];\n      this.__blocker && blockers.push(this.__blocker);\n\n      for (var i = 0; i < blockers.length; i++) {\n        blockers[i].setStyle(key, value);\n      }\n    },\n\n    /**\n     * Backup the current active and focused widget.\n     */\n    _backupActiveWidget() {\n      var focusHandler = qx.event.Registration.getManager(window).getHandler(\n        qx.event.handler.Focus\n      );\n\n      var activeWidget = qx.ui.core.Widget.getWidgetByElement(\n        focusHandler.getActive()\n      );\n\n      var focusedWidget = qx.ui.core.Widget.getWidgetByElement(\n        focusHandler.getFocus()\n      );\n\n      this.__activeElements.push(activeWidget);\n      this.__focusElements.push(focusedWidget);\n\n      if (activeWidget) {\n        activeWidget.deactivate();\n      }\n\n      if (focusedWidget && focusedWidget.isFocusable()) {\n        focusedWidget.blur();\n      }\n    },\n\n    /**\n     * Restore the current active and focused widget.\n     */\n    _restoreActiveWidget() {\n      var widget;\n\n      var focusElementsLength = this.__focusElements.length;\n      if (focusElementsLength > 0) {\n        widget = this.__focusElements.pop();\n\n        if (widget && !widget.isDisposed() && widget.isFocusable()) {\n          widget.focus();\n        }\n      }\n\n      var activeElementsLength = this.__activeElements.length;\n      if (activeElementsLength > 0) {\n        widget = this.__activeElements.pop();\n\n        if (widget && !widget.isDisposed()) {\n          widget.activate();\n        }\n      }\n    },\n\n    /**\n     * Creates the blocker element.\n     *\n     * @return {qx.html.Element} The blocker element\n     */\n    __createBlockerElement() {\n      return new qx.html.Blocker(this.getColor(), this.getOpacity());\n    },\n\n    /**\n     * Get/create the blocker element\n     *\n     * @param widget {qx.ui.core.Widget} The blocker will be added to this\n     * widget's content element\n     * @return {qx.html.Element} The blocker element\n     */\n    getBlockerElement(widget) {\n      if (!this.__blocker) {\n        this.__blocker = this.__createBlockerElement();\n        this.__blocker.setStyle(\"zIndex\", 15);\n\n        if (!widget) {\n          if (this._isRoot) {\n            widget = this._widget;\n          } else {\n            widget = this._widget.getLayoutParent();\n          }\n        }\n\n        widget.getContentElement().add(this.__blocker);\n        this.__blocker.exclude();\n      }\n      return this.__blocker;\n    },\n\n    /**\n     * Block all events from this widget by placing a transparent overlay widget,\n     * which receives all events, exactly over the widget.\n     */\n    block() {\n      this._block();\n    },\n\n    /**\n     * Adds the blocker to the appropriate element and includes it.\n     *\n     * @param zIndex {Number} All child widgets with a zIndex below this value will be blocked\n     * @param blockContent {Boolean} append the blocker to the widget's content if true\n     */\n    _block(zIndex, blockContent) {\n      if (!this._isRoot && !this._widget.getLayoutParent()) {\n        if (!this.__appearListener) {\n          this.__appearListener = this._widget.addListenerOnce(\n            \"appear\",\n            this._block.bind(this, zIndex)\n          );\n        }\n        return;\n      }\n\n      var parent;\n      if (this._isRoot || blockContent) {\n        parent = this._widget;\n      } else {\n        parent = this._widget.getLayoutParent();\n      }\n\n      var blocker = this.getBlockerElement(parent);\n      if (zIndex != null) {\n        blocker.setStyle(\"zIndex\", zIndex);\n      }\n\n      this.__blockerCount++;\n      if (this.__blockerCount < 2) {\n        this._backupActiveWidget();\n\n        var bounds = this._widget.getBounds();\n        // no bounds -> widget not yet rendered -> bounds will be set on resize\n        if (bounds) {\n          this._updateBlockerBounds(bounds);\n        }\n\n        blocker.include();\n        if (!blockContent) {\n          blocker.activate();\n        }\n\n        blocker.addListener(\"deactivate\", this.__activateBlockerElement, this);\n        blocker.addListener(\"keypress\", this.__stopTabEvent, this);\n        blocker.addListener(\"keydown\", this.__stopTabEvent, this);\n        blocker.addListener(\"keyup\", this.__stopTabEvent, this);\n\n        this.fireEvent(\"blocked\", qx.event.type.Event);\n      }\n    },\n\n    /**\n     * Returns whether the widget is blocked.\n     *\n     * @return {Boolean} Whether the widget is blocked.\n     */\n    isBlocked() {\n      return this.__blockerCount > 0;\n    },\n\n    /**\n     * Unblock the widget blocked by {@link #block}, but it takes care of\n     * the amount of {@link #block} calls. The blocker is only removed if\n     * the number of {@link #unblock} calls is identical to {@link #block} calls.\n     */\n    unblock() {\n      if (this.__appearListener) {\n        this._widget.removeListenerById(this.__appearListener);\n        this.__appearListener = null;\n      }\n\n      if (!this.isBlocked()) {\n        return;\n      }\n\n      this.__blockerCount--;\n      if (this.__blockerCount < 1) {\n        this.__unblock();\n        this.__blockerCount = 0;\n      }\n    },\n\n    /**\n     * Unblock the widget blocked by {@link #block}, but it doesn't take care of\n     * the amount of {@link #block} calls. The blocker is directly removed.\n     */\n    forceUnblock() {\n      if (this.__appearListener) {\n        this._widget.removeListenerById(this.__appearListener);\n        this.__appearListener = null;\n      }\n\n      if (!this.isBlocked()) {\n        return;\n      }\n\n      this.__blockerCount = 0;\n      this.__unblock();\n    },\n\n    /**\n     * Unblock the widget blocked by {@link #block}.\n     */\n    __unblock() {\n      this._restoreActiveWidget();\n\n      var blocker = this.getBlockerElement();\n      blocker.removeListener(\"deactivate\", this.__activateBlockerElement, this);\n      blocker.removeListener(\"keypress\", this.__stopTabEvent, this);\n      blocker.removeListener(\"keydown\", this.__stopTabEvent, this);\n      blocker.removeListener(\"keyup\", this.__stopTabEvent, this);\n      blocker.exclude();\n\n      this.fireEvent(\"unblocked\", qx.event.type.Event);\n    },\n\n    /**\n     * Block direct child widgets with a zIndex below <code>zIndex</code>\n     *\n     * @param zIndex {Integer} All child widgets with a zIndex below this value\n     *     will be blocked\n     */\n    blockContent(zIndex) {\n      this._block(zIndex, true);\n    },\n\n    /**\n     * Stops the passed \"Tab\" event.\n     *\n     * @param e {qx.event.type.KeySequence} event to stop.\n     */\n    __stopTabEvent(e) {\n      if (e.getKeyIdentifier() == \"Tab\") {\n        e.stop();\n      }\n    },\n\n    /**\n     * Sets the blocker element to active.\n     */\n    __activateBlockerElement() {\n      //\n      // If this._widget is attached to the focus handler as a focus root,\n      // activating the blocker after this widget was deactivated,\n      // leads to the focus handler re-activate the widget behind\n      // the blocker, loosing tab handling for this._widget which is\n      // visually in front. Hence we prevent activating the\n      // blocker in this situation.\n      //\n      // fixes:\n      //  https://github.com/qooxdoo/qooxdoo/issues/9449\n      //  https://github.com/qooxdoo/qooxdoo/issues/8104\n      //\n      if (\n        this.getKeepBlockerActive() &&\n        !qx.ui.core.FocusHandler.getInstance().isFocusRoot(this._widget)\n      ) {\n        this.getBlockerElement().activate();\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    // remove dynamic theme listener\n    if (qx.core.Environment.get(\"qx.dyntheme\")) {\n      qx.theme.manager.Meta.getInstance().removeListener(\n        \"changeTheme\",\n        this._onChangeTheme,\n        this\n      );\n    }\n\n    this._widget.removeListener(\"resize\", this.__onBoundsChange, this);\n    this._widget.removeListener(\"move\", this.__onBoundsChange, this);\n    this._widget.removeListener(\"appear\", this.__onWidgetAppear, this);\n    this._widget.removeListener(\"disappear\", this.__onWidgetDisappear, this);\n\n    if (this.__appearListener) {\n      this._widget.removeListenerById(this.__appearListener);\n    }\n\n    this._disposeObjects(\"__blocker\", \"__timer\");\n    this.__activeElements = this.__focusElements = this._widget = null;\n  }\n});\n"
  ]
}