{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/core/FocusHandler.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "type",
    "construct",
    "__roots",
    "properties",
    "useTabNavigation",
    "check",
    "init",
    "members",
    "__activeChild",
    "__focusedChild",
    "__currentRoot",
    "connectTo",
    "root",
    "addListener",
    "__onKeyPress",
    "_onFocusIn",
    "_onFocusOut",
    "_onActivate",
    "_onDeactivate",
    "addRoot",
    "widget",
    "toHashCode",
    "removeRoot",
    "getActiveWidget",
    "isActive",
    "getFocusedWidget",
    "isFocused",
    "isFocusRoot",
    "e",
    "target",
    "getTarget",
    "__findFocusRoot",
    "visualizeFocus",
    "visualizeBlur",
    "getKeyIdentifier",
    "isUseTabNavigation",
    "stopPropagation",
    "preventDefault",
    "current",
    "isShiftPressed",
    "next",
    "__getWidgetAfter",
    "__getFirstWidget",
    "__getWidgetBefore",
    "__getLastWidget",
    "tabFocus",
    "roots",
    "getLayoutParent",
    "__compareTabOrder",
    "widget1",
    "widget2",
    "tab1",
    "getTabIndex",
    "tab2",
    "el1",
    "getContentElement",
    "getDomElement",
    "el2",
    "Location",
    "bom",
    "element",
    "loc1",
    "get",
    "loc2",
    "top",
    "left",
    "z1",
    "getZIndex",
    "z2",
    "__getFirst",
    "__getLast",
    "getAnonymous",
    "result",
    "__collectAllAfter",
    "sort",
    "len",
    "length",
    "__collectAllBefore",
    "parent",
    "children",
    "getLayoutChildren",
    "child",
    "i",
    "l",
    "ui",
    "Widget",
    "isEnabled",
    "isVisible",
    "isTabable",
    "push",
    "firstWidget",
    "lastWidget",
    "destruct",
    "_disposeMap",
    "FocusHandler"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n\n************************************************************************ */\n\n/**\n * Each focus root delegates the focus handling to instances of the FocusHandler.\n */\nqx.Class.define(\"qx.ui.core.FocusHandler\", {\n  extend: qx.core.Object,\n  type: \"singleton\",\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    // Create data structure\n    this.__roots = {};\n  },\n\n  /*\n  ***********************************************\n    PROPERTIES\n  ***********************************************\n  */\n  properties: {\n    /**\n     * Activate changing focus with the tab key (default: true)\n     */\n    useTabNavigation: {\n      check: \"Boolean\",\n      init: true\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __roots: null,\n    __activeChild: null,\n    __focusedChild: null,\n    __currentRoot: null,\n\n    /**\n     * Connects to a top-level root element (which initially receives\n     * all events of the root). This are normally all page and application\n     * roots, but no inline roots (they are typically sitting inside\n     * another root).\n     *\n     * @param root {qx.ui.root.Abstract} Any root\n     */\n    connectTo(root) {\n      // this.debug(\"Connect to: \" + root);\n      root.addListener(\"keypress\", this.__onKeyPress, this);\n      root.addListener(\"focusin\", this._onFocusIn, this, true);\n      root.addListener(\"focusout\", this._onFocusOut, this, true);\n      root.addListener(\"activate\", this._onActivate, this, true);\n      root.addListener(\"deactivate\", this._onDeactivate, this, true);\n    },\n\n    /**\n     * Registers a widget as a focus root. A focus root comes\n     * with an separate tab sequence handling.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to register\n     */\n    addRoot(widget) {\n      // this.debug(\"Add focusRoot: \" + widget);\n      this.__roots[widget.toHashCode()] = widget;\n    },\n\n    /**\n     * Deregisters a previous added widget.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to deregister\n     */\n    removeRoot(widget) {\n      // this.debug(\"Remove focusRoot: \" + widget);\n      delete this.__roots[widget.toHashCode()];\n    },\n\n    /**\n     * Get the active widget\n     *\n     * @return {qx.ui.core.Widget|null} The active widget or <code>null</code>\n     *    if no widget is active\n     */\n    getActiveWidget() {\n      return this.__activeChild;\n    },\n\n    /**\n     * Whether the given widget is the active one\n     *\n     * @param widget {qx.ui.core.Widget} The widget to check\n     * @return {Boolean} <code>true</code> if the given widget is active\n     */\n    isActive(widget) {\n      return this.__activeChild == widget;\n    },\n\n    /**\n     * Get the focused widget\n     *\n     * @return {qx.ui.core.Widget|null} The focused widget or <code>null</code>\n     *    if no widget has the focus\n     */\n    getFocusedWidget() {\n      return this.__focusedChild;\n    },\n\n    /**\n     * Whether the given widget is the focused one.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to check\n     * @return {Boolean} <code>true</code> if the given widget is focused\n     */\n    isFocused(widget) {\n      return this.__focusedChild == widget;\n    },\n\n    /**\n     * Whether the given widgets acts as a focus root.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to check\n     * @return {Boolean} <code>true</code> if the given widget is a focus root\n     */\n    isFocusRoot(widget) {\n      return !!this.__roots[widget.toHashCode()];\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Internal event handler for activate event.\n     *\n     * @param e {qx.event.type.Focus} Focus event\n     */\n    _onActivate(e) {\n      var target = e.getTarget();\n      this.__activeChild = target;\n      //this.debug(\"active: \" + target);\n\n      var root = this.__findFocusRoot(target);\n      if (root != this.__currentRoot) {\n        this.__currentRoot = root;\n      }\n    },\n\n    /**\n     * Internal event handler for deactivate event.\n     *\n     * @param e {qx.event.type.Focus} Focus event\n     */\n    _onDeactivate(e) {\n      var target = e.getTarget();\n      if (this.__activeChild == target) {\n        this.__activeChild = null;\n      }\n    },\n\n    /**\n     * Internal event handler for focusin event.\n     *\n     * @param e {qx.event.type.Focus} Focus event\n     */\n    _onFocusIn(e) {\n      var target = e.getTarget();\n      if (target != this.__focusedChild) {\n        this.__focusedChild = target;\n        target.visualizeFocus();\n      }\n    },\n\n    /**\n     * Internal event handler for focusout event.\n     *\n     * @param e {qx.event.type.Focus} Focus event\n     */\n    _onFocusOut(e) {\n      var target = e.getTarget();\n      if (target == this.__focusedChild) {\n        this.__focusedChild = null;\n        target.visualizeBlur();\n      }\n    },\n\n    /**\n     * Internal event handler for TAB key.\n     *\n     * @param e {qx.event.type.KeySequence} Key event\n     */\n    __onKeyPress(e) {\n      if (e.getKeyIdentifier() != \"Tab\" || !this.isUseTabNavigation()) {\n        return;\n      }\n\n      if (!this.__currentRoot) {\n        return;\n      }\n\n      // Stop all key-events with a TAB keycode\n      e.stopPropagation();\n      e.preventDefault();\n\n      // Support shift key to reverse widget detection order\n      var current = this.__focusedChild;\n      if (!e.isShiftPressed()) {\n        var next = current\n          ? this.__getWidgetAfter(current)\n          : this.__getFirstWidget();\n      } else {\n        var next = current\n          ? this.__getWidgetBefore(current)\n          : this.__getLastWidget();\n      }\n\n      // If there was a widget found, focus it\n      if (next) {\n        next.tabFocus();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      UTILS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Finds the next focus root, starting with the given widget.\n     *\n     * @param widget {qx.ui.core.Widget} The widget to find a focus root for.\n     * @return {qx.ui.core.Widget|null} The focus root for the given widget or\n     * <code>true</code> if no focus root could be found\n     */\n    __findFocusRoot(widget) {\n      var roots = this.__roots;\n      while (widget) {\n        if (roots[widget.toHashCode()]) {\n          return widget;\n        }\n\n        widget = widget.getLayoutParent();\n      }\n\n      return null;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      TAB SUPPORT IMPLEMENTATION\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Compares the order of two widgets\n     *\n     * @param widget1 {qx.ui.core.Widget} Widget A\n     * @param widget2 {qx.ui.core.Widget} Widget B\n     * @return {Integer} A sort() compatible integer with values\n     *   small than 0, exactly 0 or bigger than 0.\n     */\n    __compareTabOrder(widget1, widget2) {\n      if (widget1 === widget2) {\n        return 0;\n      }\n\n      // Sort-Check #1: Tab-Index\n      var tab1 = widget1.getTabIndex() || 0;\n      var tab2 = widget2.getTabIndex() || 0;\n\n      if (tab1 != tab2) {\n        return tab1 - tab2;\n      }\n\n      // Computing location\n      var el1 = widget1.getContentElement().getDomElement();\n      var el2 = widget2.getContentElement().getDomElement();\n\n      var Location = qx.bom.element.Location;\n\n      var loc1 = Location.get(el1);\n      var loc2 = Location.get(el2);\n\n      // Sort-Check #2: Top-Position\n      if (loc1.top != loc2.top) {\n        return loc1.top - loc2.top;\n      }\n\n      // Sort-Check #3: Left-Position\n      if (loc1.left != loc2.left) {\n        return loc1.left - loc2.left;\n      }\n\n      // Sort-Check #4: zIndex\n      var z1 = widget1.getZIndex();\n      var z2 = widget2.getZIndex();\n\n      if (z1 != z2) {\n        return z1 - z2;\n      }\n\n      return 0;\n    },\n\n    /**\n     * Returns the first widget.\n     *\n     * @return {qx.ui.core.Widget} Returns the first (positioned) widget from\n     *    the current root.\n     */\n    __getFirstWidget() {\n      return this.__getFirst(this.__currentRoot, null);\n    },\n\n    /**\n     * Returns the last widget.\n     *\n     * @return {qx.ui.core.Widget} Returns the last (positioned) widget from\n     *    the current root.\n     */\n    __getLastWidget() {\n      return this.__getLast(this.__currentRoot, null);\n    },\n\n    /**\n     * Returns the widget after the given one.\n     *\n     * @param widget {qx.ui.core.Widget} Widget to start with\n     * @return {qx.ui.core.Widget} The found widget.\n     */\n    __getWidgetAfter(widget) {\n      var root = this.__currentRoot;\n      if (root == widget) {\n        return this.__getFirstWidget();\n      }\n\n      while (widget && widget.getAnonymous()) {\n        widget = widget.getLayoutParent();\n      }\n\n      if (widget == null) {\n        return [];\n      }\n\n      var result = [];\n      this.__collectAllAfter(root, widget, result);\n      result.sort(this.__compareTabOrder);\n\n      var len = result.length;\n      return len > 0 ? result[0] : this.__getFirstWidget();\n    },\n\n    /**\n     * Returns the widget before the given one.\n     *\n     * @param widget {qx.ui.core.Widget} Widget to start with\n     * @return {qx.ui.core.Widget} The found widget.\n     */\n    __getWidgetBefore(widget) {\n      var root = this.__currentRoot;\n      if (root == widget) {\n        return this.__getLastWidget();\n      }\n\n      while (widget && widget.getAnonymous()) {\n        widget = widget.getLayoutParent();\n      }\n\n      if (widget == null) {\n        return [];\n      }\n\n      var result = [];\n      this.__collectAllBefore(root, widget, result);\n      result.sort(this.__compareTabOrder);\n\n      var len = result.length;\n      return len > 0 ? result[len - 1] : this.__getLastWidget();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      INTERNAL API USED BY METHODS ABOVE\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Collects all widgets which are after the given widget in\n     * the given parent widget. Append all found children to the\n     * <code>list</code>.\n     *\n     * @param parent {qx.ui.core.Widget} Parent widget\n     * @param widget {qx.ui.core.Widget} Child widget to start with\n     * @param result {Array} Result list\n     */\n    __collectAllAfter(parent, widget, result) {\n      var children = parent.getLayoutChildren();\n      var child;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        child = children[i];\n\n        // Filter spacers etc.\n        if (!(child instanceof qx.ui.core.Widget)) {\n          continue;\n        }\n\n        if (\n          !this.isFocusRoot(child) &&\n          child.isEnabled() &&\n          child.isVisible()\n        ) {\n          if (child.isTabable() && this.__compareTabOrder(widget, child) < 0) {\n            result.push(child);\n          }\n\n          this.__collectAllAfter(child, widget, result);\n        }\n      }\n    },\n\n    /**\n     * Collects all widgets which are before the given widget in\n     * the given parent widget. Append all found children to the\n     * <code>list</code>.\n     *\n     * @param parent {qx.ui.core.Widget} Parent widget\n     * @param widget {qx.ui.core.Widget} Child widget to start with\n     * @param result {Array} Result list\n     */\n    __collectAllBefore(parent, widget, result) {\n      var children = parent.getLayoutChildren();\n      var child;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        child = children[i];\n\n        // Filter spacers etc.\n        if (!(child instanceof qx.ui.core.Widget)) {\n          continue;\n        }\n\n        if (\n          !this.isFocusRoot(child) &&\n          child.isEnabled() &&\n          child.isVisible()\n        ) {\n          if (child.isTabable() && this.__compareTabOrder(widget, child) > 0) {\n            result.push(child);\n          }\n\n          this.__collectAllBefore(child, widget, result);\n        }\n      }\n    },\n\n    /**\n     * Find first (positioned) widget. (Sorted by coordinates, zIndex, etc.)\n     *\n     * @param parent {qx.ui.core.Widget} Parent widget\n     * @param firstWidget {qx.ui.core.Widget?null} Current first widget\n     * @return {qx.ui.core.Widget} The first (positioned) widget\n     */\n    __getFirst(parent, firstWidget) {\n      var children = parent.getLayoutChildren();\n      var child;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        child = children[i];\n\n        // Filter spacers etc.\n        if (!(child instanceof qx.ui.core.Widget)) {\n          continue;\n        }\n\n        // Ignore focus roots completely\n        if (\n          !this.isFocusRoot(child) &&\n          child.isEnabled() &&\n          child.isVisible()\n        ) {\n          if (child.isTabable()) {\n            if (\n              firstWidget == null ||\n              this.__compareTabOrder(child, firstWidget) < 0\n            ) {\n              firstWidget = child;\n            }\n          }\n\n          // Deep iteration into children hierarchy\n          firstWidget = this.__getFirst(child, firstWidget);\n        }\n      }\n\n      return firstWidget;\n    },\n\n    /**\n     * Find last (positioned) widget. (Sorted by coordinates, zIndex, etc.)\n     *\n     * @param parent {qx.ui.core.Widget} Parent widget\n     * @param lastWidget {qx.ui.core.Widget?null} Current last widget\n     * @return {qx.ui.core.Widget} The last (positioned) widget\n     */\n    __getLast(parent, lastWidget) {\n      var children = parent.getLayoutChildren();\n      var child;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        child = children[i];\n\n        // Filter spacers etc.\n        if (!(child instanceof qx.ui.core.Widget)) {\n          continue;\n        }\n\n        // Ignore focus roots completely\n        if (\n          !this.isFocusRoot(child) &&\n          child.isEnabled() &&\n          child.isVisible()\n        ) {\n          if (child.isTabable()) {\n            if (\n              lastWidget == null ||\n              this.__compareTabOrder(child, lastWidget) > 0\n            ) {\n              lastWidget = child;\n            }\n          }\n\n          // Deep iteration into children hierarchy\n          lastWidget = this.__getLast(child, lastWidget);\n        }\n      }\n\n      return lastWidget;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this._disposeMap(\"__roots\");\n    this.__focusedChild = this.__activeChild = this.__currentRoot = null;\n  }\n});\n"
  ]
}