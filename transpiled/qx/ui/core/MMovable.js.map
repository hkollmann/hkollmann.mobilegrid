{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/core/MMovable.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "movable",
    "check",
    "init",
    "useMoveFrame",
    "members",
    "__moveHandle",
    "__moveFrame",
    "__dragRange",
    "__dragLeft",
    "__dragTop",
    "__parentLeft",
    "__parentTop",
    "__blockerAdded",
    "__oldBlockerColor",
    "__oldBlockerOpacity",
    "_activateMoveHandle",
    "widget",
    "Error",
    "addListener",
    "_onMovePointerDown",
    "_onMovePointerUp",
    "_onMovePointerMove",
    "__onMoveLoseCapture",
    "__getMoveFrame",
    "frame",
    "ui",
    "core",
    "Widget",
    "setAppearance",
    "exclude",
    "Init",
    "getApplication",
    "getRoot",
    "add",
    "__showMoveFrame",
    "location",
    "getContentLocation",
    "bounds",
    "getBounds",
    "setUserBounds",
    "left",
    "top",
    "width",
    "height",
    "show",
    "setZIndex",
    "getZIndex",
    "__computeMoveCoordinates",
    "e",
    "range",
    "pointerLeft",
    "Math",
    "max",
    "min",
    "right",
    "getDocumentLeft",
    "pointerTop",
    "bottom",
    "getDocumentTop",
    "viewportLeft",
    "viewportTop",
    "parseInt",
    "parentLeft",
    "parentTop",
    "_onMoveRoll",
    "stop",
    "getMovable",
    "hasState",
    "parent",
    "getLayoutParent",
    "parentLocation",
    "parentBounds",
    "Class",
    "implementsInterface",
    "window",
    "IDesktop",
    "isBlocked",
    "getBlockerColor",
    "getBlockerOpacity",
    "setBlockerColor",
    "setBlockerOpacity",
    "blockContent",
    "widgetLocation",
    "addState",
    "capture",
    "getUseMoveFrame",
    "coords",
    "setDomPosition",
    "insets",
    "getInsets",
    "stopPropagation",
    "hasListener",
    "removeListener",
    "removeState",
    "unblock",
    "releaseCapture",
    "setLayoutProperties",
    "destruct",
    "_disposeObjects",
    "MMovable"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Provides move behavior to any widget.\n *\n * The widget using the mixin must register a widget as move handle so that\n * the pointer events needed for moving it are attached to this widget).\n * <pre class='javascript'>this._activateMoveHandle(widget);</pre>\n */\nqx.Mixin.define(\"qx.ui.core.MMovable\", {\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** Whether the widget is movable */\n    movable: {\n      check: \"Boolean\",\n      init: true\n    },\n\n    /** Whether to use a frame instead of the original widget during move sequences */\n    useMoveFrame: {\n      check: \"Boolean\",\n      init: false\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __moveHandle: null,\n    __moveFrame: null,\n    __dragRange: null,\n    __dragLeft: null,\n    __dragTop: null,\n    __parentLeft: null,\n    __parentTop: null,\n\n    __blockerAdded: false,\n    __oldBlockerColor: null,\n    __oldBlockerOpacity: 0,\n\n    /*\n    ---------------------------------------------------------------------------\n      CORE FEATURES\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Configures the given widget as a move handle\n     *\n     * @param widget {qx.ui.core.Widget} Widget to activate as move handle\n     */\n    _activateMoveHandle(widget) {\n      if (this.__moveHandle) {\n        throw new Error(\"The move handle could not be redefined!\");\n      }\n\n      this.__moveHandle = widget;\n      widget.addListener(\"pointerdown\", this._onMovePointerDown, this);\n      widget.addListener(\"pointerup\", this._onMovePointerUp, this);\n      widget.addListener(\"pointermove\", this._onMovePointerMove, this);\n      widget.addListener(\"losecapture\", this.__onMoveLoseCapture, this);\n    },\n\n    /**\n     * Get the widget, which draws the resize/move frame.\n     *\n     * @return {qx.ui.core.Widget} The resize frame\n     */\n    __getMoveFrame() {\n      var frame = this.__moveFrame;\n      if (!frame) {\n        frame = this.__moveFrame = new qx.ui.core.Widget();\n        frame.setAppearance(\"move-frame\");\n        frame.exclude();\n\n        qx.core.Init.getApplication().getRoot().add(frame);\n      }\n\n      return frame;\n    },\n\n    /**\n     * Creates, shows and syncs the frame with the widget.\n     */\n    __showMoveFrame() {\n      var location = this.getContentLocation();\n      var bounds = this.getBounds();\n      var frame = this.__getMoveFrame();\n      frame.setUserBounds(\n        location.left,\n        location.top,\n        bounds.width,\n        bounds.height\n      );\n\n      frame.show();\n      frame.setZIndex(this.getZIndex() + 1);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      MOVE SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Computes the new drag coordinates\n     *\n     * @param e {qx.event.type.Pointer} Pointer event\n     * @return {Map} A map with the computed drag coordinates\n     */\n    __computeMoveCoordinates(e) {\n      var range = this.__dragRange;\n      var pointerLeft = Math.max(\n        range.left,\n        Math.min(range.right, e.getDocumentLeft())\n      );\n\n      var pointerTop = Math.max(\n        range.top,\n        Math.min(range.bottom, e.getDocumentTop())\n      );\n\n      var viewportLeft = this.__dragLeft + pointerLeft;\n      var viewportTop = this.__dragTop + pointerTop;\n\n      return {\n        viewportLeft: parseInt(viewportLeft, 10),\n        viewportTop: parseInt(viewportTop, 10),\n\n        parentLeft: parseInt(viewportLeft - this.__parentLeft, 10),\n        parentTop: parseInt(viewportTop - this.__parentTop, 10)\n      };\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      MOVE EVENT HANDLERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Roll handler which prevents the scrolling via tap & move on parent widgets\n     * during the move of the widget.\n     * @param e {qx.event.type.Roll} The roll event\n     */\n    _onMoveRoll(e) {\n      e.stop();\n    },\n\n    /**\n     * Enables the capturing of the caption bar and prepares the drag session and the\n     * appearance (translucent, frame or opaque) for the moving of the window.\n     *\n     * @param e {qx.event.type.Pointer} pointer down event\n     */\n    _onMovePointerDown(e) {\n      if (!this.getMovable() || this.hasState(\"maximized\")) {\n        return;\n      }\n\n      this.addListener(\"roll\", this._onMoveRoll, this);\n\n      // Compute drag range\n      var parent = this.getLayoutParent();\n      var parentLocation = parent.getContentLocation();\n      var parentBounds = parent.getBounds();\n\n      // Added a blocker, this solves the issue described in [BUG #1462]\n      if (qx.Class.implementsInterface(parent, qx.ui.window.IDesktop)) {\n        if (!parent.isBlocked()) {\n          this.__oldBlockerColor = parent.getBlockerColor();\n          this.__oldBlockerOpacity = parent.getBlockerOpacity();\n          parent.setBlockerColor(null);\n          parent.setBlockerOpacity(1);\n\n          parent.blockContent(this.getZIndex() - 1);\n\n          this.__blockerAdded = true;\n        }\n      }\n\n      this.__dragRange = {\n        left: parentLocation.left,\n        top: parentLocation.top,\n        right: parentLocation.left + parentBounds.width,\n        bottom: parentLocation.top + parentBounds.height\n      };\n\n      // Compute drag positions\n      var widgetLocation = this.getContentLocation();\n      this.__parentLeft = parentLocation.left;\n      this.__parentTop = parentLocation.top;\n\n      this.__dragLeft = widgetLocation.left - e.getDocumentLeft();\n      this.__dragTop = widgetLocation.top - e.getDocumentTop();\n\n      // Add state\n      this.addState(\"move\");\n\n      // Enable capturing\n      this.__moveHandle.capture();\n\n      // Enable drag frame\n      if (this.getUseMoveFrame()) {\n        this.__showMoveFrame();\n      }\n\n      // Stop event\n      e.stop();\n    },\n\n    /**\n     * Does the moving of the window by rendering the position\n     * of the window (or frame) at runtime using direct dom methods.\n     *\n     * @param e {qx.event.type.Pointer} pointer move event\n     */\n    _onMovePointerMove(e) {\n      // Only react when dragging is active\n      if (!this.hasState(\"move\")) {\n        return;\n      }\n\n      // Apply new coordinates using DOM\n      var coords = this.__computeMoveCoordinates(e);\n      if (this.getUseMoveFrame()) {\n        this.__getMoveFrame().setDomPosition(\n          coords.viewportLeft,\n          coords.viewportTop\n        );\n      } else {\n        var insets = this.getLayoutParent().getInsets();\n        this.setDomPosition(\n          coords.parentLeft - (insets.left || 0),\n          coords.parentTop - (insets.top || 0)\n        );\n      }\n\n      e.stopPropagation();\n    },\n\n    /**\n     * Disables the capturing of the caption bar and moves the window\n     * to the last position of the drag session. Also restores the appearance\n     * of the window.\n     *\n     * @param e {qx.event.type.Pointer} pointer up event\n     */\n    _onMovePointerUp(e) {\n      if (this.hasListener(\"roll\")) {\n        this.removeListener(\"roll\", this._onMoveRoll, this);\n      }\n\n      // Only react when dragging is active\n      if (!this.hasState(\"move\")) {\n        return;\n      }\n\n      // Remove drag state\n      this.removeState(\"move\");\n\n      // Removed blocker, this solves the issue described in [BUG #1462]\n      var parent = this.getLayoutParent();\n      if (qx.Class.implementsInterface(parent, qx.ui.window.IDesktop)) {\n        if (this.__blockerAdded) {\n          parent.unblock();\n\n          parent.setBlockerColor(this.__oldBlockerColor);\n          parent.setBlockerOpacity(this.__oldBlockerOpacity);\n          this.__oldBlockerColor = null;\n          this.__oldBlockerOpacity = 0;\n\n          this.__blockerAdded = false;\n        }\n      }\n\n      // Disable capturing\n      this.__moveHandle.releaseCapture();\n\n      // Apply them to the layout\n      var coords = this.__computeMoveCoordinates(e);\n      var insets = this.getLayoutParent().getInsets();\n      this.setLayoutProperties({\n        left: coords.parentLeft - (insets.left || 0),\n        top: coords.parentTop - (insets.top || 0)\n      });\n\n      // Hide frame afterwards\n      if (this.getUseMoveFrame()) {\n        this.__getMoveFrame().exclude();\n      }\n\n      e.stopPropagation();\n    },\n\n    /**\n     * Event listener for <code>losecapture</code> event.\n     *\n     * @param e {qx.event.type.Event} Lose capture event\n     */\n    __onMoveLoseCapture(e) {\n      // Check for active move\n      if (!this.hasState(\"move\")) {\n        return;\n      }\n\n      // Remove drag state\n      this.removeState(\"move\");\n\n      // Hide frame afterwards\n      if (this.getUseMoveFrame()) {\n        this.__getMoveFrame().exclude();\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    this._disposeObjects(\"__moveFrame\", \"__moveHandle\");\n    this.__dragRange = null;\n  }\n});\n"
  ]
}