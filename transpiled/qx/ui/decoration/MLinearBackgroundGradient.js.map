{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/decoration/MLinearBackgroundGradient.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "startColor",
    "nullable",
    "apply",
    "endColor",
    "orientation",
    "init",
    "startColorPosition",
    "endColorPosition",
    "colorPositionUnit",
    "gradientStart",
    "group",
    "mode",
    "gradientEnd",
    "members",
    "_styleLinearBackgroundGradient",
    "styles",
    "backgroundStyle",
    "getStartColor",
    "getEndColor",
    "styleImpl",
    "__styleLinearBackgroundGradientAccordingToSpec",
    "core",
    "Environment",
    "get",
    "__styleLinearBackgroundGradientForLegacyWebkit",
    "__styleLinearBackgroundGradientWithCanvas",
    "__styleLinearBackgroundGradientWithMSFilter",
    "gradientProperties",
    "startColors",
    "endColors",
    "units",
    "orientations",
    "startColorPositions",
    "endColorPositions",
    "i",
    "length",
    "__getColor",
    "unit",
    "lang",
    "Type",
    "isArray",
    "orderGradientsFront",
    "getOrderGradientsFront",
    "operation",
    "Array",
    "prototype",
    "unshift",
    "push",
    "_getExtendedPropertyValueArrays",
    "startPos",
    "endPos",
    "color",
    "me",
    "ui",
    "decoration",
    "MLinearBackgroundGradient",
    "__canvas",
    "document",
    "createElement",
    "isVertical",
    "height",
    "width",
    "range",
    "Math",
    "max",
    "ctx",
    "getContext",
    "lingrad",
    "createLinearGradient",
    "addColorStop",
    "comp",
    "clearRect",
    "fillStyle",
    "fillRect",
    "size",
    "toDataURL",
    "type",
    "util",
    "ColorUtil",
    "isHex6String",
    "stringToRgb",
    "rgbToHexString",
    "substring",
    "value",
    "deg",
    "start",
    "end",
    "prefixedName",
    "theme",
    "manager",
    "Color",
    "getInstance",
    "resolve",
    "_applyLinearBackgroundGradient"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2010 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n/**\n * Mixin for the linear background gradient CSS property.\n * This mixin is usually used by {@link qx.ui.decoration.Decorator}.\n *\n * Keep in mind that this is not supported by all browsers:\n *\n * * Safari 4.0+\n * * Chrome 4.0+\n * * Firefox 3.6+\n * * Opera 11.1+\n * * IE 10+\n * * IE 5.5+ (with limitations)\n *\n * For IE 5.5 to IE 8,this class uses the filter rules to create the gradient. This\n * has some limitations: The start and end position property can not be used. For\n * more details, see the original documentation:\n * http://msdn.microsoft.com/en-us/library/ms532997(v=vs.85).aspx\n *\n * For IE9, we create a gradient in a canvas element and render this gradient\n * as background image. Due to restrictions in the <code>background-image</code>\n * css property, we can not allow negative start values in that case.\n *\n * It is possible to define multiple background gradients by setting an\n * array containing the needed values as the property value.\n * In case multiple values are specified, the values of the properties\n * are repeated until all match in length. It is not possible to define\n * multiple background gradients when falling back to filter rules (IE5.5 to IE8).\n *\n * An example:\n * <pre class=\"javascript\">\n *   'my-decorator': {\n *     style: {\n *       startColor:['rgba(255, 0, 0, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(0, 0, 255, 0.5)'],\n *       endColor: 'rgba(255, 255, 255, 0.2)',\n *       orientation: ['horizontal', 'vertical']\n *     }\n *   }\n * </pre>\n * which is the same as:\n * <pre class=\"javascript\">\n *   'my-decorator': {\n *     style: {\n *       startColor: ['rgba(255, 0, 0, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(0, 0, 255, 0.5)'],\n *       endColor: ['rgba(255, 255, 255, 0.2)', 'rgba(255, 255, 255, 0.2)', 'rgba(255, 255, 255, 0.2)'],\n *       orientation: ['horizontal', 'vertical', 'horizontal']\n *     }\n *   }\n * </pre>\n */\nqx.Mixin.define(\"qx.ui.decoration.MLinearBackgroundGradient\", {\n  properties: {\n    /**\n     * Start color of the background gradient.\n     * Note that alpha transparency (rgba) is not supported in IE 8.\n     */\n    startColor: {\n      nullable: true,\n      apply: \"_applyLinearBackgroundGradient\"\n    },\n\n    /**\n     * End color of the background gradient.\n     * Note that alpha transparency (rgba) is not supported in IE 8.\n     */\n    endColor: {\n      nullable: true,\n      apply: \"_applyLinearBackgroundGradient\"\n    },\n\n    /** The orientation of the gradient. */\n    orientation: {\n      init: \"vertical\",\n      apply: \"_applyLinearBackgroundGradient\"\n    },\n\n    /** Position in percent where to start the color. */\n    startColorPosition: {\n      init: 0,\n      apply: \"_applyLinearBackgroundGradient\"\n    },\n\n    /** Position in percent where to start the color. */\n    endColorPosition: {\n      init: 100,\n      apply: \"_applyLinearBackgroundGradient\"\n    },\n\n    /** Defines if the given positions are in % or px.*/\n    colorPositionUnit: {\n      init: \"%\",\n      apply: \"_applyLinearBackgroundGradient\"\n    },\n\n    /** Property group to set the start color including its start position. */\n    gradientStart: {\n      group: [\"startColor\", \"startColorPosition\"],\n      mode: \"shorthand\"\n    },\n\n    /** Property group to set the end color including its end position. */\n    gradientEnd: {\n      group: [\"endColor\", \"endColorPosition\"],\n      mode: \"shorthand\"\n    }\n  },\n\n  members: {\n    /**\n     * Takes a styles map and adds the linear background styles in place to the\n     * given map. This is the needed behavior for\n     * {@link qx.ui.decoration.Decorator}.\n     *\n     * @param styles {Map} A map to add the styles.\n     */\n    _styleLinearBackgroundGradient(styles) {\n      var backgroundStyle = [];\n\n      if (!this.getStartColor() || !this.getEndColor()) {\n        return;\n      }\n\n      var styleImpl = this.__styleLinearBackgroundGradientAccordingToSpec;\n      if (qx.core.Environment.get(\"css.gradient.legacywebkit\")) {\n        styleImpl = this.__styleLinearBackgroundGradientForLegacyWebkit;\n      } else if (\n        !qx.core.Environment.get(\"css.gradient.linear\") &&\n        qx.core.Environment.get(\"css.borderradius\")\n      ) {\n        styleImpl = this.__styleLinearBackgroundGradientWithCanvas;\n      } else if (!qx.core.Environment.get(\"css.gradient.linear\")) {\n        styleImpl = this.__styleLinearBackgroundGradientWithMSFilter;\n      }\n\n      var gradientProperties = [\n        \"startColor\",\n        \"endColor\",\n        \"colorPositionUnit\",\n        \"orientation\",\n        \"startColorPosition\",\n        \"endColorPosition\"\n      ];\n\n      (function (\n        startColors,\n        endColors,\n        units,\n        orientations,\n        startColorPositions,\n        endColorPositions\n      ) {\n        for (var i = 0; i < startColors.length; i++) {\n          var startColor = this.__getColor(startColors[i]);\n          var endColor = this.__getColor(endColors[i]);\n          var unit = units[i];\n          var orientation = orientations[i];\n          var startColorPosition = startColorPositions[i];\n          var endColorPosition = endColorPositions[i];\n\n          if (\n            !styleImpl(\n              startColor,\n              endColor,\n              unit,\n              orientation,\n              startColorPosition,\n              endColorPosition,\n              styles,\n              backgroundStyle\n            )\n          ) {\n            break;\n          }\n        }\n\n        if (\"background\" in styles) {\n          if (!qx.lang.Type.isArray(styles[\"background\"])) {\n            styles[\"background\"] = [styles[\"background\"]];\n          }\n        } else {\n          styles[\"background\"] = [];\n        }\n        var orderGradientsFront =\n          \"getOrderGradientsFront\" in this\n            ? this.getOrderGradientsFront()\n            : false;\n        var operation = orderGradientsFront\n          ? Array.prototype.unshift\n          : Array.prototype.push;\n        operation.apply(styles[\"background\"], backgroundStyle);\n      }.apply(this, this._getExtendedPropertyValueArrays(gradientProperties)));\n    },\n\n    /**\n     * Compute CSS rules to style the background with gradients.\n     * This can be called multiple times and SHOULD layer the gradients on top of each other and on top of existing backgrounds.\n     * Legacy implementation for old WebKit browsers (Chrome < 10).\n     *\n     * @param startColor {Color} The color to start the gradient with\n     * @param endColor {Color} The color to end the gradient with\n     * @param unit {Color} The unit in which startColorPosition and endColorPosition are measured\n     * @param orientation {String} Either 'horizontal' or 'vertical'\n     * @param startColorPosition {Number} The position of the gradient’s starting point, measured in `unit` units along the `orientation` axis from top or left\n     * @param endColorPosition {Number} The position of the gradient’s ending point, measured in `unit` units along the `orientation` axis from top or left\n     * @param styles {Map} The complete styles currently poised to be applied by decorators. Should not be written to in this method (use `backgroundStyle` for that)\n     * @param backgroundStyle {Map} This method should push new background styles onto this array.\n     *\n     * @return {Boolean} Whether this implementation supports multiple gradients atop each other (true).\n     */\n    __styleLinearBackgroundGradientForLegacyWebkit(\n      startColor,\n      endColor,\n      unit,\n      orientation,\n      startColorPosition,\n      endColorPosition,\n      styles,\n      backgroundStyle\n    ) {\n      // webkit uses px values if non are given\n      unit = unit === \"px\" ? \"\" : unit;\n\n      if (orientation == \"horizontal\") {\n        var startPos = startColorPosition + unit + \" 0\" + unit;\n        var endPos = endColorPosition + unit + \" 0\" + unit;\n      } else {\n        var startPos = \"0\" + unit + \" \" + startColorPosition + unit;\n        var endPos = \"0\" + unit + \" \" + endColorPosition + unit;\n      }\n\n      var color = \"from(\" + startColor + \"),to(\" + endColor + \")\";\n\n      backgroundStyle.push(\n        \"-webkit-gradient(linear,\" + startPos + \",\" + endPos + \",\" + color + \")\"\n      );\n\n      return true;\n    },\n\n    /**\n     * Compute CSS rules to style the background with gradients.\n     * This can be called multiple times and SHOULD layer the gradients on top of each other and on top of existing backgrounds.\n     * IE9 canvas solution.\n     *\n     * @param startColor {Color} The color to start the gradient with\n     * @param endColor {Color} The color to end the gradient with\n     * @param unit {Color} The unit in which startColorPosition and endColorPosition are measured\n     * @param orientation {String} Either 'horizontal' or 'vertical'\n     * @param startColorPosition {Number} The position of the gradient’s starting point, measured in `unit` units along the `orientation` axis from top or left\n     * @param endColorPosition {Number} The position of the gradient’s ending point, measured in `unit` units along the `orientation` axis from top or left\n     * @param styles {Map} The complete styles currently poised to be applied by decorators. Should not be written to in this method (use `backgroundStyle` for that)\n     * @param backgroundStyle {Map} This method should push new background styles onto this array.\n     *\n     * @return {Boolean} Whether this implementation supports multiple gradients atop each other (true).\n     */\n    __styleLinearBackgroundGradientWithCanvas(\n      startColor,\n      endColor,\n      unit,\n      orientation,\n      startColorPosition,\n      endColorPosition,\n      styles,\n      backgroundStyle\n    ) {\n      const me =\n        qx.ui.decoration.MLinearBackgroundGradient\n          .__styleLinearBackgroundGradientWithCanvas;\n      if (!me.__canvas) {\n        me.__canvas = document.createElement(\"canvas\");\n      }\n\n      var isVertical = orientation == \"vertical\";\n\n      var height = isVertical ? 200 : 1;\n      var width = isVertical ? 1 : 200;\n      var range = Math.max(100, endColorPosition - startColorPosition);\n\n      // use the px difference as dimension\n      if (unit === \"px\") {\n        if (isVertical) {\n          height = Math.max(height, endColorPosition - startColorPosition);\n        } else {\n          width = Math.max(width, endColorPosition - startColorPosition);\n        }\n      } else {\n        if (isVertical) {\n          height = Math.max(\n            height,\n            (endColorPosition - startColorPosition) * 2\n          );\n        } else {\n          width = Math.max(width, (endColorPosition - startColorPosition) * 2);\n        }\n      }\n\n      me.__canvas.width = width;\n      me.__canvas.height = height;\n      var ctx = me.__canvas.getContext(\"2d\");\n\n      if (isVertical) {\n        var lingrad = ctx.createLinearGradient(0, 0, 0, height);\n      } else {\n        var lingrad = ctx.createLinearGradient(0, 0, width, 0);\n      }\n\n      // don't allow negative start values\n      if (unit === \"%\") {\n        lingrad.addColorStop(\n          Math.max(0, startColorPosition) / range,\n          startColor\n        );\n\n        lingrad.addColorStop(endColorPosition / range, endColor);\n      } else {\n        var comp = isVertical ? height : width;\n        lingrad.addColorStop(\n          Math.max(0, startColorPosition) / comp,\n          startColor\n        );\n\n        lingrad.addColorStop(endColorPosition / comp, endColor);\n      }\n\n      //Clear the rect before drawing to allow for semitransparent colors\n      ctx.clearRect(0, 0, width, height);\n      ctx.fillStyle = lingrad;\n      ctx.fillRect(0, 0, width, height);\n\n      var size;\n      if (unit === \"%\") {\n        size = isVertical ? \"100% \" + range + \"%\" : range + \"% 100%\";\n      } else {\n        size = isVertical ? height + \"px 100%\" : \"100% \" + width + \"px\";\n      }\n\n      backgroundStyle.push(\"url(\" + me.__canvas.toDataURL() + \") \" + size);\n      return true;\n    },\n\n    /**\n     * Compute CSS rules to style the background with gradients.\n     * This can be called multiple times and SHOULD layer the gradients on top of each other and on top of existing backgrounds.\n     * Old IE filter fallback.\n     *\n     * @param startColor {Color} The color to start the gradient with\n     * @param endColor {Color} The color to end the gradient with\n     * @param unit {Color} The unit in which startColorPosition and endColorPosition are measured\n     * @param orientation {String} Either 'horizontal' or 'vertical'\n     * @param startColorPosition {Number} The position of the gradient’s starting point, measured in `unit` units along the `orientation` axis from top or left\n     * @param endColorPosition {Number} The position of the gradient’s ending point, measured in `unit` units along the `orientation` axis from top or left\n     * @param styles {Map} The complete styles currently poised to be applied by decorators. Should not be written to in this method (use `backgroundStyle` for that). Note: this particular implementation will do that because it needs to change the `filter` property.\n     * @param backgroundStyle {Map} This method should push new background styles onto this array.\n     *\n     * @return {Boolean} Whether this implementation supports multiple gradients atop each other (false).\n     */\n    __styleLinearBackgroundGradientWithMSFilter(\n      startColor,\n      endColor,\n      unit,\n      orientation,\n      startColorPosition,\n      endColorPosition,\n      styles,\n      backgroundStyle\n    ) {\n      var type = orientation == \"horizontal\" ? 1 : 0;\n\n      // convert rgb, hex3 and named colors to hex6\n      if (!qx.util.ColorUtil.isHex6String(startColor)) {\n        startColor = qx.util.ColorUtil.stringToRgb(startColor);\n        startColor = qx.util.ColorUtil.rgbToHexString(startColor);\n      }\n      if (!qx.util.ColorUtil.isHex6String(endColor)) {\n        endColor = qx.util.ColorUtil.stringToRgb(endColor);\n        endColor = qx.util.ColorUtil.rgbToHexString(endColor);\n      }\n\n      // get rid of the starting '#'\n      startColor = startColor.substring(1, startColor.length);\n      endColor = endColor.substring(1, endColor.length);\n\n      var value =\n        \"progid:DXImageTransform.Microsoft.Gradient\" +\n        \"(GradientType=\" +\n        type +\n        \", \" +\n        \"StartColorStr='#FF\" +\n        startColor +\n        \"', \" +\n        \"EndColorStr='#FF\" +\n        endColor +\n        \"';)\";\n      if (styles[\"filter\"]) {\n        styles[\"filter\"] += \", \" + value;\n      } else {\n        styles[\"filter\"] = value;\n      }\n\n      // Elements with transparent backgrounds will not receive receive pointer\n      // events if a Gradient filter is set.\n      if (\n        !styles[\"background-color\"] ||\n        styles[\"background-color\"] == \"transparent\"\n      ) {\n        // We don't support alpha transparency for the gradient color stops\n        // so it doesn't matter which color we set here.\n        styles[\"background-color\"] = \"white\";\n      }\n      return false;\n    },\n\n    /**\n     * Compute CSS rules to style the background with gradients.\n     * This can be called multiple times and SHOULD layer the gradients on top of each other and on top of existing backgrounds.\n     * Default implementation (uses spec-compliant syntax).\n     *\n     * @param startColor {Color} The color to start the gradient with\n     * @param endColor {Color} The color to end the gradient with\n     * @param unit {Color} The unit in which startColorPosition and endColorPosition are measured\n     * @param orientation {String} Either 'horizontal' or 'vertical'\n     * @param startColorPosition {Number} The position of the gradient’s starting point, measured in `unit` units along the `orientation` axis from top or left\n     * @param endColorPosition {Number} The position of the gradient’s ending point, measured in `unit` units along the `orientation` axis from top or left\n     * @param styles {Map} The complete styles currently poised to be applied by decorators. Should not be written to in this method (use `backgroundStyle` for that)\n     * @param backgroundStyle {Map} This method should push new background styles onto this array.\n     *\n     * @return {Boolean} Whether this implementation supports multiple gradients atop each other (true).\n     */\n    __styleLinearBackgroundGradientAccordingToSpec(\n      startColor,\n      endColor,\n      unit,\n      orientation,\n      startColorPosition,\n      endColorPosition,\n      styles,\n      backgroundStyle\n    ) {\n      // WebKit, Opera and Gecko interpret 0deg as \"to right\"\n      var deg = orientation == \"horizontal\" ? 0 : 270;\n\n      var start = startColor + \" \" + startColorPosition + unit;\n      var end = endColor + \" \" + endColorPosition + unit;\n\n      var prefixedName = qx.core.Environment.get(\"css.gradient.linear\");\n      // Browsers supporting the unprefixed implementation interpret 0deg as\n      // \"to top\" as defined by the spec [BUG #6513]\n      if (prefixedName === \"linear-gradient\") {\n        deg = orientation == \"horizontal\" ? deg + 90 : deg - 90;\n      }\n\n      backgroundStyle.push(\n        prefixedName + \"(\" + deg + \"deg, \" + start + \",\" + end + \")\"\n      );\n\n      return true;\n    },\n\n    /**\n     * Helper to get a resolved color from a name\n     * @param color {String} The color name\n     * @return {Map} The resolved color\n     */\n    __getColor(color) {\n      return qx.core.Environment.get(\"qx.theme\")\n        ? qx.theme.manager.Color.getInstance().resolve(color)\n        : color;\n    },\n\n    // property apply\n    _applyLinearBackgroundGradient() {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (this._isInitialized()) {\n          throw new Error(\n            \"This decorator is already in-use. Modification is not possible anymore!\"\n          );\n        }\n      }\n    }\n  }\n});\n"
  ]
}