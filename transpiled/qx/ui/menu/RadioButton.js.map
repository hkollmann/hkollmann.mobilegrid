{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/menu/RadioButton.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "menu",
    "AbstractButton",
    "include",
    "form",
    "MModelProperty",
    "implement",
    "IRadioItem",
    "IBooleanForm",
    "IModel",
    "construct",
    "label",
    "contentEl",
    "getContentElement",
    "setAttribute",
    "setLabel",
    "setMenu",
    "addListener",
    "_onExecute",
    "properties",
    "appearance",
    "refine",
    "init",
    "value",
    "check",
    "nullable",
    "event",
    "apply",
    "group",
    "members",
    "_bindableProperties",
    "_applyValue",
    "old",
    "addState",
    "removeState",
    "Boolean",
    "_applyGroup",
    "remove",
    "add",
    "e",
    "grp",
    "getGroup",
    "getAllowEmptySelection",
    "toggleValue",
    "setValue",
    "RadioButton"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * Renders a special radio button inside a menu. The button behaves like\n * a normal {@link qx.ui.form.RadioButton} and shows a radio icon when\n * checked; normally shows no icon when not checked (depends on the theme).\n */\nqx.Class.define(\"qx.ui.menu.RadioButton\", {\n  extend: qx.ui.menu.AbstractButton,\n  include: [qx.ui.form.MModelProperty],\n  implement: [\n    qx.ui.form.IRadioItem,\n    qx.ui.form.IBooleanForm,\n    qx.ui.form.IModel\n  ],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String} Initial label\n   * @param menu {qx.ui.menu.Menu} Initial sub menu\n   */\n  construct(label, menu) {\n    super();\n\n    // ARIA attrs\n    // Important: (Grouped) radio btns should be children of a div with role 'radiogroup'\n    const contentEl = this.getContentElement();\n    contentEl.setAttribute(\"role\", \"radio\");\n    contentEl.setAttribute(\"aria-checked\", false);\n\n    // Initialize with incoming arguments\n    if (label != null) {\n      this.setLabel(label);\n    }\n\n    if (menu != null) {\n      this.setMenu(menu);\n    }\n\n    this.addListener(\"execute\", this._onExecute, this);\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"menu-radiobutton\"\n    },\n\n    /** The value of the widget. True, if the widget is checked. */\n    value: {\n      check: \"Boolean\",\n      nullable: true,\n      event: \"changeValue\",\n      apply: \"_applyValue\",\n      init: false\n    },\n\n    /** The assigned qx.ui.form.RadioGroup which handles the switching between registered buttons */\n    group: {\n      check: \"qx.ui.form.RadioGroup\",\n      nullable: true,\n      apply: \"_applyGroup\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n\n  members: {\n    // overridden (from MExecutable to keep the icon out of the binding)\n    /**\n     * @lint ignoreReferenceField(_bindableProperties)\n     */\n    _bindableProperties: [\"enabled\", \"label\", \"toolTipText\", \"value\", \"menu\"],\n\n    // property apply\n    _applyValue(value, old) {\n      value ? this.addState(\"checked\") : this.removeState(\"checked\");\n\n      // ARIA attrs\n      this.getContentElement().setAttribute(\"aria-checked\", Boolean(value));\n    },\n\n    // property apply\n    _applyGroup(value, old) {\n      if (old) {\n        old.remove(this);\n      }\n\n      if (value) {\n        value.add(this);\n      }\n    },\n\n    /**\n     * Handler for the execute event.\n     *\n     * @param e {qx.event.type.Event} The execute event.\n     */\n    _onExecute(e) {\n      var grp = this.getGroup();\n      if (grp && grp.getAllowEmptySelection()) {\n        this.toggleValue();\n      } else {\n        this.setValue(true);\n      }\n    }\n  }\n});\n"
  ]
}