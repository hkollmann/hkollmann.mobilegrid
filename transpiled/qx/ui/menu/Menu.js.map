{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/menu/Menu.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "core",
    "Widget",
    "include",
    "MPlacement",
    "MRemoteChildrenHandling",
    "construct",
    "_setLayout",
    "menu",
    "Layout",
    "root",
    "getApplicationRoot",
    "add",
    "contentEl",
    "getContentElement",
    "setAttribute",
    "toHashCode",
    "addListener",
    "_onPointerOver",
    "_onPointerOut",
    "_onResize",
    "_blocker",
    "Blocker",
    "initVisibility",
    "initKeepFocus",
    "initKeepActive",
    "properties",
    "appearance",
    "refine",
    "init",
    "allowGrowX",
    "allowGrowY",
    "visibility",
    "keepFocus",
    "keepActive",
    "spacingX",
    "check",
    "apply",
    "themeable",
    "spacingY",
    "iconColumnWidth",
    "arrowColumnWidth",
    "blockerColor",
    "nullable",
    "blockerOpacity",
    "selectedButton",
    "openedButton",
    "opener",
    "openInterval",
    "closeInterval",
    "blockBackground",
    "members",
    "__scheduledOpen",
    "__onAfterSlideBarAdd",
    "open",
    "getOpener",
    "isPlaced",
    "placeToWidget",
    "__updateSlideBar",
    "show",
    "_placementTarget",
    "warn",
    "openAtPointer",
    "e",
    "placeToPointer",
    "left",
    "getDocumentLeft",
    "top",
    "getDocumentTop",
    "openAtPoint",
    "point",
    "placeToPoint",
    "addSeparator",
    "Separator",
    "getColumnSizes",
    "_getMenuLayout",
    "getSelectables",
    "result",
    "children",
    "getChildren",
    "i",
    "length",
    "isEnabled",
    "push",
    "_applyIconColumnWidth",
    "value",
    "old",
    "setIconColumnWidth",
    "_applyArrowColumnWidth",
    "setArrowColumnWidth",
    "_applySpacingX",
    "setColumnSpacing",
    "_applySpacingY",
    "setSpacing",
    "_applyVisibility",
    "mgr",
    "Manager",
    "getInstance",
    "parentMenu",
    "getParentMenu",
    "setOpenedButton",
    "remove",
    "getOpenedButton",
    "resetOpenedButton",
    "resetSelectedButton",
    "__updateBlockerVisibility",
    "isVisible",
    "getBlockBackground",
    "zIndex",
    "getZIndex",
    "blockContent",
    "isBlocked",
    "unblock",
    "widget",
    "AbstractButton",
    "getContextMenu",
    "Menu",
    "getLayoutParent",
    "_applySelectedButton",
    "removeState",
    "addState",
    "__getRootOpener",
    "valueContentEl",
    "getAttribute",
    "removeAttribute",
    "_applyOpenedButton",
    "getMenu",
    "exclude",
    "_applyOpener",
    "addAriaLabelledBy",
    "_applyBlockerColor",
    "setColor",
    "_applyBlockerOpacity",
    "setOpacity",
    "getChildrenContainer",
    "getChildControl",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "MenuSlideBar",
    "layout",
    "_getLayout",
    "Grow",
    "slidebarLayout",
    "getLayout",
    "setLayout",
    "dispose",
    "lang",
    "Array",
    "clone",
    "removeListener",
    "_add",
    "hasChildControl",
    "_getMenuBounds",
    "getBounds",
    "_computePlacementSize",
    "menuBounds",
    "addListenerOnce",
    "rootHeight",
    "height",
    "getLayoutProperties",
    "_assertSlideBar",
    "setHeight",
    "moveTo",
    "callback",
    "call",
    "queue",
    "syncWidget",
    "jobs",
    "_afterAddChild",
    "child",
    "target",
    "undefined",
    "Error",
    "cancelClose",
    "getTarget",
    "setSelectedButton",
    "subMenu",
    "setOpener",
    "scheduleOpen",
    "opened",
    "scheduleClose",
    "cancelOpen",
    "contains",
    "getRelatedTarget",
    "destruct",
    "ObjectRegistry",
    "inShutDown",
    "_disposeObjects"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * The menu is a popup like control which supports buttons. It comes\n * with full keyboard navigation and an improved timeout based pointer\n * control behavior.\n *\n * This class is the container for all derived instances of\n * {@link qx.ui.menu.AbstractButton}.\n *\n * @childControl slidebar {qx.ui.menu.MenuSlideBar} shows a slidebar to easily navigate inside the menu (if too little space is left)\n */\nqx.Class.define(\"qx.ui.menu.Menu\", {\n  extend: qx.ui.core.Widget,\n\n  include: [qx.ui.core.MPlacement, qx.ui.core.MRemoteChildrenHandling],\n\n  construct() {\n    super();\n\n    // Use hard coded layout\n    this._setLayout(new qx.ui.menu.Layout());\n\n    // Automatically add to application's root\n    var root = this.getApplicationRoot();\n    root.add(this);\n\n    // ARIA attrs\n    const contentEl = this.getContentElement();\n    contentEl.setAttribute(\"role\", \"menu\");\n    contentEl.setAttribute(\"id\", \"menu-\" + this.toHashCode());\n\n    // Register pointer listeners\n    this.addListener(\"pointerover\", this._onPointerOver);\n    this.addListener(\"pointerout\", this._onPointerOut);\n\n    // add resize listener\n    this.addListener(\"resize\", this._onResize, this);\n    root.addListener(\"resize\", this._onResize, this);\n\n    this._blocker = new qx.ui.core.Blocker(root);\n\n    // Initialize properties\n    this.initVisibility();\n    this.initKeepFocus();\n    this.initKeepActive();\n  },\n\n  properties: {\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"menu\"\n    },\n\n    // overridden\n    allowGrowX: {\n      refine: true,\n      init: false\n    },\n\n    // overridden\n    allowGrowY: {\n      refine: true,\n      init: false\n    },\n\n    // overridden\n    visibility: {\n      refine: true,\n      init: \"excluded\"\n    },\n\n    // overridden\n    keepFocus: {\n      refine: true,\n      init: true\n    },\n\n    // overridden\n    keepActive: {\n      refine: true,\n      init: true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      STYLE OPTIONS\n    ---------------------------------------------------------------------------\n    */\n\n    /** The spacing between each cell of the menu buttons */\n    spacingX: {\n      check: \"Integer\",\n      apply: \"_applySpacingX\",\n      init: 0,\n      themeable: true\n    },\n\n    /** The spacing between each menu button */\n    spacingY: {\n      check: \"Integer\",\n      apply: \"_applySpacingY\",\n      init: 0,\n      themeable: true\n    },\n\n    /**\n     * Default icon column width if no icons are rendered.\n     * This property is ignored as soon as an icon is present.\n     */\n    iconColumnWidth: {\n      check: \"Integer\",\n      init: 0,\n      themeable: true,\n      apply: \"_applyIconColumnWidth\"\n    },\n\n    /** Default arrow column width if no sub menus are rendered */\n    arrowColumnWidth: {\n      check: \"Integer\",\n      init: 0,\n      themeable: true,\n      apply: \"_applyArrowColumnWidth\"\n    },\n\n    /**\n     * Color of the blocker\n     */\n    blockerColor: {\n      check: \"Color\",\n      init: null,\n      nullable: true,\n      apply: \"_applyBlockerColor\",\n      themeable: true\n    },\n\n    /**\n     * Opacity of the blocker\n     */\n    blockerOpacity: {\n      check: \"Number\",\n      init: 1,\n      apply: \"_applyBlockerOpacity\",\n      themeable: true\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      FUNCTIONALITY PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    /** The currently selected button */\n    selectedButton: {\n      check: \"qx.ui.core.Widget\",\n      nullable: true,\n      apply: \"_applySelectedButton\"\n    },\n\n    /** The currently opened button (sub menu is visible) */\n    openedButton: {\n      check: \"qx.ui.core.Widget\",\n      nullable: true,\n      apply: \"_applyOpenedButton\"\n    },\n\n    /** Widget that opened the menu */\n    opener: {\n      check: \"qx.ui.core.Widget\",\n      nullable: true,\n      apply: \"_applyOpener\"\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      BEHAVIOR PROPERTIES\n    ---------------------------------------------------------------------------\n    */\n\n    /** Interval in ms after which sub menus should be opened */\n    openInterval: {\n      check: \"Integer\",\n      themeable: true,\n      init: 250,\n      apply: \"_applyOpenInterval\"\n    },\n\n    /** Interval in ms after which sub menus should be closed  */\n    closeInterval: {\n      check: \"Integer\",\n      themeable: true,\n      init: 250,\n      apply: \"_applyCloseInterval\"\n    },\n\n    /** Blocks the background if value is <code>true<code> */\n    blockBackground: {\n      check: \"Boolean\",\n      themeable: true,\n      init: false\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __scheduledOpen: null,\n    __onAfterSlideBarAdd: null,\n\n    /** @type {qx.ui.core.Blocker} blocker for background blocking */\n    _blocker: null,\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Opens the menu and configures the opener\n     */\n    open() {\n      if (this.getOpener() != null) {\n        var isPlaced = this.placeToWidget(this.getOpener(), true);\n        if (isPlaced) {\n          this.__updateSlideBar();\n          this.show();\n\n          this._placementTarget = this.getOpener();\n        } else {\n          this.warn(\n            \"Could not open menu instance because 'opener' widget is not visible\"\n          );\n        }\n      } else {\n        this.warn(\"The menu instance needs a configured 'opener' widget!\");\n      }\n    },\n\n    /**\n     * Opens the menu at the pointer position\n     *\n     * @param e {qx.event.type.Pointer} Pointer event to align to\n     */\n    openAtPointer(e) {\n      this.placeToPointer(e);\n      this.__updateSlideBar();\n      this.show();\n\n      this._placementTarget = {\n        left: e.getDocumentLeft(),\n        top: e.getDocumentTop()\n      };\n    },\n\n    /**\n     * Opens the menu in relation to the given point\n     *\n     * @param point {Map} Coordinate of any point with the keys <code>left</code>\n     *   and <code>top</code>.\n     */\n    openAtPoint(point) {\n      this.placeToPoint(point);\n      this.__updateSlideBar();\n      this.show();\n\n      this._placementTarget = point;\n    },\n\n    /**\n     * Convenience method to add a separator to the menu\n     */\n    addSeparator() {\n      this.add(new qx.ui.menu.Separator());\n    },\n\n    /**\n     * Returns the column sizes detected during the pre-layout phase\n     *\n     * @return {Array} List of all column widths\n     */\n    getColumnSizes() {\n      return this._getMenuLayout().getColumnSizes();\n    },\n\n    /**\n     * Return all selectable menu items.\n     *\n     * @return {qx.ui.core.Widget[]} selectable widgets\n     */\n    getSelectables() {\n      var result = [];\n      var children = this.getChildren();\n\n      for (var i = 0; i < children.length; i++) {\n        if (children[i].isEnabled()) {\n          result.push(children[i]);\n        }\n      }\n\n      return result;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyIconColumnWidth(value, old) {\n      this._getMenuLayout().setIconColumnWidth(value);\n    },\n\n    // property apply\n    _applyArrowColumnWidth(value, old) {\n      this._getMenuLayout().setArrowColumnWidth(value);\n    },\n\n    // property apply\n    _applySpacingX(value, old) {\n      this._getMenuLayout().setColumnSpacing(value);\n    },\n\n    // property apply\n    _applySpacingY(value, old) {\n      this._getMenuLayout().setSpacing(value);\n    },\n\n    // overridden\n    _applyVisibility(value, old) {\n      super._applyVisibility(value, old);\n\n      var mgr = qx.ui.menu.Manager.getInstance();\n\n      if (value === \"visible\") {\n        // Register to manager (zIndex handling etc.)\n        mgr.add(this);\n\n        // Mark opened in parent menu\n        var parentMenu = this.getParentMenu();\n        if (parentMenu) {\n          parentMenu.setOpenedButton(this.getOpener());\n        }\n      } else if (old === \"visible\") {\n        // Deregister from manager (zIndex handling etc.)\n        mgr.remove(this);\n\n        // Unmark opened in parent menu\n        var parentMenu = this.getParentMenu();\n        if (parentMenu && parentMenu.getOpenedButton() == this.getOpener()) {\n          parentMenu.resetOpenedButton();\n        }\n\n        // Clear properties\n        this.resetOpenedButton();\n        this.resetSelectedButton();\n      }\n\n      this.__updateBlockerVisibility();\n    },\n\n    /**\n     * Updates the blocker's visibility\n     */\n    __updateBlockerVisibility() {\n      if (this.isVisible()) {\n        if (this.getBlockBackground()) {\n          var zIndex = this.getZIndex();\n          this._blocker.blockContent(zIndex - 1);\n        }\n      } else {\n        if (this._blocker.isBlocked()) {\n          this._blocker.unblock();\n        }\n      }\n    },\n\n    /**\n     * Get the parent menu. Returns <code>null</code> if the menu doesn't have a\n     * parent menu.\n     *\n     * @return {qx.ui.core.Widget|null} The parent menu.\n     */\n    getParentMenu() {\n      var widget = this.getOpener();\n      if (!widget || !(widget instanceof qx.ui.menu.AbstractButton)) {\n        return null;\n      }\n\n      if (widget && widget.getContextMenu() === this) {\n        return null;\n      }\n\n      while (widget && !(widget instanceof qx.ui.menu.Menu)) {\n        widget = widget.getLayoutParent();\n      }\n      return widget;\n    },\n\n    // property apply\n    _applySelectedButton(value, old) {\n      if (old) {\n        old.removeState(\"selected\");\n      }\n      if (value) {\n        value.addState(\"selected\");\n      }\n\n      // ARIA attrs\n      const opener = this.__getRootOpener();\n      const contentEl = opener\n        ? opener.getContentElement()\n        : this.getContentElement();\n      if (!contentEl) {\n        return;\n      }\n      const valueContentEl = value ? value.getContentElement() : null;\n      if (valueContentEl) {\n        contentEl.setAttribute(\n          \"aria-activedescendant\",\n          valueContentEl.getAttribute(\"id\")\n        );\n      } else {\n        contentEl.removeAttribute(\"aria-activedescendant\");\n      }\n    },\n\n    // property apply\n    _applyOpenedButton(value, old) {\n      if (old && old.getMenu()) {\n        old.getMenu().exclude();\n      }\n\n      if (value) {\n        value.getMenu().open();\n      }\n    },\n\n    // property apply\n    _applyOpener(value, old) {\n      // ARIA attrs\n      const contentEl = this.getContentElement();\n      if (!contentEl) {\n        return;\n      }\n      if (value && value.getContentElement()) {\n        contentEl.setAttribute(\"aria-labelledby\", \"\");\n        this.addAriaLabelledBy(value);\n      } else {\n        contentEl.removeAttribute(\"aria-labelledby\");\n      }\n    },\n\n    // property apply\n    _applyBlockerColor(value, old) {\n      this._blocker.setColor(value);\n    },\n\n    // property apply\n    _applyBlockerOpacity(value, old) {\n      this._blocker.setOpacity(value);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n    SCROLLING SUPPORT\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    getChildrenContainer() {\n      return this.getChildControl(\"slidebar\", true) || this;\n    },\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"slidebar\":\n          var control = new qx.ui.menu.MenuSlideBar();\n\n          var layout = this._getLayout();\n          this._setLayout(new qx.ui.layout.Grow());\n\n          var slidebarLayout = control.getLayout();\n          control.setLayout(layout);\n          slidebarLayout.dispose();\n\n          var children = qx.lang.Array.clone(this.getChildren());\n          for (var i = 0; i < children.length; i++) {\n            control.add(children[i]);\n          }\n\n          this.removeListener(\"resize\", this._onResize, this);\n          control\n            .getChildrenContainer()\n            .addListener(\"resize\", this._onResize, this);\n\n          this._add(control);\n\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    /**\n     * Get the menu layout manager\n     *\n     * @return {qx.ui.layout.Abstract} The menu layout manager\n     */\n    _getMenuLayout() {\n      if (this.hasChildControl(\"slidebar\")) {\n        return this.getChildControl(\"slidebar\")\n          .getChildrenContainer()\n          .getLayout();\n      } else {\n        return this._getLayout();\n      }\n    },\n\n    /**\n     * Get the menu bounds\n     *\n     * @return {Map} The menu bounds\n     */\n    _getMenuBounds() {\n      if (this.hasChildControl(\"slidebar\")) {\n        return this.getChildControl(\"slidebar\")\n          .getChildrenContainer()\n          .getBounds();\n      } else {\n        return this.getBounds();\n      }\n    },\n\n    /**\n     * Computes the size of the menu. This method is used by the\n     * {@link qx.ui.core.MPlacement} mixin.\n     * @return {Map} The menu bounds\n     */\n    _computePlacementSize() {\n      return this._getMenuBounds();\n    },\n\n    /**\n     * Updates the visibility of the slidebar based on the menu's current size\n     * and position.\n     */\n    __updateSlideBar() {\n      var menuBounds = this._getMenuBounds();\n      if (!menuBounds) {\n        this.addListenerOnce(\"resize\", this.__updateSlideBar, this);\n        return;\n      }\n\n      var rootHeight = this.getLayoutParent().getBounds().height;\n      var top = this.getLayoutProperties().top;\n      var left = this.getLayoutProperties().left;\n\n      // Adding the slidebar must be deferred because this call can happen\n      // during the layout flush, which make it impossible to move existing\n      // layout to the slidebar\n      if (top < 0) {\n        this._assertSlideBar(function () {\n          this.setHeight(menuBounds.height + top);\n          this.moveTo(left, 0);\n        });\n      } else if (top + menuBounds.height > rootHeight) {\n        this._assertSlideBar(function () {\n          this.setHeight(rootHeight - top);\n        });\n      } else {\n        this.setHeight(null);\n      }\n    },\n\n    /**\n     * Schedules the addition of the slidebar and calls the given callback\n     * after the slidebar has been added.\n     *\n     * @param callback {Function} the callback to call\n     * @return {var|undefined} The return value of the callback if the slidebar\n     * already exists, or <code>undefined</code> if it doesn't\n     */\n    _assertSlideBar(callback) {\n      if (this.hasChildControl(\"slidebar\")) {\n        return callback.call(this);\n      }\n\n      this.__onAfterSlideBarAdd = callback;\n      qx.ui.core.queue.Widget.add(this);\n    },\n\n    // overridden\n    syncWidget(jobs) {\n      this.getChildControl(\"slidebar\");\n      if (this.__onAfterSlideBarAdd) {\n        this.__onAfterSlideBarAdd.call(this);\n        delete this.__onAfterSlideBarAdd;\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT HANDLING\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Gets called when a child is added. Sets ARIA attrs\n     * @param {*} child\n     */\n    _afterAddChild(child) {\n      // Some childs, e.g. Seperators, are no meaningful menu items\n      if (child instanceof qx.ui.menu.AbstractButton) {\n        const contentEl = child.getContentElement();\n        contentEl.setAttribute(\"id\", \"menu-item-\" + child.toHashCode());\n        contentEl.setAttribute(\"role\", \"menuitem\");\n      }\n    },\n\n    /**\n     * Update position if the menu or the root is resized\n     */\n    _onResize() {\n      if (this.isVisible()) {\n        var target = this._placementTarget;\n        if (!target) {\n          return;\n        } else if (target instanceof qx.ui.core.Widget) {\n          this.placeToWidget(target, true);\n        } else if (target.top !== undefined) {\n          this.placeToPoint(target);\n        } else {\n          throw new Error(\"Unknown target: \" + target);\n        }\n        this.__updateSlideBar();\n      }\n    },\n\n    /**\n     * Event listener for pointerover event.\n     *\n     * @param e {qx.event.type.Pointer} pointerover event\n     */\n    _onPointerOver(e) {\n      // Cache manager\n      var mgr = qx.ui.menu.Manager.getInstance();\n\n      // Be sure this menu is kept\n      mgr.cancelClose(this);\n\n      // Change selection\n      var target = e.getTarget();\n      if (target.isEnabled() && target instanceof qx.ui.menu.AbstractButton) {\n        // Select button directly\n        this.setSelectedButton(target);\n\n        var subMenu = target.getMenu && target.getMenu();\n        if (subMenu) {\n          subMenu.setOpener(target);\n\n          // Finally schedule for opening\n          mgr.scheduleOpen(subMenu);\n\n          // Remember scheduled menu for opening\n          this.__scheduledOpen = subMenu;\n        } else {\n          var opened = this.getOpenedButton();\n          if (opened) {\n            mgr.scheduleClose(opened.getMenu());\n          }\n\n          if (this.__scheduledOpen) {\n            mgr.cancelOpen(this.__scheduledOpen);\n            this.__scheduledOpen = null;\n          }\n        }\n      } else if (!this.getOpenedButton()) {\n        // When no button is opened reset the selection\n        // Otherwise keep it\n        this.resetSelectedButton();\n      }\n    },\n\n    /**\n     * Event listener for pointerout event.\n     *\n     * @param e {qx.event.type.Pointer} pointerout event\n     */\n    _onPointerOut(e) {\n      // Cache manager\n      var mgr = qx.ui.menu.Manager.getInstance();\n\n      // Detect whether the related target is out of the menu\n      if (!qx.ui.core.Widget.contains(this, e.getRelatedTarget())) {\n        // Update selected property\n        // Force it to the open sub menu in cases where that is opened\n        // Otherwise reset it. Menus which are left by the cursor should\n        // not show any selection.\n        var opened = this.getOpenedButton();\n        opened ? this.setSelectedButton(opened) : this.resetSelectedButton();\n\n        // Cancel a pending close request for the currently\n        // opened sub menu\n        if (opened) {\n          mgr.cancelClose(opened.getMenu());\n        }\n\n        // When leaving this menu to the outside, stop\n        // all pending requests to open any other sub menu\n        if (this.__scheduledOpen) {\n          mgr.cancelOpen(this.__scheduledOpen);\n        }\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      HELPER FUNCTIONS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Get the opener of the root/the first parent menu.\n     * parent menu.\n     *\n     * @return {qx.ui.core.Widget|null} The opener.\n     */\n    __getRootOpener() {\n      let parentMenu = this.getParentMenu();\n      if (!parentMenu) {\n        return this.getOpener();\n      }\n      let opener;\n      while (parentMenu) {\n        opener = parentMenu.getOpener();\n        parentMenu = parentMenu.getParentMenu();\n      }\n      return opener;\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    if (!qx.core.ObjectRegistry.inShutDown) {\n      qx.ui.menu.Manager.getInstance().remove(this);\n    }\n\n    this.getApplicationRoot().removeListener(\"resize\", this._onResize, this);\n    this._placementTarget = null;\n    this._disposeObjects(\"_blocker\");\n  }\n});\n"
  ]
}