{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/toolbar/MenuButton.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "menubar",
    "Button",
    "properties",
    "appearance",
    "refine",
    "init",
    "showArrow",
    "check",
    "themeable",
    "apply",
    "members",
    "_applyVisibility",
    "value",
    "old",
    "menu",
    "getMenu",
    "hide",
    "parent",
    "getLayoutParent",
    "toolbar",
    "PartContainer",
    "core",
    "queue",
    "Appearance",
    "add",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "basic",
    "Image",
    "setAnonymous",
    "_addAt",
    "_applyShowArrow",
    "_showChildControl",
    "_excludeChildControl",
    "MenuButton"
  ],
  "mappings": ";;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,0BAAhB,EAA4C;AAC1CC,IAAAA,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,OAAN,CAAcC,MADoB;;AAG1C;AACF;AACA;AACA;AACA;AAEEC,IAAAA,UAAU,EAAE;AACV;AACAC,MAAAA,UAAU,EAAE;AACVC,QAAAA,MAAM,EAAE,IADE;AAEVC,QAAAA,IAAI,EAAE;AAFI,OAFF;;AAOV;AACAC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE,SADE;AAETF,QAAAA,IAAI,EAAE,KAFG;AAGTG,QAAAA,SAAS,EAAE,IAHF;AAITC,QAAAA,KAAK,EAAE;AAJE;AARD,KAT8B;;AAyB1C;AACF;AACA;AACA;AACA;AAEEC,IAAAA,OAAO,EAAE;AACP;AACAC,MAAAA,gBAFO,4BAEUC,KAFV,EAEiBC,GAFjB,EAEsB;AAC3B,kFAAuBD,KAAvB,EAA8BC,GAA9B,EAD2B,CAG3B;;;AACA,YAAIC,IAAI,GAAG,KAAKC,OAAL,EAAX;;AACA,YAAIH,KAAK,IAAI,SAAT,IAAsBE,IAA1B,EAAgC;AAC9BA,UAAAA,IAAI,CAACE,IAAL;AACD,SAP0B,CAS3B;;;AACA,YAAIC,MAAM,GAAG,KAAKC,eAAL,EAAb;;AACA,YAAID,MAAM,IAAIA,MAAM,YAAYzB,EAAE,CAACO,EAAH,CAAMoB,OAAN,CAAcC,aAA9C,EAA6D;AAC3D5B,UAAAA,EAAE,CAACO,EAAH,CAAMsB,IAAN,CAAWC,KAAX,CAAiBC,UAAjB,CAA4BC,GAA5B,CAAgCP,MAAhC;AACD;AACF,OAhBM;AAkBP;AACAQ,MAAAA,uBAnBO,mCAmBiBC,EAnBjB,EAmBqBC,IAnBrB,EAmB2B;AAChC,YAAIC,OAAJ;;AAEA,gBAAQF,EAAR;AACE,eAAK,OAAL;AACEE,YAAAA,OAAO,GAAG,IAAIpC,EAAE,CAACO,EAAH,CAAM8B,KAAN,CAAYC,KAAhB,EAAV;AACAF,YAAAA,OAAO,CAACG,YAAR,CAAqB,IAArB;;AACA,iBAAKC,MAAL,CAAYJ,OAAZ,EAAqB,EAArB;;AACA;AALJ;;AAQA,eAAOA,OAAO,qFAAkCF,EAAlC,CAAd;AACD,OA/BM;AAiCP;AACAO,MAAAA,eAlCO,2BAkCSrB,KAlCT,EAkCgBC,GAlChB,EAkCqB;AAC1B,YAAID,KAAJ,EAAW;AACT,eAAKsB,iBAAL,CAAuB,OAAvB;AACD,SAFD,MAEO;AACL,eAAKC,oBAAL,CAA0B,OAA1B;AACD;AACF;AAxCM;AA/BiC,GAA5C;AAvBA3C,EAAAA,EAAE,CAACO,EAAH,CAAMoB,OAAN,CAAciB,UAAd,CAAyBzC,aAAzB,GAAyCA,aAAzC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * The button to fill the menubar\n *\n * @childControl arrow {qx.ui.basic.Image} arrow widget to show a submenu is available\n */\nqx.Class.define(\"qx.ui.toolbar.MenuButton\", {\n  extend: qx.ui.menubar.Button,\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** Appearance of the widget */\n    appearance: {\n      refine: true,\n      init: \"toolbar-menubutton\"\n    },\n\n    /** Whether the button should show an arrow to indicate the menu behind it */\n    showArrow: {\n      check: \"Boolean\",\n      init: false,\n      themeable: true,\n      apply: \"_applyShowArrow\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    // overridden\n    _applyVisibility(value, old) {\n      super._applyVisibility(value, old);\n\n      // hide the menu too\n      var menu = this.getMenu();\n      if (value != \"visible\" && menu) {\n        menu.hide();\n      }\n\n      // trigger a appearance recalculation of the parent\n      var parent = this.getLayoutParent();\n      if (parent && parent instanceof qx.ui.toolbar.PartContainer) {\n        qx.ui.core.queue.Appearance.add(parent);\n      }\n    },\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"arrow\":\n          control = new qx.ui.basic.Image();\n          control.setAnonymous(true);\n          this._addAt(control, 10);\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    // property apply routine\n    _applyShowArrow(value, old) {\n      if (value) {\n        this._showChildControl(\"arrow\");\n      } else {\n        this._excludeChildControl(\"arrow\");\n      }\n    }\n  }\n});\n"
  ]
}