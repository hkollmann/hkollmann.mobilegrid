{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/toolbar/RadioButton.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "toolbar",
    "CheckBox",
    "include",
    "form",
    "MModelProperty",
    "implement",
    "IModel",
    "IRadioItem",
    "construct",
    "label",
    "icon",
    "contentEl",
    "getContentElement",
    "setAttribute",
    "removeAttribute",
    "members",
    "_applyValue",
    "value",
    "old",
    "Boolean",
    "grp",
    "getGroup",
    "setSelection",
    "_onExecute",
    "e",
    "getAllowEmptySelection",
    "toggleValue",
    "setValue",
    "RadioButton"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,2BAAhB,EAA6C;AAC3CC,IAAAA,MAAM,EAAEN,EAAE,CAACO,EAAH,CAAMC,OAAN,CAAcC,QADqB;AAE3CC,IAAAA,OAAO,EAAE,CAACV,EAAE,CAACO,EAAH,CAAMI,IAAN,CAAWC,cAAZ,CAFkC;AAG3CC,IAAAA,SAAS,EAAE,CAACb,EAAE,CAACO,EAAH,CAAMI,IAAN,CAAWG,MAAZ,EAAoBd,EAAE,CAACO,EAAH,CAAMI,IAAN,CAAWI,UAA/B,CAHgC;;AAK3C;AACF;AACA;AACA;AACA;AAEEC,IAAAA,SAX2C,qBAWjCC,KAXiC,EAW1BC,IAX0B,EAWpB;AACrB,oDAAMD,KAAN,EAAaC,IAAb,EADqB,CAGrB;AACA;;AACA,UAAMC,SAAS,GAAG,KAAKC,iBAAL,EAAlB;AACAD,MAAAA,SAAS,CAACE,YAAV,CAAuB,MAAvB,EAA+B,OAA/B;AACAF,MAAAA,SAAS,CAACE,YAAV,CAAuB,cAAvB,EAAuC,KAAvC;AACAF,MAAAA,SAAS,CAACG,eAAV,CAA0B,cAA1B;AACD,KApB0C;;AAsB3C;AACF;AACA;AACA;AACA;AAEEC,IAAAA,OAAO,EAAE;AACP;AACJ;AACA;AACA;AACA;AAEI;AACAC,MAAAA,WARO,uBAQKC,KARL,EAQYC,GARZ,EAQiB;AACtB,8EAAkBD,KAAlB,EAAyBC,GAAzB,EADsB,CAGtB;;;AACA,YAAMP,SAAS,GAAG,KAAKC,iBAAL,EAAlB;AACAD,QAAAA,SAAS,CAACG,eAAV,CAA0B,cAA1B;AACAH,QAAAA,SAAS,CAACE,YAAV,CAAuB,cAAvB,EAAuCM,OAAO,CAACF,KAAD,CAA9C;;AAEA,YAAIA,KAAJ,EAAW;AACT,cAAIG,GAAG,GAAG,KAAKC,QAAL,EAAV;;AACA,cAAID,GAAJ,EAAS;AACPA,YAAAA,GAAG,CAACE,YAAJ,CAAiB,CAAC,IAAD,CAAjB;AACD;AACF;AACF,OAtBM;AAwBP;AACAC,MAAAA,UAzBO,sBAyBIC,CAzBJ,EAyBO;AACZ,YAAIJ,GAAG,GAAG,KAAKC,QAAL,EAAV;;AACA,YAAID,GAAG,IAAIA,GAAG,CAACK,sBAAJ,EAAX,EAAyC;AACvC,eAAKC,WAAL;AACD,SAFD,MAEO;AACL,eAAKC,QAAL,CAAc,IAAd;AACD;AACF;AAhCM;AA5BkC,GAA7C;AAzBAnC,EAAAA,EAAE,CAACO,EAAH,CAAMC,OAAN,CAAc4B,WAAd,CAA0BjC,aAA1B,GAA0CA,aAA1C",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Radio buttons are used to manage a single selection. Radio buttons only\n * make sense used in a group of two or more of them. They are managed (connected)\n * to a {@link qx.ui.form.RadioGroup} to handle the selection.\n */\nqx.Class.define(\"qx.ui.toolbar.RadioButton\", {\n  extend: qx.ui.toolbar.CheckBox,\n  include: [qx.ui.form.MModelProperty],\n  implement: [qx.ui.form.IModel, qx.ui.form.IRadioItem],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct(label, icon) {\n    super(label, icon);\n\n    // ARIA attrs\n    // Important: (Grouped) radio btns should be children of a div with role 'radiogroup'\n    const contentEl = this.getContentElement();\n    contentEl.setAttribute(\"role\", \"radio\");\n    contentEl.setAttribute(\"aria-checked\", false);\n    contentEl.removeAttribute(\"aria-pressed\");\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _applyValue(value, old) {\n      super._applyValue(value, old);\n\n      // ARIA attrs\n      const contentEl = this.getContentElement();\n      contentEl.removeAttribute(\"aria-pressed\");\n      contentEl.setAttribute(\"aria-checked\", Boolean(value));\n\n      if (value) {\n        var grp = this.getGroup();\n        if (grp) {\n          grp.setSelection([this]);\n        }\n      }\n    },\n\n    // overridden\n    _onExecute(e) {\n      var grp = this.getGroup();\n      if (grp && grp.getAllowEmptySelection()) {\n        this.toggleValue();\n      } else {\n        this.setValue(true);\n      }\n    }\n  }\n});\n"
  ]
}