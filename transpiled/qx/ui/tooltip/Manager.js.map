{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/tooltip/Manager.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "type",
    "extend",
    "core",
    "Object",
    "construct",
    "event",
    "Registration",
    "addListener",
    "document",
    "body",
    "__onPointerOverRoot",
    "__showTimer",
    "Timer",
    "__onShowInterval",
    "__hideTimer",
    "__onHideInterval",
    "__pointerPosition",
    "left",
    "top",
    "properties",
    "current",
    "check",
    "nullable",
    "apply",
    "showInvalidToolTips",
    "init",
    "showToolTips",
    "members",
    "__sharedToolTip",
    "__sharedErrorToolTip",
    "getSharedTooltip",
    "ui",
    "tooltip",
    "ToolTip",
    "set",
    "rich",
    "getSharedErrorTooltip",
    "appearance",
    "setLabel",
    "syncAppearance",
    "_applyCurrent",
    "value",
    "old",
    "Widget",
    "contains",
    "isDisposed",
    "exclude",
    "stop",
    "el",
    "startWith",
    "getShowTimeout",
    "__onPointerOutRoot",
    "__onFocusOutRoot",
    "__onPointerMoveRoot",
    "removeListener",
    "e",
    "getCurrent",
    "getHideTimeout",
    "getPlaceMethod",
    "placeToWidget",
    "getOpener",
    "placeToPoint",
    "show",
    "getAutoHide",
    "resetCurrent",
    "pos",
    "Math",
    "round",
    "getDocumentLeft",
    "getDocumentTop",
    "target",
    "getWidgetByElement",
    "getTarget",
    "showToolTip",
    "tooltipText",
    "tooltipIcon",
    "invalidMessage",
    "getToolTip",
    "getToolTipText",
    "getToolTipIcon",
    "hasInterface",
    "constructor",
    "form",
    "IForm",
    "isValid",
    "getInvalidMessage",
    "getLayoutParent",
    "getEnabled",
    "isShowToolTipWhenDisabled",
    "isBlockToolTip",
    "getShowToolTips",
    "getShowInvalidToolTips",
    "label",
    "icon",
    "setCurrent",
    "setOpener",
    "related",
    "getRelatedTarget",
    "getPointerType",
    "destruct",
    "_disposeObjects",
    "Manager"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Adrian Olaru (adrianolaru)\n\n************************************************************************ */\n\n/**\n * The tooltip manager globally manages the tooltips of all widgets. It will\n * display tooltips if the user hovers a widgets with a tooltip and hides all\n * other tooltips.\n */\nqx.Class.define(\"qx.ui.tooltip.Manager\", {\n  type: \"singleton\",\n  extend: qx.core.Object,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  construct() {\n    super();\n\n    // Register events\n    qx.event.Registration.addListener(\n      document.body,\n      \"pointerover\",\n      this.__onPointerOverRoot,\n      this,\n      true\n    );\n\n    // Instantiate timers\n    this.__showTimer = new qx.event.Timer();\n    this.__showTimer.addListener(\"interval\", this.__onShowInterval, this);\n\n    this.__hideTimer = new qx.event.Timer();\n    this.__hideTimer.addListener(\"interval\", this.__onHideInterval, this);\n\n    // Init pointer position\n    this.__pointerPosition = { left: 0, top: 0 };\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    /** Holds the current ToolTip instance */\n    current: {\n      check: \"qx.ui.tooltip.ToolTip\",\n      nullable: true,\n      apply: \"_applyCurrent\"\n    },\n\n    /** Show all invalid form fields tooltips . */\n    showInvalidToolTips: {\n      check: \"Boolean\",\n      init: true\n    },\n\n    /** Show all tooltips. */\n    showToolTips: {\n      check: \"Boolean\",\n      init: true\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __pointerPosition: null,\n    __hideTimer: null,\n    __showTimer: null,\n    __sharedToolTip: null,\n    __sharedErrorToolTip: null,\n\n    /**\n     * Get the shared tooltip, which is used to display the\n     * {@link qx.ui.core.Widget#toolTipText} and\n     * {@link qx.ui.core.Widget#toolTipIcon} properties of widgets.\n     * You can use this public shared instance to e.g. customize the\n     * look and feel.\n     *\n     * @return {qx.ui.tooltip.ToolTip} The shared tooltip\n     */\n    getSharedTooltip() {\n      if (!this.__sharedToolTip) {\n        this.__sharedToolTip = new qx.ui.tooltip.ToolTip().set({\n          rich: true\n        });\n      }\n      return this.__sharedToolTip;\n    },\n\n    /**\n     * Get the shared tooltip, which is used to display the\n     * {@link qx.ui.core.Widget#toolTipText} and\n     * {@link qx.ui.core.Widget#toolTipIcon} properties of widgets.\n     * You can use this public shared instance to e.g. customize the\n     * look and feel of the validation tooltips like\n     * <code>getSharedErrorTooltip().getChildControl(\"atom\").getChildControl(\"label\").set({rich: true, wrap: true, width: 80})</code>\n     *\n     * @return {qx.ui.tooltip.ToolTip} The shared tooltip\n     */\n    getSharedErrorTooltip() {\n      if (!this.__sharedErrorToolTip) {\n        this.__sharedErrorToolTip = new qx.ui.tooltip.ToolTip().set({\n          appearance: \"tooltip-error\",\n          rich: true\n        });\n\n        this.__sharedErrorToolTip.setLabel(\"\"); // trigger label widget creation\n        this.__sharedErrorToolTip.syncAppearance();\n      }\n\n      return this.__sharedErrorToolTip;\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyCurrent(value, old) {\n      // Return if the new tooltip is a child of the old one\n      if (old && qx.ui.core.Widget.contains(old, value)) {\n        return;\n      }\n\n      // If old tooltip existing, hide it and clear widget binding\n      if (old) {\n        if (!old.isDisposed()) {\n          old.exclude();\n        }\n\n        this.__showTimer.stop();\n        this.__hideTimer.stop();\n      }\n\n      var Registration = qx.event.Registration;\n      var el = document.body;\n      // If new tooltip is not null, set it up and start the timer\n      if (value) {\n        this.__showTimer.startWith(value.getShowTimeout());\n\n        // Register hide handler\n        Registration.addListener(\n          el,\n          \"pointerout\",\n          this.__onPointerOutRoot,\n          this,\n          true\n        );\n\n        Registration.addListener(\n          el,\n          \"focusout\",\n          this.__onFocusOutRoot,\n          this,\n          true\n        );\n\n        Registration.addListener(\n          el,\n          \"pointermove\",\n          this.__onPointerMoveRoot,\n          this,\n          true\n        );\n      } else {\n        // Deregister hide handler\n        Registration.removeListener(\n          el,\n          \"pointerout\",\n          this.__onPointerOutRoot,\n          this,\n          true\n        );\n\n        Registration.removeListener(\n          el,\n          \"focusout\",\n          this.__onFocusOutRoot,\n          this,\n          true\n        );\n\n        Registration.removeListener(\n          el,\n          \"pointermove\",\n          this.__onPointerMoveRoot,\n          this,\n          true\n        );\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      TIMER EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Event listener for the interval event of the show timer.\n     *\n     * @param e {qx.event.type.Event} Event object\n     */\n    __onShowInterval(e) {\n      var current = this.getCurrent();\n      if (current && !current.isDisposed()) {\n        this.__hideTimer.startWith(current.getHideTimeout());\n\n        if (current.getPlaceMethod() == \"widget\") {\n          current.placeToWidget(current.getOpener());\n        } else {\n          current.placeToPoint(this.__pointerPosition);\n        }\n\n        current.show();\n      }\n\n      this.__showTimer.stop();\n    },\n\n    /**\n     * Event listener for the interval event of the hide timer.\n     *\n     * @param e {qx.event.type.Event} Event object\n     */\n    __onHideInterval(e) {\n      var current = this.getCurrent();\n\n      if (current && !current.getAutoHide()) {\n        return;\n      }\n\n      if (current && !current.isDisposed()) {\n        current.exclude();\n      }\n\n      this.__hideTimer.stop();\n      this.resetCurrent();\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      POINTER EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Global pointer move event handler\n     *\n     * @param e {qx.event.type.Pointer} The move pointer event\n     */\n    __onPointerMoveRoot(e) {\n      var pos = this.__pointerPosition;\n\n      pos.left = Math.round(e.getDocumentLeft());\n      pos.top = Math.round(e.getDocumentTop());\n    },\n\n    /**\n     * Searches for the tooltip of the target widget. If any tooltip instance\n     * is found this instance is bound to the target widget and the tooltip is\n     * set as {@link #current}\n     *\n     * @param e {qx.event.type.Pointer} pointerover event\n     */\n    __onPointerOverRoot(e) {\n      var target = qx.ui.core.Widget.getWidgetByElement(e.getTarget());\n      // take first coordinates as backup if no move event will be fired (e.g. touch devices)\n      this.__onPointerMoveRoot(e);\n      this.showToolTip(target);\n    },\n\n    /**\n     * Explicitly show tooltip for particular form item.\n     *\n     * @param target {Object | null} widget to show tooltip for\n     */\n    showToolTip(target) {\n      if (!target) {\n        return;\n      }\n\n      var tooltip, tooltipText, tooltipIcon, invalidMessage;\n\n      // Search first parent which has a tooltip\n      while (target != null) {\n        tooltip = target.getToolTip();\n        tooltipText = target.getToolTipText() || null;\n        tooltipIcon = target.getToolTipIcon() || null;\n        if (\n          qx.Class.hasInterface(target.constructor, qx.ui.form.IForm) &&\n          !target.isValid()\n        ) {\n          invalidMessage = target.getInvalidMessage();\n        }\n\n        if (tooltip || tooltipText || tooltipIcon || invalidMessage) {\n          break;\n        }\n\n        target = target.getLayoutParent();\n      }\n\n      //do nothing if\n      if (\n        !target || //don't have a target\n        // tooltip is disabled and the value of showToolTipWhenDisabled is false\n        (!target.getEnabled() && !target.isShowToolTipWhenDisabled()) ||\n        //tooltip is blocked\n        target.isBlockToolTip() ||\n        //an invalid message isn't set and tooltips are disabled\n        (!invalidMessage && !this.getShowToolTips()) ||\n        //an invalid message is set and invalid tooltips are disabled\n        (invalidMessage && !this.getShowInvalidToolTips())\n      ) {\n        return;\n      }\n\n      if (invalidMessage) {\n        tooltip = this.getSharedErrorTooltip().set({\n          label: invalidMessage\n        });\n      }\n      if (!tooltip) {\n        tooltip = this.getSharedTooltip().set({\n          label: tooltipText,\n          icon: tooltipIcon\n        });\n      }\n      this.setCurrent(tooltip);\n      tooltip.setOpener(target);\n    },\n\n    /**\n     * Resets the property {@link #current} if there was a\n     * tooltip and no new one is created.\n     *\n     * @param e {qx.event.type.Pointer} pointerout event\n     */\n    __onPointerOutRoot(e) {\n      var target = qx.ui.core.Widget.getWidgetByElement(e.getTarget());\n      if (!target) {\n        return;\n      }\n\n      var related = qx.ui.core.Widget.getWidgetByElement(e.getRelatedTarget());\n      if (!related && e.getPointerType() == \"mouse\") {\n        return;\n      }\n\n      var tooltip = this.getCurrent();\n\n      // If there was a tooltip and\n      // - the destination target is the current tooltip\n      //   or\n      // - the current tooltip contains the destination target\n      if (\n        tooltip &&\n        (related == tooltip || qx.ui.core.Widget.contains(tooltip, related))\n      ) {\n        return;\n      }\n\n      // If the destination target exists and the target contains it\n      if (related && target && qx.ui.core.Widget.contains(target, related)) {\n        return;\n      }\n\n      if (tooltip && !tooltip.getAutoHide()) {\n        return;\n      }\n\n      // If there was a tooltip and there is no new one\n      if (tooltip && !related) {\n        this.setCurrent(null);\n      } else {\n        this.resetCurrent();\n      }\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      FOCUS EVENT HANDLER\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Reset the property {@link #current} if the\n     * current tooltip is the tooltip of the target widget.\n     *\n     * @param e {qx.event.type.Focus} blur event\n     */\n    __onFocusOutRoot(e) {\n      var target = qx.ui.core.Widget.getWidgetByElement(e.getTarget());\n      if (!target) {\n        return;\n      }\n\n      var tooltip = this.getCurrent();\n\n      if (tooltip && !tooltip.getAutoHide()) {\n        return;\n      }\n\n      // Only set to null if blurred widget is the\n      // one which has created the current tooltip\n      if (tooltip && tooltip == target.getToolTip()) {\n        this.setCurrent(null);\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DESTRUCTOR\n  *****************************************************************************\n  */\n\n  destruct() {\n    // Deregister events\n    qx.event.Registration.removeListener(\n      document.body,\n      \"pointerover\",\n      this.__onPointerOverRoot,\n      this,\n      true\n    );\n\n    // Dispose timers\n    this._disposeObjects(\"__showTimer\", \"__hideTimer\", \"__sharedToolTip\");\n    this.__pointerPosition = null;\n  }\n});\n"
  ]
}