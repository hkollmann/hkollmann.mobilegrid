{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/ui/tabview/Page.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "ui",
    "container",
    "Composite",
    "construct",
    "label",
    "icon",
    "_createChildControl",
    "setLabel",
    "setIcon",
    "btn",
    "getButton",
    "pageId",
    "toHashCode",
    "btnId",
    "contentEl",
    "getContentElement",
    "setAttribute",
    "btnContentEl",
    "addListener",
    "_onBtnChangeValue",
    "events",
    "close",
    "properties",
    "appearance",
    "refine",
    "init",
    "check",
    "apply",
    "nullable",
    "showCloseButton",
    "tabVisibility",
    "event",
    "members",
    "_forwardStates",
    "barTop",
    "barRight",
    "barBottom",
    "barLeft",
    "firstTab",
    "lastTab",
    "_applyIcon",
    "value",
    "old",
    "getChildControl",
    "_showChildControl",
    "_excludeChildControl",
    "_applyLabel",
    "_applyEnabled",
    "resetEnabled",
    "setEnabled",
    "_createChildControlImpl",
    "id",
    "hash",
    "control",
    "tabview",
    "TabButton",
    "setAllowGrowX",
    "setAllowGrowY",
    "setUserData",
    "_onButtonClose",
    "setVisibility",
    "getTabVisibility",
    "e",
    "val",
    "getData",
    "_applyShowCloseButton",
    "setShowCloseButton",
    "_applyTabVisibility",
    "newValue",
    "oldValue",
    "fireEvent",
    "Page"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (martinwittemann)\n     * Jonathan Wei√ü (jonathan_rass)\n\n************************************************************************ */\n\n/**\n * A page is the way to add content to a {@link TabView}. Each page gets a\n * button to switch to the page. Only one page is visible at a time.\n *\n * @childControl button {qx.ui.tabview.TabButton} tab button connected to the page\n */\nqx.Class.define(\"qx.ui.tabview.Page\", {\n  extend: qx.ui.container.Composite,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param label {String} Initial label of the tab\n   * @param icon {String} Initial icon of the tab\n   */\n  construct(label, icon) {\n    super();\n\n    this._createChildControl(\"button\");\n\n    // init\n    if (label != null) {\n      this.setLabel(label);\n    }\n\n    if (icon != null) {\n      this.setIcon(icon);\n    }\n\n    // ARIA attrs\n    const btn = this.getButton();\n    const pageId = \"page-\" + this.toHashCode();\n    const btnId = \"btn-\" + pageId + btn.toHashCode();\n    const contentEl = this.getContentElement();\n    contentEl.setAttribute(\"id\", pageId);\n    contentEl.setAttribute(\"role\", \"tabpanel\");\n    contentEl.setAttribute(\"aria-labelledBy\", btnId);\n    contentEl.setAttribute(\"aria-expanded\", false);\n\n    const btnContentEl = btn.getContentElement();\n    btnContentEl.setAttribute(\"id\", btnId);\n    btnContentEl.setAttribute(\"role\", \"tab\");\n    btnContentEl.setAttribute(\"aria-selected\", false);\n    btnContentEl.setAttribute(\"aria-controls\", pageId);\n    btn.addListener(\"changeValue\", this._onBtnChangeValue, this);\n  },\n\n  /*\n  *****************************************************************************\n     EVENTS\n  *****************************************************************************\n  */\n\n  events: {\n    /**\n     * Fired by {@link qx.ui.tabview.TabButton} if the close button is tapped.\n     */\n    close: \"qx.event.type.Event\"\n  },\n\n  /*\n  *****************************************************************************\n     PROPERTIES\n  *****************************************************************************\n  */\n\n  properties: {\n    // overridden\n    appearance: {\n      refine: true,\n      init: \"tabview-page\"\n    },\n\n    /** The label/caption/text of the Page's button. */\n    label: {\n      check: \"String\",\n      init: \"\",\n      apply: \"_applyLabel\"\n    },\n\n    /** Any URI String supported by qx.ui.basic.Image to display an icon in Page's button. */\n    icon: {\n      check: \"String\",\n      init: \"\",\n      apply: \"_applyIcon\",\n      nullable: true\n    },\n\n    /** Indicates if the close button of a TabButton should be shown. */\n    showCloseButton: {\n      check: \"Boolean\",\n      init: false,\n      apply: \"_applyShowCloseButton\"\n    },\n\n    /** Allows the tab to be excluded from the display */\n    tabVisibility: {\n      init: \"visible\",\n      check: [\"visible\", \"excluded\"],\n      nullable: false,\n      apply: \"_applyTabVisibility\",\n      event: \"changeTabVisibility\"\n    }\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n  /* eslint-disable @qooxdoo/qx/no-refs-in-members */\n\n  members: {\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    /**\n     * @lint ignoreReferenceField(_forwardStates)\n     */\n    _forwardStates: {\n      barTop: 1,\n      barRight: 1,\n      barBottom: 1,\n      barLeft: 1,\n      firstTab: 1,\n      lastTab: 1\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      APPLY ROUTINES\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyIcon(value, old) {\n      var btn = this.getChildControl(\"button\");\n      if (value) {\n        btn.setIcon(value);\n        btn._showChildControl(\"icon\");\n      } else {\n        btn._excludeChildControl(\"icon\");\n      }\n    },\n\n    // property apply\n    _applyLabel(value, old) {\n      this.getChildControl(\"button\").setLabel(value);\n    },\n\n    // overridden\n    _applyEnabled(value, old) {\n      super._applyEnabled(value, old);\n\n      // delegate to non-child widget button\n      // since enabled is inheritable value may be null\n      var btn = this.getChildControl(\"button\");\n      value == null ? btn.resetEnabled() : btn.setEnabled(value);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      WIDGET API\n    ---------------------------------------------------------------------------\n    */\n\n    // overridden\n    _createChildControlImpl(id, hash) {\n      var control;\n\n      switch (id) {\n        case \"button\":\n          control = new qx.ui.tabview.TabButton();\n          control.setAllowGrowX(true);\n          control.setAllowGrowY(true);\n\n          control.setUserData(\"page\", this);\n          control.addListener(\"close\", this._onButtonClose, this);\n          control.setVisibility(this.getTabVisibility());\n          break;\n      }\n\n      return control || super._createChildControlImpl(id);\n    },\n\n    /**\n     * Tab Change Listener\n     * @param {*} e\n     */\n    _onBtnChangeValue(e) {\n      const val = e.getData();\n      this.getContentElement().setAttribute(\"aria-expanded\", val, true); // Set third argument to true -> direct Update\n      this.getButton().getContentElement().setAttribute(\"aria-selected\", val);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PROPERTY APPLY\n    ---------------------------------------------------------------------------\n    */\n\n    // property apply\n    _applyShowCloseButton(value, old) {\n      this.getChildControl(\"button\").setShowCloseButton(value);\n    },\n\n    // property apply\n    _applyTabVisibility(newValue, oldValue) {\n      this.getButton().setVisibility(newValue);\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      EVENT LISTENERS\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Fires an \"close\" event when the close button of the TabButton of the page\n     * is tapped.\n     */\n    _onButtonClose() {\n      this.fireEvent(\"close\");\n    },\n\n    /*\n    ---------------------------------------------------------------------------\n      PUBLIC API\n    ---------------------------------------------------------------------------\n    */\n\n    /**\n     * Returns the button used within this page. This method is used by\n     * the TabView to access the button.\n     *\n     * @return {qx.ui.form.RadioButton} The button associated with this page.\n     */\n    getButton() {\n      return this.getChildControl(\"button\");\n    }\n  }\n});\n"
  ]
}