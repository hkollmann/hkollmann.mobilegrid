{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/util/format/DateFormat.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "extend",
    "core",
    "Object",
    "implement",
    "util",
    "format",
    "IFormat",
    "construct",
    "locale",
    "__initialLocale",
    "__locale",
    "__format",
    "toString",
    "DateFormat",
    "ISO_MASKS",
    "__UTC",
    "Date",
    "getDateFormat",
    "getLocale",
    "getDateTimeFormat",
    "statics",
    "getDateInstance",
    "_dateInstance",
    "getDateTimeInstance",
    "_dateTimeInstance",
    "ASSUME_YEAR_2000_THRESHOLD",
    "isoDate",
    "isoTime",
    "isoDateTime",
    "isoDateTimeTz",
    "isoUtcDateTime",
    "AM_MARKER",
    "PM_MARKER",
    "members",
    "__parseFeed",
    "__parseRules",
    "__formatTree",
    "__fillNumber",
    "number",
    "minSize",
    "str",
    "length",
    "__getDayInYear",
    "date",
    "helpDate",
    "getTime",
    "day",
    "getDate",
    "getMonth",
    "setDate",
    "__thursdayOfSameWeek",
    "getDay",
    "__getWeekInYear",
    "thursdayDate",
    "weekYear",
    "getFullYear",
    "thursdayWeek1",
    "Math",
    "floor",
    "__getWeekInMonth",
    "__getWeekYear",
    "__isLeapYear",
    "year",
    "februaryDate",
    "__getMonthAndDayFromDayOfYear",
    "dayOfYear",
    "month",
    "dayCounter",
    "i",
    "tempDate",
    "days",
    "__getYearFromWeekYearAndMonth",
    "dayOfMonth",
    "setLocale",
    "value",
    "Error",
    "resetLocale",
    "undefined",
    "Manager",
    "getInstance",
    "getFormatString",
    "isNaN",
    "getUTCFullYear",
    "getUTCMonth",
    "getUTCDate",
    "getUTCHours",
    "getUTCMinutes",
    "getUTCSeconds",
    "getUTCMilliseconds",
    "fullYear",
    "dayOfWeek",
    "hours",
    "getHours",
    "minutes",
    "getMinutes",
    "seconds",
    "getSeconds",
    "ms",
    "getMilliseconds",
    "timezoneOffset",
    "getTimezoneOffset",
    "timezoneSign",
    "timezoneHours",
    "abs",
    "timezoneMinutes",
    "__initFormatTree",
    "output",
    "currAtom",
    "type",
    "text",
    "wildcardChar",
    "character",
    "wildcardSize",
    "size",
    "replacement",
    "j",
    "replace",
    "indexOf",
    "parseInt",
    "getDayName",
    "startOfWeek",
    "getWeekStart",
    "localeDayOfWeek",
    "getMonthName",
    "getAmMarker",
    "getPmMarker",
    "substr",
    "parse",
    "dateStr",
    "__initParseFeed",
    "hit",
    "regex",
    "exec",
    "dateValues",
    "era",
    "quarter",
    "hour",
    "ispm",
    "weekDay",
    "weekOfMonth",
    "weekOfYear",
    "min",
    "sec",
    "tzOffsetMins",
    "currGroup",
    "applyWeekYearAfterRule",
    "applyDayOfYearAfterRule",
    "usedRules",
    "rule",
    "field",
    "manipulator",
    "pattern",
    "yearRuleApplied",
    "k",
    "dayRuleApplied",
    "groups",
    "dayAndMonth",
    "utcMs",
    "UTC",
    "currWildcardChar",
    "currWildcardSize",
    "currLiteral",
    "state",
    "currChar",
    "charAt",
    "lookAhead",
    "push",
    "__initParseRules",
    "atomIdx",
    "lang",
    "String",
    "escapeRegexpChars",
    "wildcardRule",
    "ruleIdx",
    "__isRuleForWildcard",
    "wildcardStr",
    "RegExp",
    "exc",
    "regexFunc",
    "LString",
    "rules",
    "amMarker",
    "pmMarker",
    "yearManipulator",
    "weekYearManipulator",
    "monthManipulator",
    "localWeekDayManipulator",
    "ampmManipulator",
    "noZeroHourManipulator",
    "noZeroAmPmHourManipulator",
    "timezoneManipulator",
    "regEx",
    "tzResults",
    "offsetHours",
    "offsetMins",
    "narrowEraNames",
    "narrowEraNameManipulator",
    "abbrevEraNames",
    "abbrevEraNameManipulator",
    "fullEraNames",
    "fullEraNameManipulator",
    "abbrevQuarterNames",
    "abbrevQuarterManipulator",
    "fullQuarterNames",
    "fullQuarterManipulator",
    "cache",
    "dateNamesManipulator",
    "monthPatternLetters",
    "dayPatternLetters",
    "firstLetterInPattern",
    "isMonth",
    "getContext",
    "letters",
    "context",
    "patternLength",
    "lengthName",
    "func",
    "getMonthNames",
    "getDayNames",
    "names",
    "call",
    "l",
    "data",
    "yNumber",
    "join"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2006 STZ-IDA, Germany, http://www.stz-ida.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Til Schneider (til132)\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * A formatter and parser for dates, see\n * http://www.unicode.org/reports/tr35/#Date_Format_Patterns\n *\n * Here is a quick overview of the format pattern keys:\n * <table>\n * <tr><th>Key &nbsp;<th>Description\n * <tr><td><code> G </code><td> era, e.g. \"AD\"\n * <tr><td><code> y </code><td> year\n * <tr><td><code> Y </code><td> week year\n * <tr><td><code> u </code><td> extended year [Not supported yet]\n * <tr><td><code> Q </code><td> quarter\n * <tr><td><code> q </code><td> stand-alone quarter\n * <tr><td><code> M </code><td> month\n * <tr><td><code> L </code><td> stand-alone month\n * <tr><td><code> I </code><td> chinese leap month [Not supported yet]\n * <tr><td><code> w </code><td> week of year\n * <tr><td><code> W </code><td> week of month\n * <tr><td><code> d </code><td> day of month\n * <tr><td><code> D </code><td> day of year\n * <tr><td><code> F </code><td> day of week in month [Not supported yet]\n * <tr><td><code> g </code><td> modified Julian day [Not supported yet]\n * <tr><td><code> E </code><td> day of week\n * <tr><td><code> e </code><td> local day of week\n * <tr><td><code> c </code><td> stand-alone local day of week\n * <tr><td><code> a </code><td> period of day (am or pm)\n * <tr><td><code> h </code><td> 12-hour hour\n * <tr><td><code> H </code><td> 24-hour hour\n * <tr><td><code> K </code><td> hour [0-11]\n * <tr><td><code> k </code><td> hour [1-24]\n * <tr><td><code> j </code><td> special symbol [Not supported yet]\n * <tr><td><code> m </code><td> minute\n * <tr><td><code> s </code><td> second\n * <tr><td><code> S </code><td> fractional second\n * <tr><td><code> A </code><td> millisecond in day [Not supported yet]\n * <tr><td><code> z </code><td> time zone, specific non-location format\n * <tr><td><code> Z </code><td> time zone, rfc822/gmt format\n * <tr><td><code> v </code><td> time zone, generic non-location format [Not supported yet]\n * <tr><td><code> V </code><td> time zone, like z except metazone abbreviations [Not supported yet]\n * </table>\n *\n * (This list is preliminary, not all format keys might be implemented). Most\n * keys support repetitions that influence the meaning of the format. Parts of the\n * format string that should not be interpreted as format keys have to be\n * single-quoted.\n *\n * The same format patterns will be used for both parsing and output formatting.\n *\n * NOTE: Instances of this class must be disposed of after use\n *\n */\nqx.Class.define(\"qx.util.format.DateFormat\", {\n  extend: qx.core.Object,\n  implement: [qx.util.format.IFormat],\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param format {String|null} The format to use. If null, the locale's default\n   * format is used.\n   * @param locale {String?} optional locale to be used. In case this is not present, the {@link #locale} property of DateFormat\n   * will be following the {@link qx.locale.Manager#locale} property of qx.locale.Manager\n   */\n  construct(format, locale) {\n    super();\n\n    this.__initialLocale = this.__locale = locale;\n\n    if (format != null) {\n      this.__format = format.toString();\n      if (this.__format in qx.util.format.DateFormat.ISO_MASKS) {\n        if (this.__format === \"isoUtcDateTime\") {\n          this.__UTC = true;\n        }\n        this.__format = qx.util.format.DateFormat.ISO_MASKS[this.__format];\n      }\n    } else {\n      this.__format =\n        qx.locale.Date.getDateFormat(\"long\", this.getLocale()) +\n        \" \" +\n        qx.locale.Date.getDateTimeFormat(\n          \"HHmmss\",\n          \"HH:mm:ss\",\n          this.getLocale()\n        );\n    }\n  },\n\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * Convenience factory that returns a <code>DateFomat</code> instance that\n     * uses a short date-only format. Beware that the overall layout of the\n     * date/time format string is that of the locale in effect when the factory\n     * function is called.\n     *\n     * Implemented as a quasi-singleton, so beware of side effects.\n     *\n     * @return {DateFormat} a DateFormat instance.\n     */\n    getDateInstance() {\n      var DateFormat = qx.util.format.DateFormat;\n\n      var format = qx.locale.Date.getDateFormat(\"short\") + \"\";\n\n      // Memoizing the instance, so caller doesn't have to dispose it.\n      if (\n        DateFormat._dateInstance == null ||\n        DateFormat._dateInstance.__format != format\n      ) {\n        DateFormat._dateInstance = new DateFormat(format);\n      }\n\n      return DateFormat._dateInstance;\n    },\n\n    /**\n     * Convenience factory that returns a <code>DateFomat</code> instance that\n     * uses a long date/time format. Beware that the overall layout of the\n     * date/time format string is that of the locale in effect when the factory\n     * function is called.\n     *\n     * Implemented as a quasi-singleton, so beware of side effects.\n     *\n     * @return {DateFormat} a DateFormat instance.\n     */\n    getDateTimeInstance() {\n      var DateFormat = qx.util.format.DateFormat;\n\n      var format =\n        qx.locale.Date.getDateFormat(\"long\") +\n        \" \" +\n        qx.locale.Date.getDateTimeFormat(\"HHmmss\", \"HH:mm:ss\");\n\n      // Memoizing the instance, so caller doesn't have to dispose it.\n      if (\n        DateFormat._dateTimeInstance == null ||\n        DateFormat._dateTimeInstance.__format != format\n      ) {\n        DateFormat._dateTimeInstance = new DateFormat(format);\n      }\n\n      return DateFormat._dateTimeInstance;\n    },\n\n    /**\n     * @type {Integer} The threshold until when a year should be assumed to belong to the\n     *   21st century (e.g. 12 -> 2012). Years over this threshold but below 100 will be\n     *   assumed to belong to the 20th century (e.g. 88 -> 1988). Years over 100 will be\n     *   used unchanged (e.g. 1792 -> 1792).\n     */\n    ASSUME_YEAR_2000_THRESHOLD: 30,\n\n    /** @type {Map} Special masks of patterns that are used frequently*/\n    ISO_MASKS: {\n      isoDate: \"yyyy-MM-dd\",\n      isoTime: \"HH:mm:ss\",\n      isoDateTime: \"yyyy-MM-dd'T'HH:mm:ss\",\n      isoDateTimeTz: \"yyyy-MM-dd'T'HH:mm:ssZ\",\n      isoUtcDateTime: \"yyyy-MM-dd'T'HH:mm:ss'Z'\"\n    },\n\n    /** @type {String} The am marker. */\n    AM_MARKER: \"am\",\n\n    /** @type {String} The pm marker. */\n    PM_MARKER: \"pm\"\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __locale: null,\n    __initialLocale: null,\n    __format: null,\n    __parseFeed: null,\n    __parseRules: null,\n    __formatTree: null,\n    __UTC: null,\n\n    /**\n     * Fills a number with leading zeros (\"25\" -> \"0025\").\n     *\n     * @param number {Integer} the number to fill.\n     * @param minSize {Integer} the minimum size the returned string should have.\n     * @return {String} the filled number as string.\n     */\n    __fillNumber(number, minSize) {\n      var str = \"\" + (number < 0 ? -1 * number : number);\n\n      while (str.length < minSize) {\n        str = \"0\" + str;\n      }\n\n      return number < 0 ? \"-\" + str : str;\n    },\n\n    /**\n     * Returns the day in year of a date.\n     *\n     * @param date {Date} the date.\n     * @return {Integer} the day in year.\n     */\n    __getDayInYear(date) {\n      var helpDate = new Date(date.getTime());\n      var day = helpDate.getDate();\n\n      while (helpDate.getMonth() != 0) {\n        // Set the date to the last day of the previous month\n        helpDate.setDate(-1);\n        day += helpDate.getDate() + 1;\n      }\n\n      return day;\n    },\n\n    /**\n     * Returns the thursday in the same week as the date.\n     *\n     * @param date {Date} the date to get the thursday of.\n     * @return {Date} the thursday in the same week as the date.\n     */\n    __thursdayOfSameWeek(date) {\n      return new Date(\n        date.getTime() + (3 - ((date.getDay() + 6) % 7)) * 86400000\n      );\n    },\n\n    /**\n     * Returns the week in year of a date.\n     *\n     * @param date {Date} the date to get the week in year of.\n     * @return {Integer} the week in year.\n     */\n    __getWeekInYear(date) {\n      // The following algorithm comes from http://www.salesianer.de/util/kalwoch.html\n      // Get the thursday of the week the date belongs to\n      var thursdayDate = this.__thursdayOfSameWeek(date);\n\n      // Get the year the thursday (and therefore the week) belongs to\n      var weekYear = thursdayDate.getFullYear();\n\n      // Get the thursday of the week january 4th belongs to\n      // (which defines week 1 of a year)\n      var thursdayWeek1 = this.__thursdayOfSameWeek(new Date(weekYear, 0, 4));\n\n      // Calculate the calendar week\n      return Math.floor(\n        1.5 + (thursdayDate.getTime() - thursdayWeek1.getTime()) / 86400000 / 7\n      );\n    },\n\n    /**\n     * Returns the week in month of a date.\n     *\n     * @param date {Date} the date to get the week in year of.\n     * @return {Integer} the week in month.\n     */\n    __getWeekInMonth(date) {\n      var thursdayDate = this.__thursdayOfSameWeek(date);\n      var thursdayWeek1 = this.__thursdayOfSameWeek(\n        new Date(date.getFullYear(), date.getMonth(), 4)\n      );\n\n      return Math.floor(\n        1.5 + (thursdayDate.getTime() - thursdayWeek1.getTime()) / 86400000 / 7\n      );\n    },\n\n    /**\n     * Returns the week year of a date. (that is the year of the week where this date happens to be)\n     * For a week in the middle of the summer, the year is easily obtained, but for a week\n     * when New Year's Eve takes place, the year of that week is ambiguous.\n     * The thursday day of that week is used to determine the year.\n     *\n     * @param date {Date} the date to get the week in year of.\n     * @return {Integer} the week year.\n     */\n    __getWeekYear(date) {\n      var thursdayDate = this.__thursdayOfSameWeek(date);\n      return thursdayDate.getFullYear();\n    },\n\n    /**\n     * Returns true if the year is a leap one.\n     *\n     * @param year {Integer} the year to check.\n     * @return {Boolean} true if it is a leap year.\n     */\n    __isLeapYear(year) {\n      var februaryDate = new Date(year, 2, 1);\n      februaryDate.setDate(-1);\n      return februaryDate.getDate() + 1 === 29;\n    },\n\n    /**\n     * Returns a json object with month and day as keys.\n     *\n     * @param dayOfYear {Integer} the day of year.\n     * @param year {Integer} the year to check.\n     * @return {Object} a json object {month: M, day: D}.\n     */\n    __getMonthAndDayFromDayOfYear(dayOfYear, year) {\n      var month = 0;\n      var day = 0;\n      // if we don't know the year, we take a non-leap year'\n      if (!year) {\n        year = 1971;\n      }\n      var dayCounter = 0;\n      for (var i = 1; i <= 12; i++) {\n        var tempDate = new Date(year, i, 1);\n        tempDate.setDate(-1);\n        var days = tempDate.getDate() + 1;\n        dayCounter += days;\n        if (dayCounter < dayOfYear) {\n          month++;\n          day += days;\n        } else {\n          day = dayOfYear - (dayCounter - days);\n          break;\n        }\n      }\n\n      return { month: month, day: day };\n    },\n\n    /**\n     * Returns the year of a date when we know the week year\n     *\n     * @param weekYear {Integer} the week year.\n     * @param month {Integer} the month\n     * @param dayOfMonth {Integer} the day in month\n     * @return {Integer} the year.\n     */\n    __getYearFromWeekYearAndMonth(weekYear, month, dayOfMonth) {\n      var year;\n      switch (month) {\n        case 11:\n          year = weekYear - 1;\n          if (\n            weekYear != this.__getWeekYear(new Date(year, month, dayOfMonth))\n          ) {\n            year = weekYear;\n          }\n          break;\n        case 0:\n          year = weekYear + 1;\n          if (\n            weekYear != this.__getWeekYear(new Date(year, month, dayOfMonth))\n          ) {\n            year = weekYear;\n          }\n          break;\n        default:\n          year = weekYear;\n      }\n\n      return year;\n    },\n\n    /**\n     * Sets the new value for locale property\n     * @param value {String} The new value.\n     *\n     */\n    setLocale(value) {\n      if (value !== null && typeof value != \"string\") {\n        throw new Error(\n          \"Cannot set locale to \" + value + \" - please provide a string\"\n        );\n      }\n      this.__locale = value === null ? this.__initialLocale : value;\n    },\n\n    /**\n     * Resets the Locale\n     */\n    resetLocale() {\n      this.setLocale(null);\n    },\n\n    /**\n     * Returns the locale\n     */\n    getLocale() {\n      var locale = this.__locale;\n      if (locale === undefined) {\n        locale = qx.locale.Manager.getInstance().getLocale();\n      }\n      return locale;\n    },\n\n    /**\n     * Returns the original format string\n     *\n     * @return {String}\n     */\n    getFormatString() {\n      return this.__format;\n    },\n\n    /**\n     * Formats a date.\n     *\n     * @param date {Date} The date to format.\n     * @return {String} the formatted date.\n     */\n    format(date) {\n      // check for null dates\n      if (date == null) {\n        return null;\n      }\n\n      if (isNaN(date.getTime())) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          qx.log.Logger.error(\"Provided date is invalid\");\n        }\n        return null;\n      }\n\n      if (this.__UTC) {\n        date = new Date(\n          date.getUTCFullYear(),\n          date.getUTCMonth(),\n          date.getUTCDate(),\n          date.getUTCHours(),\n          date.getUTCMinutes(),\n          date.getUTCSeconds(),\n          date.getUTCMilliseconds()\n        );\n      }\n\n      var locale = this.getLocale();\n\n      var fullYear = date.getFullYear();\n      var month = date.getMonth();\n      var dayOfMonth = date.getDate();\n      var dayOfWeek = date.getDay();\n      var hours = date.getHours();\n      var minutes = date.getMinutes();\n      var seconds = date.getSeconds();\n      var ms = date.getMilliseconds();\n\n      var timezoneOffset = date.getTimezoneOffset();\n      var timezoneSign = timezoneOffset > 0 ? 1 : -1;\n      var timezoneHours = Math.floor(Math.abs(timezoneOffset) / 60);\n      var timezoneMinutes = Math.abs(timezoneOffset) % 60;\n\n      // Create the output\n      this.__initFormatTree();\n      var output = \"\";\n\n      for (var i = 0; i < this.__formatTree.length; i++) {\n        var currAtom = this.__formatTree[i];\n\n        if (currAtom.type == \"literal\") {\n          output += currAtom.text;\n        } else {\n          // This is a wildcard\n          var wildcardChar = currAtom.character;\n          var wildcardSize = currAtom.size;\n\n          // Get its replacement\n          var replacement = \"?\";\n\n          switch (wildcardChar) {\n            case \"y\": // Year\n              if (wildcardSize == 2) {\n                replacement = this.__fillNumber(fullYear % 100, 2);\n              } else {\n                var year = Math.abs(fullYear);\n                replacement = year + \"\";\n                if (wildcardSize > replacement.length) {\n                  for (var j = replacement.length; j < wildcardSize; j++) {\n                    replacement = \"0\" + replacement;\n                  }\n                }\n                if (fullYear < 0) {\n                  replacement = \"-\" + replacement;\n                }\n              }\n\n              break;\n\n            case \"Y\": // Year\n              replacement = this.__getWeekYear(date) + \"\";\n              var year = replacement.replace(\"-\", \"\");\n              if (wildcardSize > replacement.length) {\n                for (var j = year.length; j < wildcardSize; j++) {\n                  year = \"0\" + year;\n                }\n              }\n              replacement = replacement.indexOf(\"-\") != -1 ? \"-\" + year : year;\n\n              break;\n\n            case \"G\": // Era - there is no CLDR data for ERA yet\n              if (wildcardSize >= 1 && wildcardSize <= 3) {\n                replacement = fullYear > 0 ? \"AD\" : \"BC\";\n              } else if (wildcardSize == 4) {\n                replacement = fullYear > 0 ? \"Anno Domini\" : \"Before Christ\";\n              } else if (wildcardSize == 5) {\n                replacement = fullYear > 0 ? \"A\" : \"B\";\n              }\n\n              break;\n\n            case \"Q\": // quarter\n              if (wildcardSize == 1 || wildcardSize == 2) {\n                replacement = this.__fillNumber(\n                  parseInt(month / 4) + 1,\n                  wildcardSize\n                );\n              }\n              if (wildcardSize == 3) {\n                replacement = \"Q\" + (parseInt(month / 4) + 1);\n              }\n\n              break;\n\n            case \"q\": // quarter stand alone\n              if (wildcardSize == 1 || wildcardSize == 2) {\n                replacement = this.__fillNumber(\n                  parseInt(month / 4) + 1,\n                  wildcardSize\n                );\n              }\n              if (wildcardSize == 3) {\n                replacement = \"Q\" + (parseInt(month / 4) + 1);\n              }\n\n              break;\n\n            case \"D\": // Day in year (e.g. 189)\n              replacement = this.__fillNumber(\n                this.__getDayInYear(date),\n                wildcardSize\n              );\n\n              break;\n\n            case \"d\": // Day in month\n              replacement = this.__fillNumber(dayOfMonth, wildcardSize);\n              break;\n\n            case \"w\": // Week in year (e.g. 27)\n              replacement = this.__fillNumber(\n                this.__getWeekInYear(date),\n                wildcardSize\n              );\n\n              break;\n\n            case \"W\": // Week in year (e.g. 27)\n              replacement = this.__getWeekInMonth(date);\n              break;\n\n            case \"E\": // Day in week\n              if (wildcardSize >= 1 && wildcardSize <= 3) {\n                replacement = qx.locale.Date.getDayName(\n                  \"abbreviated\",\n                  dayOfWeek,\n                  locale,\n                  \"format\",\n                  true\n                );\n              } else if (wildcardSize == 4) {\n                replacement = qx.locale.Date.getDayName(\n                  \"wide\",\n                  dayOfWeek,\n                  locale,\n                  \"format\",\n                  true\n                );\n              } else if (wildcardSize == 5) {\n                replacement = qx.locale.Date.getDayName(\n                  \"narrow\",\n                  dayOfWeek,\n                  locale,\n                  \"format\",\n                  true\n                );\n              }\n\n              break;\n\n            case \"e\": // Day in week\n              var startOfWeek = qx.locale.Date.getWeekStart(locale);\n              // the index is 1 based\n              var localeDayOfWeek =\n                1 +\n                (dayOfWeek - startOfWeek >= 0\n                  ? dayOfWeek - startOfWeek\n                  : 7 + (dayOfWeek - startOfWeek));\n              if (wildcardSize >= 1 && wildcardSize <= 2) {\n                replacement = this.__fillNumber(localeDayOfWeek, wildcardSize);\n              } else if (wildcardSize == 3) {\n                replacement = qx.locale.Date.getDayName(\n                  \"abbreviated\",\n                  dayOfWeek,\n                  locale,\n                  \"format\",\n                  true\n                );\n              } else if (wildcardSize == 4) {\n                replacement = qx.locale.Date.getDayName(\n                  \"wide\",\n                  dayOfWeek,\n                  locale,\n                  \"format\",\n                  true\n                );\n              } else if (wildcardSize == 5) {\n                replacement = qx.locale.Date.getDayName(\n                  \"narrow\",\n                  dayOfWeek,\n                  locale,\n                  \"format\",\n                  true\n                );\n              }\n\n              break;\n\n            case \"c\": // Stand-alone local day in week\n              var startOfWeek = qx.locale.Date.getWeekStart(locale);\n              // the index is 1 based\n              var localeDayOfWeek =\n                1 +\n                (dayOfWeek - startOfWeek >= 0\n                  ? dayOfWeek - startOfWeek\n                  : 7 + (dayOfWeek - startOfWeek));\n              if (wildcardSize == 1) {\n                replacement = \"\" + localeDayOfWeek;\n              } else if (wildcardSize == 3) {\n                replacement = qx.locale.Date.getDayName(\n                  \"abbreviated\",\n                  dayOfWeek,\n                  locale,\n                  \"stand-alone\",\n                  true\n                );\n              } else if (wildcardSize == 4) {\n                replacement = qx.locale.Date.getDayName(\n                  \"wide\",\n                  dayOfWeek,\n                  locale,\n                  \"stand-alone\",\n                  true\n                );\n              } else if (wildcardSize == 5) {\n                replacement = qx.locale.Date.getDayName(\n                  \"narrow\",\n                  dayOfWeek,\n                  locale,\n                  \"stand-alone\",\n                  true\n                );\n              }\n\n              break;\n\n            case \"M\": // Month\n              if (wildcardSize == 1 || wildcardSize == 2) {\n                replacement = this.__fillNumber(month + 1, wildcardSize);\n              } else if (wildcardSize == 3) {\n                replacement = qx.locale.Date.getMonthName(\n                  \"abbreviated\",\n                  month,\n                  locale,\n                  \"format\",\n                  true\n                );\n              } else if (wildcardSize == 4) {\n                replacement = qx.locale.Date.getMonthName(\n                  \"wide\",\n                  month,\n                  locale,\n                  \"format\",\n                  true\n                );\n              } else if (wildcardSize == 5) {\n                replacement = qx.locale.Date.getMonthName(\n                  \"narrow\",\n                  month,\n                  locale,\n                  \"format\",\n                  true\n                );\n              }\n\n              break;\n\n            case \"L\": // Stand-alone month\n              if (wildcardSize == 1 || wildcardSize == 2) {\n                replacement = this.__fillNumber(month + 1, wildcardSize);\n              } else if (wildcardSize == 3) {\n                replacement = qx.locale.Date.getMonthName(\n                  \"abbreviated\",\n                  month,\n                  locale,\n                  \"stand-alone\",\n                  true\n                );\n              } else if (wildcardSize == 4) {\n                replacement = qx.locale.Date.getMonthName(\n                  \"wide\",\n                  month,\n                  locale,\n                  \"stand-alone\",\n                  true\n                );\n              } else if (wildcardSize == 5) {\n                replacement = qx.locale.Date.getMonthName(\n                  \"narrow\",\n                  month,\n                  locale,\n                  \"stand-alone\",\n                  true\n                );\n              }\n\n              break;\n\n            case \"a\": // am/pm marker\n              // NOTE: 0:00 is am, 12:00 is pm\n              replacement =\n                hours < 12\n                  ? qx.locale.Date.getAmMarker(locale)\n                  : qx.locale.Date.getPmMarker(locale);\n              break;\n\n            case \"H\": // Hour in day (0-23)\n              replacement = this.__fillNumber(hours, wildcardSize);\n              break;\n\n            case \"k\": // Hour in day (1-24)\n              replacement = this.__fillNumber(\n                hours == 0 ? 24 : hours,\n                wildcardSize\n              );\n\n              break;\n\n            case \"K\": // Hour in am/pm (0-11)\n              replacement = this.__fillNumber(hours % 12, wildcardSize);\n              break;\n\n            case \"h\": // Hour in am/pm (1-12)\n              replacement = this.__fillNumber(\n                hours % 12 == 0 ? 12 : hours % 12,\n                wildcardSize\n              );\n\n              break;\n\n            case \"m\": // Minute in hour\n              replacement = this.__fillNumber(minutes, wildcardSize);\n              break;\n\n            case \"s\": // Second in minute\n              replacement = this.__fillNumber(seconds, wildcardSize);\n              break;\n\n            case \"S\": // Fractional second\n              replacement = this.__fillNumber(ms, 3);\n              if (wildcardSize < replacement.length) {\n                replacement = replacement.substr(0, wildcardSize);\n              } else {\n                while (wildcardSize > replacement.length) {\n                  // if needed, fill the remaining wildcard length with trailing zeros\n                  replacement += \"0\";\n                }\n              }\n              break;\n\n            case \"z\": // Time zone\n              if (wildcardSize >= 1 && wildcardSize <= 4) {\n                replacement =\n                  \"GMT\" +\n                  (timezoneSign > 0 ? \"-\" : \"+\") +\n                  this.__fillNumber(Math.abs(timezoneHours), 2) +\n                  \":\" +\n                  this.__fillNumber(timezoneMinutes, 2);\n              }\n\n              break;\n\n            case \"Z\": // RFC 822 time zone\n              if (wildcardSize >= 1 && wildcardSize <= 3) {\n                replacement =\n                  (timezoneSign > 0 ? \"-\" : \"+\") +\n                  this.__fillNumber(Math.abs(timezoneHours), 2) +\n                  this.__fillNumber(timezoneMinutes, 2);\n              } else {\n                replacement =\n                  \"GMT\" +\n                  (timezoneSign > 0 ? \"-\" : \"+\") +\n                  this.__fillNumber(Math.abs(timezoneHours), 2) +\n                  \":\" +\n                  this.__fillNumber(timezoneMinutes, 2);\n              }\n              break;\n          }\n\n          output += replacement;\n        }\n      }\n\n      return output;\n    },\n\n    /**\n     * Parses a date.\n     *\n     * @param dateStr {String} the date to parse.\n     * @return {Date} the parsed date.\n     * @throws {Error} If the format is not well formed or if the date string does not\n     *       match to the format.\n     */\n    parse(dateStr) {\n      this.__initParseFeed();\n\n      // Apply the regex\n      var hit = this.__parseFeed.regex.exec(dateStr);\n\n      if (hit == null) {\n        throw new Error(\n          \"Date string '\" +\n            dateStr +\n            \"' does not match the date format: \" +\n            this.__format\n        );\n      }\n\n      // Apply the rules\n      var dateValues = {\n        era: 1,\n        year: 1970,\n        quarter: 1,\n        month: 0,\n        day: 1,\n        dayOfYear: 1,\n        hour: 0,\n        ispm: false,\n        weekDay: 4,\n        weekYear: 1970,\n        weekOfMonth: 1,\n        weekOfYear: 1,\n        min: 0,\n        sec: 0,\n        ms: 0,\n        tzOffsetMins: null\n      };\n\n      var currGroup = 1;\n      var applyWeekYearAfterRule = false;\n      var applyDayOfYearAfterRule = false;\n\n      for (var i = 0; i < this.__parseFeed.usedRules.length; i++) {\n        var rule = this.__parseFeed.usedRules[i];\n\n        var value = hit[currGroup];\n\n        if (rule.field != null) {\n          dateValues[rule.field] = parseInt(value, 10);\n        } else {\n          rule.manipulator(dateValues, value, rule.pattern);\n        }\n\n        if (rule.pattern == \"Y+\") {\n          var yearRuleApplied = false;\n          for (var k = 0; k < this.__parseFeed.usedRules.length; k++) {\n            if (this.__parseFeed.usedRules[k].pattern == \"y+\") {\n              yearRuleApplied = true;\n              break;\n            }\n          }\n          if (!yearRuleApplied) {\n            applyWeekYearAfterRule = true;\n          }\n        }\n\n        if (rule.pattern.indexOf(\"D\") != -1) {\n          var dayRuleApplied = false;\n          for (var k = 0; k < this.__parseFeed.usedRules.length; k++) {\n            if (this.__parseFeed.usedRules[k].pattern.indexOf(\"d\") != -1) {\n              dayRuleApplied = true;\n              break;\n            }\n          }\n          if (!dayRuleApplied) {\n            applyDayOfYearAfterRule = true;\n          }\n        }\n\n        currGroup += rule.groups == null ? 1 : rule.groups;\n      }\n      if (applyWeekYearAfterRule) {\n        dateValues.year = this.__getYearFromWeekYearAndMonth(\n          dateValues.weekYear,\n          dateValues.month,\n          dateValues.day\n        );\n      }\n\n      if (applyDayOfYearAfterRule) {\n        var dayAndMonth = this.__getMonthAndDayFromDayOfYear(\n          dateValues.dayOfYear,\n          dateValues.year\n        );\n\n        dateValues.month = dayAndMonth.month;\n        dateValues.day = dayAndMonth.day;\n      }\n\n      if (dateValues.era < 0 && dateValues.year * dateValues.era < 0) {\n        dateValues.year = dateValues.year * dateValues.era;\n      }\n\n      var date;\n      if (this.__UTC || dateValues.tzOffsetMins !== null) {\n        var utcMs = Date.UTC(\n          dateValues.year,\n          dateValues.month,\n          dateValues.day,\n          dateValues.ispm ? dateValues.hour + 12 : dateValues.hour,\n          dateValues.min,\n          dateValues.sec,\n          dateValues.ms\n        );\n\n        if (dateValues.tzOffsetMins !== 0) {\n          utcMs += dateValues.tzOffsetMins * 60000;\n        }\n        date = new Date(utcMs);\n        if (\n          this.__UTC &&\n          (dateValues.month !== date.getUTCMonth() ||\n            dateValues.year !== date.getUTCFullYear())\n        ) {\n          throw new Error(\n            \"Error parsing date '\" +\n              dateStr +\n              \"': the value for day or month is too large\"\n          );\n        }\n      } else {\n        date = new Date(\n          dateValues.year,\n          dateValues.month,\n          dateValues.day,\n          dateValues.ispm ? dateValues.hour + 12 : dateValues.hour,\n          dateValues.min,\n          dateValues.sec,\n          dateValues.ms\n        );\n\n        if (\n          dateValues.month !== date.getMonth() ||\n          dateValues.year !== date.getFullYear()\n        ) {\n          throw new Error(\n            \"Error parsing date '\" +\n              dateStr +\n              \"': the value for day or month is too large\"\n          );\n        }\n      }\n\n      return date;\n    },\n\n    /**\n     * Helper method for {@link #format()} and {@link #parse()}.\n     * Parses the date format.\n     *\n     */\n    __initFormatTree() {\n      if (this.__formatTree != null) {\n        return;\n      }\n\n      this.__formatTree = [];\n\n      var currWildcardChar;\n      var currWildcardSize = 0;\n      var currLiteral = \"\";\n      var format = this.__format;\n\n      var state = \"default\";\n\n      var i = 0;\n\n      while (i < format.length) {\n        var currChar = format.charAt(i);\n\n        switch (state) {\n          case \"quoted_literal\":\n            // We are now inside a quoted literal\n            // Check whether the current character is an escaped \"'\" character\n            if (currChar == \"'\") {\n              if (i + 1 >= format.length) {\n                // this is the last character\n                i++;\n\n                break;\n              }\n\n              var lookAhead = format.charAt(i + 1);\n\n              if (lookAhead == \"'\") {\n                currLiteral += currChar;\n                i++;\n              } else {\n                // quoted literal ends\n                i++;\n\n                state = \"unkown\";\n              }\n            } else {\n              currLiteral += currChar;\n              i++;\n            }\n\n            break;\n\n          case \"wildcard\":\n            // Check whether the currChar belongs to that wildcard\n            if (currChar == currWildcardChar) {\n              // It does -> Raise the size\n              currWildcardSize++;\n\n              i++;\n            } else {\n              // It does not -> The current wildcard is done\n              this.__formatTree.push({\n                type: \"wildcard\",\n                character: currWildcardChar,\n                size: currWildcardSize\n              });\n\n              currWildcardChar = null;\n              currWildcardSize = 0;\n              state = \"default\";\n            }\n\n            break;\n\n          default:\n            // We are not (any more) in a wildcard or quoted literal -> Check what's starting here\n            if (\n              (currChar >= \"a\" && currChar <= \"z\") ||\n              (currChar >= \"A\" && currChar <= \"Z\")\n            ) {\n              // This is a letter -> All letters are wildcards\n              // Start a new wildcard\n              currWildcardChar = currChar;\n              state = \"wildcard\";\n            } else if (currChar == \"'\") {\n              if (i + 1 >= format.length) {\n                // this is the last character\n                currLiteral += currChar;\n                i++;\n                break;\n              }\n\n              var lookAhead = format.charAt(i + 1);\n\n              if (lookAhead == \"'\") {\n                currLiteral += currChar;\n                i++;\n              }\n\n              i++;\n              state = \"quoted_literal\";\n            } else {\n              state = \"default\";\n            }\n\n            if (state != \"default\") {\n              // Add the literal\n              if (currLiteral.length > 0) {\n                this.__formatTree.push({\n                  type: \"literal\",\n                  text: currLiteral\n                });\n\n                currLiteral = \"\";\n              }\n            } else {\n              // This is an unquoted literal -> Add it to the current literal\n              currLiteral += currChar;\n              i++;\n            }\n\n            break;\n        }\n      }\n\n      // Add the last wildcard or literal\n      if (currWildcardChar != null) {\n        this.__formatTree.push({\n          type: \"wildcard\",\n          character: currWildcardChar,\n          size: currWildcardSize\n        });\n      } else if (currLiteral.length > 0) {\n        this.__formatTree.push({\n          type: \"literal\",\n          text: currLiteral\n        });\n      }\n    },\n\n    /**\n     * Initializes the parse feed.\n     *\n     * The parse contains everything needed for parsing: The regular expression\n     * (in compiled and uncompiled form) and the used rules.\n     *\n     * @throws {Error} If the date format is malformed.\n     */\n    __initParseFeed() {\n      if (this.__parseFeed != null) {\n        // We already have the parse feed\n        return;\n      }\n\n      var format = this.__format;\n\n      // Initialize the rules\n      this.__initParseRules();\n      this.__initFormatTree();\n\n      // Get the used rules and construct the regex pattern\n      var usedRules = [];\n      var pattern = \"^\";\n\n      for (var atomIdx = 0; atomIdx < this.__formatTree.length; atomIdx++) {\n        var currAtom = this.__formatTree[atomIdx];\n\n        if (currAtom.type == \"literal\") {\n          pattern += qx.lang.String.escapeRegexpChars(currAtom.text);\n        } else {\n          // This is a wildcard\n          var wildcardChar = currAtom.character;\n          var wildcardSize = currAtom.size;\n\n          // Get the rule for this wildcard\n          var wildcardRule;\n\n          for (var ruleIdx = 0; ruleIdx < this.__parseRules.length; ruleIdx++) {\n            var rule = this.__parseRules[ruleIdx];\n\n            if (this.__isRuleForWildcard(rule, wildcardChar, wildcardSize)) {\n              // We found the right rule for the wildcard\n              wildcardRule = rule;\n              break;\n            }\n          }\n\n          // Check the rule\n          if (wildcardRule == null) {\n            // We have no rule for that wildcard -> Malformed date format\n            var wildcardStr = \"\";\n\n            for (var i = 0; i < wildcardSize; i++) {\n              wildcardStr += wildcardChar;\n            }\n\n            throw new Error(\n              \"Malformed date format: \" +\n                format +\n                \". Wildcard \" +\n                wildcardStr +\n                \" is not supported\"\n            );\n          } else {\n            // Add the rule to the pattern\n            usedRules.push(wildcardRule);\n            pattern += wildcardRule.regex;\n          }\n        }\n      }\n\n      pattern += \"$\";\n\n      // Create the regex\n      var regex;\n\n      try {\n        regex = new RegExp(pattern);\n      } catch (exc) {\n        throw new Error(\"Malformed date format: \" + format);\n      }\n\n      // Create the this.__parseFeed\n      this.__parseFeed = {\n        regex: regex,\n        usedRules: usedRules,\n        pattern: pattern\n      };\n    },\n\n    /**\n     * Checks whether the rule matches the wildcard or not.\n     * @param rule {Object} the rule we try to match with the wildcard\n     * @param wildcardChar {String} the character in the wildcard\n     * @param wildcardSize {Integer} the number of  wildcardChar characters in the wildcard\n     * @return {Boolean} if the rule matches or not\n     */\n    __isRuleForWildcard(rule, wildcardChar, wildcardSize) {\n      if (wildcardChar === \"y\" && rule.pattern === \"y+\") {\n        rule.regex = rule.regexFunc(wildcardSize);\n        return true;\n      } else if (wildcardChar === \"Y\" && rule.pattern === \"Y+\") {\n        rule.regex = rule.regexFunc(wildcardSize);\n        return true;\n      } else {\n        return (\n          wildcardChar == rule.pattern.charAt(0) &&\n          wildcardSize == rule.pattern.length\n        );\n      }\n    },\n    /**\n     * Initializes the static parse rules.\n     *\n     */\n    __initParseRules() {\n      var DateFormat = qx.util.format.DateFormat;\n      var LString = qx.lang.String;\n\n      if (this.__parseRules != null) {\n        // The parse rules are already initialized\n        return;\n      }\n\n      var rules = (this.__parseRules = []);\n\n      var amMarker =\n        qx.locale.Date.getAmMarker(this.getLocale()).toString() ||\n        DateFormat.AM_MARKER;\n      var pmMarker =\n        qx.locale.Date.getPmMarker(this.getLocale()).toString() ||\n        DateFormat.PM_MARKER;\n      var locale = this.getLocale();\n\n      var yearManipulator = function (dateValues, value) {\n        value = parseInt(value, 10);\n\n        if (value >= 0) {\n          if (value < DateFormat.ASSUME_YEAR_2000_THRESHOLD) {\n            value += 2000;\n          } else if (value < 100) {\n            value += 1900;\n          }\n        }\n\n        dateValues.year = value;\n      };\n\n      var weekYearManipulator = function (dateValues, value) {\n        value = parseInt(value, 10);\n\n        if (value >= 0) {\n          if (value < DateFormat.ASSUME_YEAR_2000_THRESHOLD) {\n            value += 2000;\n          } else if (value < 100) {\n            value += 1900;\n          }\n        }\n\n        dateValues.weekYear = value;\n      };\n\n      var monthManipulator = function (dateValues, value) {\n        dateValues.month = parseInt(value, 10) - 1;\n      };\n\n      var localWeekDayManipulator = function (dateValues, value) {\n        var startOfWeek = qx.locale.Date.getWeekStart(locale);\n        var dayOfWeek =\n          parseInt(value, 10) - 1 + startOfWeek <= 6\n            ? parseInt(value, 10) - 1 + startOfWeek\n            : parseInt(value, 10) - 1 + startOfWeek - 7;\n        dateValues.weekDay = dayOfWeek;\n      };\n\n      var ampmManipulator = function (dateValues, value) {\n        var pmMarker =\n          qx.locale.Date.getPmMarker(locale).toString() || DateFormat.PM_MARKER;\n        dateValues.ispm = value == pmMarker;\n      };\n\n      var noZeroHourManipulator = function (dateValues, value) {\n        dateValues.hour = parseInt(value, 10) % 24;\n      };\n\n      var noZeroAmPmHourManipulator = function (dateValues, value) {\n        dateValues.hour = parseInt(value, 10) % 12;\n      };\n\n      var timezoneManipulator = function (dateValues, value) {\n        var regEx = new RegExp(\"([+-]?)(\\\\d\\\\d)(?::?(\\\\d\\\\d))?$\");\n        var tzResults = regEx.exec(value);\n        var offsetHours = parseInt(tzResults[2], 10);\n        var offsetMins = parseInt(tzResults[3], 10);\n        // basic check, hours range is -12 to +14 https://en.wikipedia.org/wiki/Category:UTC_offsets\n        if (offsetHours > 14) {\n          throw new Error(\"Invalid hours in time zone offset.\");\n        }\n        if (offsetMins > 59) {\n          throw new Error(\"Invalid minutes in time zone offset.\");\n        }\n        dateValues.tzOffsetMins = offsetHours * 60 + offsetMins;\n        if (tzResults[1] === \"-\") {\n          dateValues.tzOffsetMins = -dateValues.tzOffsetMins;\n        }\n      };\n\n      // var ignoreManipulator = function(dateValues, value) {\n      //   return;\n      // };\n\n      var narrowEraNames = [\"A\", \"B\"];\n      var narrowEraNameManipulator = function (dateValues, value) {\n        dateValues.era = value == \"A\" ? 1 : -1;\n      };\n\n      var abbrevEraNames = [\"AD\", \"BC\"];\n      var abbrevEraNameManipulator = function (dateValues, value) {\n        dateValues.era = value == \"AD\" ? 1 : -1;\n      };\n\n      var fullEraNames = [\"Anno Domini\", \"Before Christ\"];\n      var fullEraNameManipulator = function (dateValues, value) {\n        dateValues.era = value == \"Anno Domini\" ? 1 : -1;\n      };\n\n      var abbrevQuarterNames = [\"Q1\", \"Q2\", \"Q3\", \"Q4\"];\n      var abbrevQuarterManipulator = function (dateValues, value) {\n        dateValues.quarter = abbrevQuarterNames.indexOf(value);\n      };\n\n      var fullQuarterNames = [\n        \"1st quarter\",\n        \"2nd quarter\",\n        \"3rd quarter\",\n        \"4th quarter\"\n      ];\n\n      var fullQuarterManipulator = function (dateValues, value) {\n        dateValues.quarter = fullQuarterNames.indexOf(value);\n      };\n\n      var cache = {};\n\n      var dateNamesManipulator = function (pattern) {\n        var monthPatternLetters = [\"L\", \"M\"];\n        var dayPatternLetters = [\"c\", \"e\", \"E\"];\n        var firstLetterInPattern = pattern.charAt(0);\n        var isMonth = monthPatternLetters.indexOf(firstLetterInPattern) >= 0;\n\n        var getContext = function () {\n          var letters = isMonth ? monthPatternLetters : dayPatternLetters;\n          var context =\n            firstLetterInPattern === letters[0] ? \"stand-alone\" : \"format\";\n          var patternLength = pattern.length;\n          var lengthName = \"abbreviated\";\n          switch (patternLength) {\n            case 4:\n              lengthName = \"wide\";\n              break;\n            case 5:\n              lengthName = \"narrow\";\n              break;\n            default:\n              lengthName = \"abbreviated\";\n          }\n\n          return [context, lengthName];\n        };\n\n        if (!cache[pattern]) {\n          cache[pattern] = {};\n          var context = getContext();\n          var func = isMonth\n            ? qx.locale.Date.getMonthNames\n            : qx.locale.Date.getDayNames;\n          var names = func.call(\n            qx.locale.Date,\n            context[1],\n            locale,\n            context[0],\n            true\n          );\n\n          for (var i = 0, l = names.length; i < l; i++) {\n            names[i] = LString.escapeRegexpChars(names[i].toString());\n          }\n          cache[pattern].data = names;\n          cache[pattern].func = function (dateValues, value) {\n            value = LString.escapeRegexpChars(value);\n            dateValues[isMonth ? \"month\" : \"weekDay\"] = names.indexOf(value);\n          };\n        }\n\n        return cache[pattern];\n      };\n\n      // Unsupported: F (Day of week in month)\n\n      rules.push({\n        pattern: \"y+\",\n        regexFunc(yNumber) {\n          var regex = \"(-*\";\n          for (var i = 0; i < yNumber; i++) {\n            regex += \"\\\\d\";\n            if (i === yNumber - 1 && i !== 1) {\n              regex += \"+?\";\n            }\n          }\n          regex += \")\";\n          return regex;\n        },\n        manipulator: yearManipulator\n      });\n\n      rules.push({\n        pattern: \"Y+\",\n        regexFunc(yNumber) {\n          var regex = \"(-*\";\n          for (var i = 0; i < yNumber; i++) {\n            regex += \"\\\\d\";\n            if (i === yNumber - 1) {\n              regex += \"+?\";\n            }\n          }\n          regex += \")\";\n          return regex;\n        },\n        manipulator: weekYearManipulator\n      });\n\n      rules.push({\n        pattern: \"G\",\n        regex: \"(\" + abbrevEraNames.join(\"|\") + \")\",\n        manipulator: abbrevEraNameManipulator\n      });\n\n      rules.push({\n        pattern: \"GG\",\n        regex: \"(\" + abbrevEraNames.join(\"|\") + \")\",\n        manipulator: abbrevEraNameManipulator\n      });\n\n      rules.push({\n        pattern: \"GGG\",\n        regex: \"(\" + abbrevEraNames.join(\"|\") + \")\",\n        manipulator: abbrevEraNameManipulator\n      });\n\n      rules.push({\n        pattern: \"GGGG\",\n        regex: \"(\" + fullEraNames.join(\"|\") + \")\",\n        manipulator: fullEraNameManipulator\n      });\n\n      rules.push({\n        pattern: \"GGGGG\",\n        regex: \"(\" + narrowEraNames.join(\"|\") + \")\",\n        manipulator: narrowEraNameManipulator\n      });\n\n      rules.push({\n        pattern: \"Q\",\n        regex: \"(\\\\d\\\\d*?)\",\n        field: \"quarter\"\n      });\n\n      rules.push({\n        pattern: \"QQ\",\n        regex: \"(\\\\d\\\\d?)\",\n        field: \"quarter\"\n      });\n\n      rules.push({\n        pattern: \"QQQ\",\n        regex: \"(\" + abbrevQuarterNames.join(\"|\") + \")\",\n        manipulator: abbrevQuarterManipulator\n      });\n\n      rules.push({\n        pattern: \"QQQQ\",\n        regex: \"(\" + fullQuarterNames.join(\"|\") + \")\",\n        manipulator: fullQuarterManipulator\n      });\n\n      rules.push({\n        pattern: \"q\",\n        regex: \"(\\\\d\\\\d*?)\",\n        field: \"quarter\"\n      });\n\n      rules.push({\n        pattern: \"qq\",\n        regex: \"(\\\\d\\\\d?)\",\n        field: \"quarter\"\n      });\n\n      rules.push({\n        pattern: \"qqq\",\n        regex: \"(\" + abbrevQuarterNames.join(\"|\") + \")\",\n        manipulator: abbrevQuarterManipulator\n      });\n\n      rules.push({\n        pattern: \"qqqq\",\n        regex: \"(\" + fullQuarterNames.join(\"|\") + \")\",\n        manipulator: fullQuarterManipulator\n      });\n\n      rules.push({\n        pattern: \"M\",\n        regex: \"(\\\\d\\\\d*?)\",\n        manipulator: monthManipulator\n      });\n\n      rules.push({\n        pattern: \"MM\",\n        regex: \"(\\\\d\\\\d?)\",\n        manipulator: monthManipulator\n      });\n\n      rules.push({\n        pattern: \"MMM\",\n        regex: \"(\" + dateNamesManipulator(\"MMM\").data.join(\"|\") + \")\",\n        manipulator: dateNamesManipulator(\"MMM\").func\n      });\n\n      rules.push({\n        pattern: \"MMMM\",\n        regex: \"(\" + dateNamesManipulator(\"MMMM\").data.join(\"|\") + \")\",\n        manipulator: dateNamesManipulator(\"MMMM\").func\n      });\n\n      rules.push({\n        pattern: \"MMMMM\",\n        regex: \"(\" + dateNamesManipulator(\"MMMMM\").data.join(\"|\") + \")\",\n        manipulator: dateNamesManipulator(\"MMMMM\").func\n      });\n\n      rules.push({\n        pattern: \"L\",\n        regex: \"(\\\\d\\\\d*?)\",\n        manipulator: monthManipulator\n      });\n\n      rules.push({\n        pattern: \"LL\",\n        regex: \"(\\\\d\\\\d?)\",\n        manipulator: monthManipulator\n      });\n\n      rules.push({\n        pattern: \"LLL\",\n        regex: \"(\" + dateNamesManipulator(\"LLL\").data.join(\"|\") + \")\",\n        manipulator: dateNamesManipulator(\"LLL\").func\n      });\n\n      rules.push({\n        pattern: \"LLLL\",\n        regex: \"(\" + dateNamesManipulator(\"LLLL\").data.join(\"|\") + \")\",\n        manipulator: dateNamesManipulator(\"LLLL\").func\n      });\n\n      rules.push({\n        pattern: \"LLLLL\",\n        regex: \"(\" + dateNamesManipulator(\"LLLLL\").data.join(\"|\") + \")\",\n        manipulator: dateNamesManipulator(\"LLLLL\").func\n      });\n\n      rules.push({\n        pattern: \"dd\",\n        regex: \"(\\\\d\\\\d?)\",\n        field: \"day\"\n      });\n\n      rules.push({\n        pattern: \"d\",\n        regex: \"(\\\\d\\\\d*?)\",\n        field: \"day\"\n      });\n\n      rules.push({\n        pattern: \"D\",\n        regex: \"(\\\\d?)\",\n        field: \"dayOfYear\"\n      });\n\n      rules.push({\n        pattern: \"DD\",\n        regex: \"(\\\\d\\\\d?)\",\n        field: \"dayOfYear\"\n      });\n\n      rules.push({\n        pattern: \"DDD\",\n        regex: \"(\\\\d\\\\d\\\\d?)\",\n        field: \"dayOfYear\"\n      });\n\n      rules.push({\n        pattern: \"E\",\n        regex: \"(\" + dateNamesManipulator(\"E\").data.join(\"|\") + \")\",\n        manipulator: dateNamesManipulator(\"E\").func\n      });\n\n      rules.push({\n        pattern: \"EE\",\n        regex: \"(\" + dateNamesManipulator(\"EE\").data.join(\"|\") + \")\",\n        manipulator: dateNamesManipulator(\"EE\").func\n      });\n\n      rules.push({\n        pattern: \"EEE\",\n        regex: \"(\" + dateNamesManipulator(\"EEE\").data.join(\"|\") + \")\",\n        manipulator: dateNamesManipulator(\"EEE\").func\n      });\n\n      rules.push({\n        pattern: \"EEEE\",\n        regex: \"(\" + dateNamesManipulator(\"EEEE\").data.join(\"|\") + \")\",\n        manipulator: dateNamesManipulator(\"EEEE\").func\n      });\n\n      rules.push({\n        pattern: \"EEEEE\",\n        regex: \"(\" + dateNamesManipulator(\"EEEEE\").data.join(\"|\") + \")\",\n        manipulator: dateNamesManipulator(\"EEEEE\").func\n      });\n\n      rules.push({\n        pattern: \"e\",\n        regex: \"(\\\\d?)\",\n        manipulator: localWeekDayManipulator\n      });\n\n      rules.push({\n        pattern: \"ee\",\n        regex: \"(\\\\d\\\\d?)\",\n        manipulator: localWeekDayManipulator\n      });\n\n      rules.push({\n        pattern: \"eee\",\n        regex: \"(\" + dateNamesManipulator(\"eee\").data.join(\"|\") + \")\",\n        manipulator: dateNamesManipulator(\"eee\").func\n      });\n\n      rules.push({\n        pattern: \"eeee\",\n        regex: \"(\" + dateNamesManipulator(\"eeee\").data.join(\"|\") + \")\",\n        manipulator: dateNamesManipulator(\"eeee\").func\n      });\n\n      rules.push({\n        pattern: \"eeeee\",\n        regex: \"(\" + dateNamesManipulator(\"eeeee\").data.join(\"|\") + \")\",\n        manipulator: dateNamesManipulator(\"eeeee\").func\n      });\n\n      rules.push({\n        pattern: \"c\",\n        regex: \"\\\\d?\",\n        manipulator: localWeekDayManipulator\n      });\n\n      rules.push({\n        pattern: \"ccc\",\n        regex: \"(\" + dateNamesManipulator(\"ccc\").data.join(\"|\") + \")\",\n        manipulator: dateNamesManipulator(\"ccc\").func\n      });\n\n      rules.push({\n        pattern: \"cccc\",\n        regex: \"(\" + dateNamesManipulator(\"cccc\").data.join(\"|\") + \")\",\n        manipulator: dateNamesManipulator(\"cccc\").func\n      });\n\n      rules.push({\n        pattern: \"ccccc\",\n        regex: \"(\" + dateNamesManipulator(\"ccccc\").data.join(\"|\") + \")\",\n        manipulator: dateNamesManipulator(\"ccccc\").func\n      });\n\n      rules.push({\n        pattern: \"a\",\n        regex: \"(\" + amMarker + \"|\" + pmMarker + \")\",\n        manipulator: ampmManipulator\n      });\n\n      rules.push({\n        pattern: \"W\",\n        regex: \"(\\\\d?)\",\n        field: \"weekOfMonth\"\n      });\n\n      rules.push({\n        pattern: \"w\",\n        regex: \"(\\\\d\\\\d?)\",\n        field: \"weekOfYear\"\n      });\n\n      rules.push({\n        pattern: \"ww\",\n        regex: \"(\\\\d\\\\d)\",\n        field: \"weekOfYear\"\n      });\n\n      rules.push({\n        pattern: \"HH\",\n        regex: \"(\\\\d\\\\d?)\",\n        field: \"hour\"\n      });\n\n      rules.push({\n        pattern: \"H\",\n        regex: \"(\\\\d\\\\d?)\",\n        field: \"hour\"\n      });\n\n      rules.push({\n        pattern: \"kk\",\n        regex: \"(\\\\d\\\\d?)\",\n        manipulator: noZeroHourManipulator\n      });\n\n      rules.push({\n        pattern: \"k\",\n        regex: \"(\\\\d\\\\d?)\",\n        manipulator: noZeroHourManipulator\n      });\n\n      rules.push({\n        pattern: \"KK\",\n        regex: \"(\\\\d\\\\d?)\",\n        field: \"hour\"\n      });\n\n      rules.push({\n        pattern: \"K\",\n        regex: \"(\\\\d\\\\d?)\",\n        field: \"hour\"\n      });\n\n      rules.push({\n        pattern: \"hh\",\n        regex: \"(\\\\d\\\\d?)\",\n        manipulator: noZeroAmPmHourManipulator\n      });\n\n      rules.push({\n        pattern: \"h\",\n        regex: \"(\\\\d\\\\d?)\",\n        manipulator: noZeroAmPmHourManipulator\n      });\n\n      rules.push({\n        pattern: \"mm\",\n        regex: \"(\\\\d\\\\d?)\",\n        field: \"min\"\n      });\n\n      rules.push({\n        pattern: \"m\",\n        regex: \"(\\\\d\\\\d?)\",\n        field: \"min\"\n      });\n\n      rules.push({\n        pattern: \"ss\",\n        regex: \"(\\\\d\\\\d?)\",\n        field: \"sec\"\n      });\n\n      rules.push({\n        pattern: \"s\",\n        regex: \"(\\\\d\\\\d?)\",\n        field: \"sec\"\n      });\n\n      rules.push({\n        pattern: \"SSS\",\n        regex: \"(\\\\d\\\\d?\\\\d?)\",\n        field: \"ms\"\n      });\n\n      rules.push({\n        pattern: \"SS\",\n        regex: \"(\\\\d\\\\d?\\\\d?)\",\n        field: \"ms\"\n      });\n\n      rules.push({\n        pattern: \"S\",\n        regex: \"(\\\\d\\\\d?\\\\d?)\",\n        field: \"ms\"\n      });\n\n      rules.push({\n        pattern: \"Z\",\n        regex: \"([\\\\+\\\\-]\\\\d\\\\d\\\\d\\\\d)\",\n        manipulator: timezoneManipulator\n      });\n\n      rules.push({\n        pattern: \"z\",\n        regex: \"(GMT[\\\\+\\\\-]\\\\d\\\\d:\\\\d\\\\d)\",\n        manipulator: timezoneManipulator\n      });\n    }\n  }\n});\n"
  ]
}