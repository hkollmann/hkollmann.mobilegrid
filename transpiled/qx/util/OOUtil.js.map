{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/util/OOUtil.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "classIsDefined",
    "name",
    "getByName",
    "undefined",
    "getPropertyDefinition",
    "clazz",
    "$$properties",
    "superclass",
    "hasProperty",
    "util",
    "OOUtil",
    "getEventType",
    "constructor",
    "$$events",
    "supportsEvent",
    "getByInterface",
    "iface",
    "list",
    "i",
    "l",
    "$$implements",
    "$$flatImplements",
    "length",
    "hasInterface",
    "getMixins",
    "$$includes",
    "push",
    "apply",
    "$$flatIncludes"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2011 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Martin Wittemann (wittemann)\n\n************************************************************************ */\n/**\n * This class is a base class for the OO system defined by Class, Mixin\n * and Interface. It contains helper which are basically needed to create the\n * Classes which define the OO system.\n */\nqx.Bootstrap.define(\"qx.util.OOUtil\", {\n  statics: {\n    /**\n     * Whether the given class exists\n     *\n     * @param name {String} class name to check\n     * @return {Boolean} true if class exists\n     */\n    classIsDefined(name) {\n      return qx.Bootstrap.getByName(name) !== undefined;\n    },\n\n    /**\n     * Returns the definition of the given property, if not redefined.\n     * Returns null if the property does not exist.\n     *\n     * @param clazz {Class} class to check\n     * @param name {String} name of the class to check for\n     * @return {Map|null} whether the object support the given event.\n     */\n    getPropertyDefinition(clazz, name) {\n      while (clazz) {\n        if (clazz.$$properties && clazz.$$properties[name]) {\n          return clazz.$$properties[name];\n        }\n\n        clazz = clazz.superclass;\n      }\n\n      return null;\n    },\n\n    /**\n     * Whether a class has the given property\n     *\n     * @param clazz {Class} class to check\n     * @param name {String} name of the property to check for\n     * @return {Boolean} whether the class includes the given property.\n     */\n    hasProperty(clazz, name) {\n      return !!qx.util.OOUtil.getPropertyDefinition(clazz, name);\n    },\n\n    /**\n     * Returns the event type of the given event. Returns null if\n     * the event does not exist.\n     *\n     * @param clazz {Class} class to check\n     * @param name {String} name of the event\n     * @return {String|null} Event type of the given event.\n     */\n    getEventType(clazz, name) {\n      var clazz = clazz.constructor;\n\n      while (clazz.superclass) {\n        if (clazz.$$events && clazz.$$events[name] !== undefined) {\n          return clazz.$$events[name];\n        }\n\n        clazz = clazz.superclass;\n      }\n\n      return null;\n    },\n\n    /**\n     * Whether a class supports the given event type\n     *\n     * @param clazz {Class} class to check\n     * @param name {String} name of the event to check for\n     * @return {Boolean} whether the class supports the given event.\n     */\n    supportsEvent(clazz, name) {\n      return !!qx.util.OOUtil.getEventType(clazz, name);\n    },\n\n    /**\n     * Returns the class or one of its super classes which contains the\n     * declaration of the given interface. Returns null if the interface is not\n     * specified anywhere.\n     *\n     * @param clazz {Class} class to look for the interface\n     * @param iface {Interface} interface to look for\n     * @return {Class | null} the class which directly implements the given interface\n     */\n    getByInterface(clazz, iface) {\n      var list, i, l;\n\n      while (clazz) {\n        if (clazz.$$implements) {\n          list = clazz.$$flatImplements;\n\n          for (i = 0, l = list.length; i < l; i++) {\n            if (list[i] === iface) {\n              return clazz;\n            }\n          }\n        }\n\n        clazz = clazz.superclass;\n      }\n\n      return null;\n    },\n\n    /**\n     * Whether a given class or any of its super classes includes a given interface.\n     *\n     * This function will return \"true\" if the interface was defined\n     * in the class declaration ({@link qx.Class#define}) of the class\n     * or any of its super classes using the \"implement\"\n     * key.\n     *\n     * @param clazz {Class} class to check\n     * @param iface {Interface} the interface to check for\n     * @return {Boolean} whether the class includes the interface.\n     */\n    hasInterface(clazz, iface) {\n      return !!qx.util.OOUtil.getByInterface(clazz, iface);\n    },\n\n    /**\n     * Returns a list of all mixins available in a given class.\n     *\n     * @param clazz {Class} class which should be inspected\n     * @return {Mixin[]} array of mixins this class uses\n     */\n    getMixins(clazz) {\n      var list = [];\n\n      while (clazz) {\n        if (clazz.$$includes) {\n          list.push.apply(list, clazz.$$flatIncludes);\n        }\n\n        clazz = clazz.superclass;\n      }\n\n      return list;\n    }\n  }\n});\n"
  ]
}