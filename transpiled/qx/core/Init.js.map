{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/core/Init.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Class",
    "define",
    "statics",
    "getApplication",
    "core",
    "BaseInit",
    "ready",
    "__close",
    "e",
    "app",
    "setReturnValue",
    "close",
    "__shutdown",
    "terminate",
    "defer",
    "event",
    "Registration",
    "addListener",
    "window",
    "Init"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACI,KAAH,CAASC,MAAT,CAAgB,cAAhB,EAAgC;AAC9B;AACF;AACA;AACA;AACA;AAEEC,IAAAA,OAAO,EAAE;AACP;AACJ;AACA;AACA;AACA;AACIC,MAAAA,cAAc,EAAEP,EAAE,CAACQ,IAAH,CAAQC,QAAR,CAAiBF,cAN1B;;AAQP;AACJ;AACA;AACA;AACA;AACIG,MAAAA,KAAK,EAAEV,EAAE,CAACQ,IAAH,CAAQC,QAAR,CAAiBC,KAbjB;;AAeP;AACJ;AACA;AACA;AACA;AACA;AACIC,MAAAA,QArBO,oBAqBCC,CArBD,EAqBI;AACT,YAAIC,GAAG,GAAG,KAAKN,cAAL,EAAV;;AACA,YAAIM,GAAJ,EAAS;AACPD,UAAAA,CAAC,CAACE,cAAF,CAAiBD,GAAG,CAACE,KAAJ,EAAjB;AACD;AACF,OA1BM;;AA4BP;AACJ;AACA;AACA;AACA;AACIC,MAAAA,QAjCO,sBAiCM;AACX,YAAIH,GAAG,GAAG,KAAKN,cAAL,EAAV;;AAEA,YAAIM,GAAJ,EAAS;AACPA,UAAAA,GAAG,CAACI,SAAJ;AACD;AACF;AAvCM,KAPqB;;AAiD9B;AACF;AACA;AACA;AACA;AAEEC,IAAAA,KAvD8B,iBAuDxBZ,OAvDwB,EAuDf;AACbN,MAAAA,EAAE,CAACmB,KAAH,CAASC,YAAT,CAAsBC,WAAtB,CAAkCC,MAAlC,EAA0C,OAA1C,EAAmDhB,OAAO,CAACI,KAA3D,EAAkEJ,OAAlE;AACAN,MAAAA,EAAE,CAACmB,KAAH,CAASC,YAAT,CAAsBC,WAAtB,CACEC,MADF,EAEE,UAFF,EAGEhB,OAAO,CAACU,QAHV,EAIEV,OAJF;AAOAN,MAAAA,EAAE,CAACmB,KAAH,CAASC,YAAT,CAAsBC,WAAtB,CACEC,MADF,EAEE,cAFF,EAGEhB,OAAO,CAACK,QAHV,EAIEL,OAJF;AAMD;AAtE6B,GAAhC;AAzBAN,EAAAA,EAAE,CAACQ,IAAH,CAAQe,IAAR,CAAapB,aAAb,GAA6BA,aAA7B",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n\n************************************************************************ */\n\n/**\n * This is the base class for all qooxdoo applications.\n *\n * @require(qx.event.handler.Application)\n * @require(qx.event.handler.Window)\n * @require(qx.event.dispatch.Direct)\n */\nqx.Class.define(\"qx.core.Init\", {\n  /*\n  *****************************************************************************\n     STATICS\n  *****************************************************************************\n  */\n\n  statics: {\n    /**\n     * Returns the instantiated qooxdoo application.\n     *\n     * @return {qx.core.Object} The application instance.\n     */\n    getApplication: qx.core.BaseInit.getApplication,\n\n    /**\n     * Runs when the application is loaded. Automatically creates an instance\n     * of the class defined by the setting <code>qx.application</code>.\n     *\n     */\n    ready: qx.core.BaseInit.ready,\n\n    /**\n     * Runs before the document is unloaded. Calls the application's close\n     * method to check if the unload process should be stopped.\n     *\n     * @param e {qx.event.type.Native} Incoming beforeunload event.\n     */\n    __close(e) {\n      var app = this.getApplication();\n      if (app) {\n        e.setReturnValue(app.close());\n      }\n    },\n\n    /**\n     * Runs when the document is unloaded. Automatically terminates a previously\n     * created application instance.\n     *\n     */\n    __shutdown() {\n      var app = this.getApplication();\n\n      if (app) {\n        app.terminate();\n      }\n    }\n  },\n\n  /*\n  *****************************************************************************\n     DEFER\n  *****************************************************************************\n  */\n\n  defer(statics) {\n    qx.event.Registration.addListener(window, \"ready\", statics.ready, statics);\n    qx.event.Registration.addListener(\n      window,\n      \"shutdown\",\n      statics.__shutdown,\n      statics\n    );\n\n    qx.event.Registration.addListener(\n      window,\n      \"beforeunload\",\n      statics.__close,\n      statics\n    );\n  }\n});\n"
  ]
}