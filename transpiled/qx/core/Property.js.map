{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/core/Property.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "statics",
    "__gatherDependency",
    "event",
    "type",
    "Data",
    "dispatch",
    "Direct",
    "Promise",
    "__checks",
    "Boolean",
    "String",
    "Number",
    "Integer",
    "PositiveNumber",
    "PositiveInteger",
    "Error",
    "RegExp",
    "Object",
    "Array",
    "Map",
    "Function",
    "Date",
    "Node",
    "Element",
    "Document",
    "Window",
    "Event",
    "Class",
    "Mixin",
    "Interface",
    "Theme",
    "Color",
    "Decorator",
    "Font",
    "__dereference",
    "$$inherit",
    "$$store",
    "runtime",
    "user",
    "theme",
    "inherit",
    "init",
    "useinit",
    "$$method",
    "get",
    "getAsync",
    "set",
    "setImpl",
    "setAsync",
    "reset",
    "refresh",
    "setRuntime",
    "resetRuntime",
    "setThemed",
    "resetThemed",
    "$$allowedKeys",
    "name",
    "dereference",
    "inheritable",
    "nullable",
    "themeable",
    "refine",
    "apply",
    "check",
    "transform",
    "async",
    "deferredInit",
    "validate",
    "isEqual",
    "$$allowedGroupKeys",
    "group",
    "mode",
    "$$inheritable",
    "__executeOptimizedRefresh",
    "clazz",
    "inheritables",
    "__getInheritablesOfClass",
    "length",
    "refresher",
    "__createRefresher",
    "prototype",
    "$$refreshInheritables",
    "properties",
    "$$properties",
    "push",
    "superclass",
    "code",
    "i",
    "l",
    "join",
    "attachRefreshInheritables",
    "core",
    "Property",
    "attachMethods",
    "config",
    "__attachGroupMethods",
    "__attachPropertyMethods",
    "upname",
    "firstUp",
    "members",
    "setter",
    "resetter",
    "styler",
    "unstyler",
    "argHandler",
    "shorthand",
    "a",
    "undefined",
    "__shouldBeDereferenced",
    "method",
    "store",
    "getName",
    "$$install",
    "__installOptimizedGetter",
    "arguments",
    "setName",
    "__installOptimizedSetter",
    "executeOptimizedSetter",
    "value",
    "__errors",
    "error",
    "obj",
    "id",
    "property",
    "variant",
    "classname",
    "constructor",
    "msg",
    "__unwrapFunctionFromCode",
    "instance",
    "args",
    "fn",
    "__installFunctionFromCode",
    "call",
    "setDisplayName",
    "executeOptimizedGetter",
    "__compileGetter",
    "__compileSetter",
    "lang",
    "incomingValue",
    "hasCallback",
    "__getStore",
    "__emitIsEqualFunction",
    "__emitSetterPreConditions",
    "__emitOldValue",
    "__emitIncomingValueTransformation",
    "__emitOldNewComparison",
    "__emitStoreValue",
    "__emitStoreComputedValue",
    "__emitStoreInheritedPropertyValue",
    "__emitNormalizeUndefinedValues",
    "__emitCallCallback",
    "_getChildren",
    "unshift",
    "resetValue",
    "__emitIncomingValueValidation",
    "Environment",
    "select",
    "isDefined"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2004-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Sebastian Werner (wpbasti)\n     * Andreas Ecker (ecker)\n     * Martin Wittemann (martinwittemann)\n\n************************************************************************ */\n\n/**\n * Internal class for handling of dynamic properties. Should only be used\n * through the methods provided by {@link qx.Class}.\n *\n * For a complete documentation of properties take a look at\n * http://qooxdoo.org/docs/#core/property_features.md.\n *\n *\n * *Normal properties*\n *\n * The <code>properties</code> key in the class definition map of {@link qx.Class#define}\n * is used to generate the properties.\n *\n * Valid keys of a property definition are:\n *\n * <table>\n *   <tr><th>Name</th><th>Type</th><th>Description</th></tr>\n *   <tr><th>check</th><td>Array, String, Function</td><td>\n *     The check is used to check the type the incoming value of a property. This will only\n *     be executed in the source version. The build version will not contain the checks.\n *     The check can be:\n *     <ul>\n *       <li>a custom check function. The function takes the incoming value as a parameter and must\n *           return a boolean value to indicate whether the values is valid.\n *       </li>\n *       <li>inline check code as a string e.g. <code>\"value &gt; 0 && value &lt; 100\"</code></li>\n *       <li>a class name e.g. <code>qx.ui.form.Button</code></li>\n *       <li>a name of an interface the value must implement</li>\n *       <li>an array of all valid values</li>\n *       <li>one of the predefined checks: Boolean, String, Number, Integer, Float, Double,\n *           Object, Array, Map, Class, Mixin, Interface, Theme, Error, RegExp, Function,\n *           Date, Node, Element, Document, Window, Event\n *       </li>\n *     <ul>\n *   </td></tr>\n *   <tr><th>init</th><td>var</td><td>\n *     Sets the default/initial value of the property. If no property value is set or the property\n *     gets reset, the getter will return the <code>init</code> value.\n *   </td></tr>\n *   <tr><th>apply</th><td>String</td><td>\n *     On change of the property value the method of the specified name will be called. The signature of\n *     the method is <code>function(newValue, oldValue, propertyName)</code>. It is conventional to name\n *     the callback <code>_apply</code> + <i>PropertyName</i>, with the property name camel-cased (e.g.\n *     \"<i>_applyFooBar</i>\" for a property <i>fooBar</i>).\n *   </td></tr>\n *   <tr><th>event</th><td>String</td><td>\n *     On change of the property value an event with the given name will be dispatched. The event type is\n *     {@link qx.event.type.Data}.\n *   </td></tr>\n *   <tr><th>themeable</th><td>Boolean</td><td>\n *     Whether this property can be set using themes.\n *   </td></tr>\n *   <tr><th>inheritable</th><td>Boolean</td><td>\n *     Whether the property value should be inheritable. If the property does not have an user defined or an\n *     init value, the property will try to get the value from the parent of the current object.\n *   </td></tr>\n *   <tr><th>nullable</th><td>Boolean</td><td>\n *     Whether <code>null</code> is an allowed value of the property. This is complementary to the check\n *     defined using the <code>check</code> key.\n *   </td></tr>\n *   <tr><th>refine</th><td>Boolean</td><td>\n *     Whether the property definition is a refinement of a property in one of the super classes of the class.\n *     Only the <code>init</code> value can be changed using refine.\n *   </td></tr>\n *   <tr><th>transform</th><td>String</td><td>\n *     On setting of the property value the method of the specified name will\n *     be called. The signature of the method is <code>function(value, oldValue)</code>.\n *     The parameter <code>value</code> is the value passed to the setter, the\n *     parameter <code>oldValue</code> is the current value, or undefined if no value\n *     has been set previously.\n *     The function must return the modified or unmodified value.\n *     Transformation occurs before the check function, so both may be\n *     specified if desired.  Alternatively, the transform function may throw\n *     an error if the value passed to it is invalid.\n *   </td></tr>\n *   <tr><th>validate</th><td>Function, String</td><td>\n *     On setting of the property value the method of the specified name will\n *     be called. The signature of the method is <code>function(value)</code>.\n *     The parameter <code>value</code> is the value passed to the setter.\n *     If the validation fails, an <code>qx.core.ValidationError</code> should\n *     be thrown by the validation function. Otherwise, just do nothing in the\n *     function.<br>\n *     If a string is given, the string should hold a reference to a member\n *     method.<br>\n *     <code>\"<i>methodname</i>\"</code> for example\n *     <code>\"__validateProperty\"</code><br>\n *     There are some default validators in the {@link qx.util.Validate} class.\n *     See this documentation for usage examples.\n *   </td></tr>\n *   <tr><th>dereference</th><td>Boolean</td><td>\n *     By default, the references to the values (current, init, ...) of the\n *     property will be stored as references on the object. When disposing\n *     this object, the references will not be deleted. Setting the\n *     dereference key to true tells the property system to delete all\n *     connections made by this property on dispose. This can be necessary for\n *     disconnecting DOM objects to allow the garbage collector to work\n *     properly.\n *   </td></tr>\n *   <tr><th>deferredInit</th><td>Boolean</td><td>\n *     Allow for a deferred initialization for reference types. Defaults to false.\n *   </td></tr>\n *   <tr><th>isEqual</th><td>Function, String</td><td>\n *     On setting of the property value the method of the specified name will\n *     be called to test if two values are equal. These checks for equality are\n *     performed by the Property-System to decide whether further actions (like\n *     e.g. calling applier methods or firing of events) are needed.\n *     The signature of the method is <code>function(valueA, valueB)</code>.\n *     <br/>\n *     The <i>isEqual</i>-value can be:\n *     <ul>\n *       <li>a custom check function.\n *           The function takes two values as parameter and must return a\n *           boolean value to indicate whether the values are considered\n *           equal e.g. <code>function (a, b) { return Object.is(a, b); }</code>.</li>\n *       <li>inline check code as a string\n *           which will be invoked with two parameters <code>a</code> and\n *           <code>b</code> and results in a boolean value to indicate whether\n *           the values are equal e.g. <code>\"a.length() == b.length()\"</code>.</li>\n *       <li>reference to a member method as string\n *           <code>\"<i>methodname</i>\"</code> which will be invoked with two\n *           parameters and returns a boolean value indicating whether the two\n *           values are considered equal for example <code>\"__areTheSame\"</code>.</li>\n *     </ul>\n *     The default implementation (if this key is undefined) will check the\n *     equality by using the <i>identity</i> operator (===) as if defined like\n *     <code>\"a===b\"</code>.\n *   </td></tr>\n * </table>\n *\n * *Property groups*\n *\n * Property groups are defined in a similar way but support a different set of keys:\n *\n * <table>\n *   <tr><th>Name</th><th>Type</th><th>Description</th></tr>\n *   <tr><th>group</th><td>String[]</td><td>\n *     A list of property names which should be set using the property group.\n *   </td></tr>\n *   <tr><th>mode</th><td>String</td><td>\n *     If mode is set to <code>\"shorthand\"</code>, the properties can be set using a CSS like shorthand mode.\n *   </td></tr>\n *   <tr><th>themeable</th><td>Boolean</td><td>\n *     Whether this property can be set using themes.\n *   </td></tr>\n * </table>\n *\n * @internal\n * @ignore(qx.Interface)\n */\nqx.Bootstrap.define(\"qx.core.Property\", {\n  statics: {\n    /**\n     * This is a method which does nothing than gathering dependencies for the\n     * module system. Calling this method is useless because it does nothing.\n     */\n    __gatherDependency() {\n      if (qx.core.Environment.get(\"module.events\")) {\n        qx.event.type.Data;\n        qx.event.dispatch.Direct;\n      }\n      if (qx.core.Environment.get(\"qx.promise\")) {\n        qx.Promise;\n      }\n    },\n\n    /**\n     * Built-in checks\n     * The keys could be used in the check of the properties\n     */\n    __checks: {\n      Boolean: \"qx.core.Assert.assertBoolean(value, msg) || true\",\n      String: \"qx.core.Assert.assertString(value, msg) || true\",\n\n      Number: \"qx.core.Assert.assertNumber(value, msg) || true\",\n      Integer: \"qx.core.Assert.assertInteger(value, msg) || true\",\n      PositiveNumber: \"qx.core.Assert.assertPositiveNumber(value, msg) || true\",\n      PositiveInteger:\n        \"qx.core.Assert.assertPositiveInteger(value, msg) || true\",\n\n      Error: \"qx.core.Assert.assertInstance(value, Error, msg) || true\",\n      RegExp: \"qx.core.Assert.assertInstance(value, RegExp, msg) || true\",\n\n      Object: \"qx.core.Assert.assertObject(value, msg) || true\",\n      Array: \"qx.core.Assert.assertArray(value, msg) || true\",\n      Map: \"qx.core.Assert.assertMap(value, msg) || true\",\n\n      Function: \"qx.core.Assert.assertFunction(value, msg) || true\",\n      Date: \"qx.core.Assert.assertInstance(value, Date, msg) || true\",\n      Node: \"value !== null && value.nodeType !== undefined\",\n      Element: \"value !== null && value.nodeType === 1 && value.attributes\",\n      Document:\n        \"value !== null && value.nodeType === 9 && value.documentElement\",\n      Window: \"value !== null && value.document\",\n      Event: \"value !== null && value.type !== undefined\",\n\n      Class: 'value !== null && value.$$type === \"Class\"',\n      Mixin: 'value !== null && value.$$type === \"Mixin\"',\n      Interface: 'value !== null && value.$$type === \"Interface\"',\n      Theme: 'value !== null && value.$$type === \"Theme\"',\n\n      Color:\n        \"qx.lang.Type.isString(value) && qx.util.ColorUtil.isValidPropertyValue(value)\",\n      Decorator:\n        \"value !== null && qx.theme.manager.Decoration.getInstance().isValidPropertyValue(value)\",\n      Font: \"value !== null && qx.theme.manager.Font.getInstance().isDynamic(value)\"\n    },\n\n    /**\n     * Contains types from {@link #__checks} list which need to be dereferenced\n     */\n    __dereference: {\n      Node: true,\n      Element: true,\n      Document: true,\n      Window: true,\n      Event: true\n    },\n\n    /**\n     * Inherit value, used to override defaults etc. to force inheritance\n     * even if property value is not undefined (through multi-values)\n     *\n     * @internal\n     */\n    $$inherit: \"inherit\",\n\n    /**\n     * Caching field names for each property created\n     *\n     * @internal\n     */\n    $$store: {\n      runtime: {},\n      user: {},\n      theme: {},\n      inherit: {},\n      init: {},\n      useinit: {}\n    },\n\n    /**\n     * Caching function names for each property created\n     *\n     * @internal\n     */\n    $$method: {\n      get: {},\n      getAsync: {},\n      set: {},\n      setImpl: {},\n      setAsync: {},\n      reset: {},\n      init: {},\n      refresh: {},\n      setRuntime: {},\n      resetRuntime: {},\n      setThemed: {},\n      resetThemed: {}\n    },\n\n    /**\n     * Supported keys for property definitions\n     *\n     * @internal\n     */\n    $$allowedKeys: {\n      \"@\": \"object\", // Anything\n      name: \"string\", // String\n      dereference: \"boolean\", // Boolean\n      inheritable: \"boolean\", // Boolean\n      nullable: \"boolean\", // Boolean\n      themeable: \"boolean\", // Boolean\n      refine: \"boolean\", // Boolean\n      init: null, // var\n      apply: \"string\", // String\n      event: \"string\", // String\n      check: null, // Array, String, Function\n      transform: \"string\", // String\n      async: \"boolean\", // Boolean\n      deferredInit: \"boolean\", // Boolean\n      validate: null, // String, Function\n      isEqual: null // String, Function\n    },\n\n    /**\n     * Supported keys for property group definitions\n     *\n     * @internal\n     */\n    $$allowedGroupKeys: {\n      \"@\": \"object\", // Anything\n      name: \"string\", // String\n      group: \"object\", // Array\n      mode: \"string\", // String\n      themeable: \"boolean\" // Boolean\n    },\n\n    /** Contains names of inheritable properties, filled by {@link qx.Class.define} */\n    $$inheritable: {},\n\n    /**\n     * Generate optimized refresh method and  attach it to the class' prototype\n     *\n     * @param clazz {Class} clazz to which the refresher should be added\n     */\n    __executeOptimizedRefresh(clazz) {\n      var inheritables = this.__getInheritablesOfClass(clazz);\n\n      if (!inheritables.length) {\n        var refresher = function () {};\n      } else {\n        refresher = this.__createRefresher(inheritables);\n      }\n\n      clazz.prototype.$$refreshInheritables = refresher;\n    },\n\n    /**\n     * Get the names of all inheritable properties of the given class\n     *\n     * @param clazz {Class} class to get the inheritable properties of\n     * @return {String[]} List of property names\n     */\n    __getInheritablesOfClass(clazz) {\n      var inheritable = [];\n\n      while (clazz) {\n        var properties = clazz.$$properties;\n\n        if (properties) {\n          for (var name in this.$$inheritable) {\n            // Whether the property is available in this class\n            // and whether it is inheritable in this class as well\n            if (properties[name] && properties[name].inheritable) {\n              inheritable.push(name);\n            }\n          }\n        }\n\n        clazz = clazz.superclass;\n      }\n\n      return inheritable;\n    },\n\n    /**\n     * Assemble the refresher code and return the generated function\n     *\n     * @param inheritables {String[]} list of inheritable properties\n     * @return {Function} refresher function\n     */\n    __createRefresher(inheritables) {\n      var inherit = this.$$store.inherit;\n      var init = this.$$store.init;\n      var refresh = this.$$method.refresh;\n\n      var code = [\n        \"var parent = this.getLayoutParent();\",\n        \"if (!parent) return;\"\n      ];\n\n      for (var i = 0, l = inheritables.length; i < l; i++) {\n        var name = inheritables[i];\n        code.push(\n          \"var value = parent.\",\n          inherit[name],\n          \";\",\n          \"if (value===undefined) value = parent.\",\n          init[name],\n          \";\",\n          \"this.\",\n          refresh[name],\n          \"(value);\"\n        );\n      }\n\n      return new Function(code.join(\"\"));\n    },\n\n    /**\n     * Attach $$refreshInheritables method stub to the given class\n     *\n     * @param clazz {Class} clazz to which the refresher should be added\n     */\n    attachRefreshInheritables(clazz) {\n      clazz.prototype.$$refreshInheritables = function () {\n        qx.core.Property.__executeOptimizedRefresh(clazz);\n        return this.$$refreshInheritables();\n      };\n    },\n\n    /**\n     * Attach one property to class\n     *\n     * @param clazz {Class} Class to attach properties to\n     * @param name {String} Name of property\n     * @param config {Map} Configuration map of property\n     */\n    attachMethods(clazz, name, config) {\n      // Divide groups from \"normal\" properties\n      config.group\n        ? this.__attachGroupMethods(clazz, config, name)\n        : this.__attachPropertyMethods(clazz, config, name);\n    },\n\n    /**\n     * Attach group methods\n     *\n     * @param clazz {Class} Class to attach properties to\n     * @param config {Map} Property configuration\n     * @param name {String} Name of the property\n     */\n    __attachGroupMethods(clazz, config, name) {\n      var upname = qx.Bootstrap.firstUp(name);\n      var members = clazz.prototype;\n      var themeable = config.themeable === true;\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.property.level\") > 1) {\n          qx.Bootstrap.debug(\"Generating property group: \" + name);\n        }\n      }\n\n      var setter = [];\n      var resetter = [];\n\n      if (themeable) {\n        var styler = [];\n        var unstyler = [];\n      }\n\n      var argHandler =\n        \"var a=arguments[0] instanceof Array?arguments[0]:arguments;\";\n\n      setter.push(argHandler);\n\n      if (themeable) {\n        styler.push(argHandler);\n      }\n\n      if (config.mode == \"shorthand\") {\n        var shorthand =\n          \"a=qx.lang.Array.fromShortHand(qx.lang.Array.fromArguments(a));\";\n        setter.push(shorthand);\n\n        if (themeable) {\n          styler.push(shorthand);\n        }\n      }\n\n      for (var i = 0, a = config.group, l = a.length; i < l; i++) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (!this.$$method.set[a[i]] || !this.$$method.reset[a[i]]) {\n            throw new Error(\n              \"Cannot create property group '\" +\n                name +\n                \"' including non-existing property '\" +\n                a[i] +\n                \"'!\"\n            );\n          }\n        }\n\n        setter.push(\"this.\", this.$$method.set[a[i]], \"(a[\", i, \"]);\");\n        resetter.push(\"this.\", this.$$method.reset[a[i]], \"();\");\n\n        if (themeable) {\n          if (qx.core.Environment.get(\"qx.debug\")) {\n            if (!this.$$method.setThemed[a[i]]) {\n              throw new Error(\n                \"Cannot add the non themable property '\" +\n                  a[i] +\n                  \"' to the themable property group '\" +\n                  name +\n                  \"'\"\n              );\n            }\n          }\n\n          styler.push(\"this.\", this.$$method.setThemed[a[i]], \"(a[\", i, \"]);\");\n          unstyler.push(\"this.\", this.$$method.resetThemed[a[i]], \"();\");\n        }\n      }\n\n      // Attach setter\n      this.$$method.set[name] = \"set\" + upname;\n      members[this.$$method.set[name]] = new Function(setter.join(\"\"));\n\n      // Attach resetter\n      this.$$method.reset[name] = \"reset\" + upname;\n      members[this.$$method.reset[name]] = new Function(resetter.join(\"\"));\n\n      if (themeable) {\n        // Attach styler\n        this.$$method.setThemed[name] = \"setThemed\" + upname;\n        members[this.$$method.setThemed[name]] = new Function(styler.join(\"\"));\n\n        // Attach unstyler\n        this.$$method.resetThemed[name] = \"resetThemed\" + upname;\n        members[this.$$method.resetThemed[name]] = new Function(\n          unstyler.join(\"\")\n        );\n      }\n    },\n\n    /**\n     * Attach property methods\n     *\n     * @param clazz {Class} Class to attach properties to\n     * @param config {Map} Property configuration\n     * @param name {String} Name of the property\n     */\n    __attachPropertyMethods(clazz, config, name) {\n      var upname = qx.Bootstrap.firstUp(name);\n      var members = clazz.prototype;\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.property.level\") > 1) {\n          qx.Bootstrap.debug(\"Generating property wrappers: \" + name);\n        }\n      }\n\n      // Fill dispose value\n      if (\n        config.dereference === undefined &&\n        typeof config.check === \"string\"\n      ) {\n        config.dereference = this.__shouldBeDereferenced(config.check);\n      }\n\n      if (!qx.core.Environment.get(\"qx.promise\")) {\n        if (config.async) {\n          this.warn(\n            \"Asynchronous property \" +\n              clazz.classname +\n              \".\" +\n              name +\n              \" is switched to synchronous because qx.promise==false\"\n          );\n\n          config.async = false;\n        }\n        if (config.check == \"qx.Promise\") {\n          this.error(\n            \"Cannot implement check for property \" +\n              clazz.classname +\n              \".\" +\n              name +\n              \" because qx.promise==false\"\n          );\n\n          delete config.check;\n        }\n      }\n\n      // Check for method name conflicts\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        // Exclude qx.data.model.* because that's from marshalling and will cause conflicts to be reported\n        if (clazz.classname && !clazz.classname.match(/^qx.data.model/)) {\n          var allNames = [\n            \"get\" + upname,\n            \"set\" + upname,\n            \"reset\" + upname,\n            \"setRuntime\" + upname,\n            \"resetRuntime\" + upname\n          ];\n\n          if (config.async) {\n            allNames.push(\"get\" + upname + \"Async\");\n            allNames.push(\"set\" + upname + \"Async\");\n          }\n          if (\n            config.inheritable ||\n            config.apply ||\n            config.event ||\n            config.deferredInit\n          ) {\n            allNames.push(\"init\" + upname);\n          }\n          if (config.inheritable) {\n            allNames.push(\"refresh\" + upname);\n          }\n          if (config.themeable) {\n            allNames.push(\"getThemed\" + upname);\n            allNames.push(\"setThemed\" + upname);\n            allNames.push(\"resetThemed\" + upname);\n          }\n          if (config.check === \"Boolean\") {\n            allNames.push(\"is\" + upname);\n            allNames.push(\"toggle\" + upname);\n          }\n          allNames.forEach(function (name) {\n            if (clazz.superclass.prototype[name] !== undefined) {\n              var conflictingClass = null;\n              for (\n                var tmp = clazz.superclass;\n                tmp && tmp != qx.core.Object;\n                tmp = tmp.superclass\n              ) {\n                if (tmp.superclass.prototype[name] === undefined) {\n                  conflictingClass = tmp;\n                  break;\n                }\n              }\n              if (conflictingClass) {\n                qx.log.Logger.warn(\n                  \"Conflicting property method \" +\n                    clazz.classname +\n                    \".\" +\n                    name +\n                    \" with \" +\n                    conflictingClass.classname\n                );\n              }\n            }\n          });\n        }\n      }\n\n      var method = this.$$method;\n      var store = this.$$store;\n\n      store.runtime[name] = \"$$runtime_\" + name;\n      store.user[name] = \"$$user_\" + name;\n      store.theme[name] = \"$$theme_\" + name;\n      store.init[name] = \"$$init_\" + name;\n      store.inherit[name] = \"$$inherit_\" + name;\n      store.useinit[name] = \"$$useinit_\" + name;\n\n      var getName = (method.get[name] = \"get\" + upname);\n      members[method.get[name]] = new Function(\n        \"this.\" +\n          getName +\n          \".$$install && this.\" +\n          getName +\n          \".$$install();\" +\n          \"return this.\" +\n          getName +\n          \".apply(this, arguments);\"\n      );\n\n      if (config.async) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (members.hasOwnProperty(getName + \"Async\")) {\n            this.error(\n              \"Asynchronous property \" +\n                clazz.classname +\n                \".\" +\n                name +\n                \" is replacing \" +\n                getName +\n                \"Async() method in same class\"\n            );\n          } else if (members[getName + \"Async\"] !== undefined) {\n            this.warn(\n              \"Asynchronous property \" +\n                clazz.classname +\n                \".\" +\n                name +\n                \" is overriding \" +\n                getName +\n                \"Async() method\"\n            );\n          }\n        }\n        method.getAsync[name] = getName + \"Async\";\n        members[method.getAsync[name]] = new Function(\n          \"this.\" +\n            getName +\n            \".$$install && this.\" +\n            getName +\n            \".$$install.call(this);\" +\n            \"return this.\" +\n            getName +\n            \"Async.apply(this, arguments);\"\n        );\n      }\n      members[method.get[name]].$$install = function () {\n        qx.core.Property.__installOptimizedGetter(\n          clazz,\n          name,\n          \"get\",\n          arguments\n        );\n\n        if (config.async) {\n          qx.core.Property.__installOptimizedGetter(\n            clazz,\n            name,\n            \"getAsync\",\n            arguments\n          );\n        }\n      };\n\n      var setName = (method.set[name] = \"set\" + upname);\n      members[setName] = new Function(\n        \"this.\" +\n          setName +\n          \".$$install && this.\" +\n          setName +\n          \".$$install.call(this);\" +\n          \"return this.\" +\n          setName +\n          \".apply(this, arguments);\"\n      );\n\n      method.setAsync[name] = \"set\" + upname + \"Async\";\n      if (config.async) {\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          if (members.hasOwnProperty(setName + \"Async\")) {\n            this.error(\n              \"Asynchronous property \" +\n                clazz.classname +\n                \".\" +\n                name +\n                \" is replacing \" +\n                setName +\n                \"Async() method in same class\"\n            );\n          } else if (members[setName + \"Async\"] !== undefined) {\n            this.warn(\n              \"Asynchronous property \" +\n                clazz.classname +\n                \".\" +\n                name +\n                \" is overriding \" +\n                setName +\n                \"Async() method\"\n            );\n          }\n        }\n        members[setName + \"Async\"] = new Function(\n          \"this.\" +\n            setName +\n            \".$$install && this.\" +\n            setName +\n            \".$$install.call(this);\" +\n            \"return this.\" +\n            setName +\n            \"Async.apply(this, arguments);\"\n        );\n      }\n      method.setImpl[name] = \"$$set\" + upname + \"Impl\";\n      members[setName].$$install = function () {\n        qx.core.Property.__installOptimizedSetter(clazz, name, \"set\");\n        qx.core.Property.__installOptimizedSetter(clazz, name, \"setImpl\");\n        if (config.async) {\n          qx.core.Property.__installOptimizedSetter(clazz, name, \"setAsync\");\n        }\n      };\n\n      method.reset[name] = \"reset\" + upname;\n      members[method.reset[name]] = function () {\n        return qx.core.Property.executeOptimizedSetter(\n          this,\n          clazz,\n          name,\n          \"reset\"\n        );\n      };\n      members[method.reset[name]].$$install = function () {\n        qx.core.Property.__installOptimizedSetter(clazz, name, \"reset\");\n      };\n\n      if (\n        config.inheritable ||\n        config.apply ||\n        config.event ||\n        config.deferredInit\n      ) {\n        method.init[name] = \"init\" + upname;\n        members[method.init[name]] = function (value) {\n          return qx.core.Property.executeOptimizedSetter(\n            this,\n            clazz,\n            name,\n            \"init\",\n            arguments\n          );\n        };\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          members[method.init[name]].$$propertyMethod = true;\n        }\n      }\n\n      if (config.inheritable) {\n        method.refresh[name] = \"refresh\" + upname;\n        members[method.refresh[name]] = function (value) {\n          return qx.core.Property.executeOptimizedSetter(\n            this,\n            clazz,\n            name,\n            \"refresh\",\n            arguments\n          );\n        };\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          members[method.refresh[name]].$$propertyMethod = true;\n        }\n      }\n\n      method.setRuntime[name] = \"setRuntime\" + upname;\n      members[method.setRuntime[name]] = function (value) {\n        return qx.core.Property.executeOptimizedSetter(\n          this,\n          clazz,\n          name,\n          \"setRuntime\",\n          arguments\n        );\n      };\n\n      method.resetRuntime[name] = \"resetRuntime\" + upname;\n      members[method.resetRuntime[name]] = function () {\n        return qx.core.Property.executeOptimizedSetter(\n          this,\n          clazz,\n          name,\n          \"resetRuntime\"\n        );\n      };\n\n      if (config.themeable) {\n        method.setThemed[name] = \"setThemed\" + upname;\n        members[method.setThemed[name]] = function (value) {\n          return qx.core.Property.executeOptimizedSetter(\n            this,\n            clazz,\n            name,\n            \"setThemed\",\n            arguments\n          );\n        };\n\n        method.resetThemed[name] = \"resetThemed\" + upname;\n        members[method.resetThemed[name]] = function () {\n          return qx.core.Property.executeOptimizedSetter(\n            this,\n            clazz,\n            name,\n            \"resetThemed\"\n          );\n        };\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          members[method.setThemed[name]].$$propertyMethod = true;\n          members[method.resetThemed[name]].$$propertyMethod = true;\n        }\n      }\n\n      if (config.check === \"Boolean\") {\n        members[\"toggle\" + upname] = new Function(\n          \"return this.\" +\n            method.set[name] +\n            \"(!this.\" +\n            method.get[name] +\n            \"())\"\n        );\n\n        members[\"is\" + upname] = new Function(\n          \"return this.\" + method.get[name] + \"()\"\n        );\n\n        if (qx.core.Environment.get(\"qx.debug\")) {\n          members[\"toggle\" + upname].$$propertyMethod = true;\n          members[\"is\" + upname].$$propertyMethod = true;\n        }\n      }\n\n      // attach a flag to make generated property methods\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        members[method.get[name]].$$propertyMethod = true;\n        members[method.set[name]].$$propertyMethod = true;\n        members[method.reset[name]].$$propertyMethod = true;\n        members[method.setRuntime[name]].$$propertyMethod = true;\n        members[method.resetRuntime[name]].$$propertyMethod = true;\n      }\n    },\n\n    /**\n     * Returns if the reference for the given property check should be removed\n     * on dispose.\n     *\n     * @param check {var} The check of the property definition.\n     * @return {Boolean} If the dereference key should be set.\n     */\n    __shouldBeDereferenced(check) {\n      return !!this.__dereference[check];\n    },\n\n    /** @type {Map} Internal data field for error messages used by {@link #error} */\n    __errors: {\n      0: \"Could not change or apply init value after constructing phase!\",\n      1: \"Requires exactly one argument!\",\n      2: \"Undefined value is not allowed!\",\n      3: \"Does not allow any arguments!\",\n      4: \"Null value is not allowed!\",\n      5: \"Is invalid!\"\n    },\n\n    /**\n     * Error method used by the property system to report errors.\n     *\n     * @param obj {qx.core.Object} Any qooxdoo object\n     * @param id {Integer} Numeric error identifier\n     * @param property {String} Name of the property\n     * @param variant {String} Name of the method variant e.g. \"set\", \"reset\", ...\n     * @param value {var} Incoming value\n     */\n    error(obj, id, property, variant, value) {\n      var classname = obj.constructor.classname;\n      var msg =\n        \"Error in property \" +\n        property +\n        \" of class \" +\n        classname +\n        \" in method \" +\n        this.$$method[variant][property] +\n        \" with incoming value '\" +\n        value +\n        \"': \";\n\n      throw new Error(msg + (this.__errors[id] || \"Unknown reason: \" + id));\n    },\n\n    /**\n     * Compiles a string builder object to a function, executes the function and\n     * returns the return value.\n     *\n     * @param instance {Object} Instance which have called the original method\n     * @param members {Object} Prototype members map where the new function should be stored\n     * @param name {String} Name of the property\n     * @param variant {String} Function variant e.g. get, set, reset, ...\n     * @param code {Array} Array which contains the code\n     * @param args {arguments} Incoming arguments of wrapper method\n     * @return {var} Return value of the generated function\n     */\n    __unwrapFunctionFromCode(instance, members, name, variant, code, args) {\n      var fn = this.__installFunctionFromCode(\n        instance.constructor,\n        name,\n        variant,\n        code,\n        args\n      );\n\n      // Executing new function\n      if (args === undefined) {\n        return fn.call(instance);\n      } else if (qx.core.Environment.get(\"qx.debug\")) {\n        return fn.apply(instance, args);\n      } else {\n        return fn.call(instance, args[0]);\n      }\n    },\n\n    /**\n     * Takes a string builder object, converts it into a function, and installs it as\n     * a property accessor\n     *\n     * @param clazz {Class} Class to install the method into\n     * @param name {String} Name of the property\n     * @param variant {String} Function variant e.g. get, set, reset, ...\n     * @param code {Array} Array which contains the code\n     * @param args {arguments} Incoming arguments of wrapper method\n     * @return {var} Return value of the generated function\n     */\n    __installFunctionFromCode(clazz, name, variant, code, args) {\n      var store = this.$$method[variant][name];\n\n      // Output generate code\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (qx.core.Environment.get(\"qx.debug.property.level\") > 1) {\n          qx.Bootstrap.debug(\n            \"Code[\" + this.$$method[variant][name] + \"]: \" + code.join(\"\")\n          );\n        }\n\n        // Overriding temporary wrapper\n        try {\n          clazz.prototype[store] = new Function(\"value\", code.join(\"\"));\n        } catch (ex) {\n          throw new Error(\n            \"Malformed generated code to unwrap method: \" +\n              this.$$method[variant][name] +\n              \"\\n\" +\n              code.join(\"\")\n          );\n        }\n      } else {\n        clazz.prototype[store] = new Function(\"value\", code.join(\"\"));\n      }\n\n      // Enable profiling code\n      if (qx.core.Environment.get(\"qx.aspects\")) {\n        clazz.prototype[store] = qx.core.Aspect.wrap(\n          clazz.classname + \".\" + store,\n          clazz.prototype[store],\n          \"property\"\n        );\n      }\n\n      qx.Bootstrap.setDisplayName(\n        clazz.prototype[store],\n        clazz.classname + \".prototype\",\n        store\n      );\n\n      return clazz.prototype[store];\n    },\n\n    /**\n     * Generates the optimized getter, installs it into the class prototype, and executes it\n     * Supported variants: get\n     *\n     * @param instance {Object} the instance which calls the method\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @return {var} Execute return value of apply generated function, generally the incoming value\n     */\n    executeOptimizedGetter(instance, clazz, name, variant) {\n      var code = this.__compileGetter(clazz, name, variant);\n      var members = clazz.prototype;\n      return this.__unwrapFunctionFromCode(\n        instance,\n        members,\n        name,\n        variant,\n        code\n      );\n    },\n\n    /**\n     * Installs a getter into the class prototype, without executing it\n     * Supported variants: get\n     *\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     */\n    __installOptimizedGetter(clazz, name, variant) {\n      var code = this.__compileGetter(clazz, name, variant);\n      this.__installFunctionFromCode(clazz, name, variant, code);\n    },\n\n    /**\n     * Compiles a getter into a string builder array\n     * Supported variants: get\n     *\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @return {String[]} the string builder array\n     */\n    __compileGetter(clazz, name, variant) {\n      var config = clazz.$$properties[name];\n      var code = [];\n      var store = this.$$store;\n\n      if (variant == \"getAsync\") {\n        code.push(\n          \"return qx.Promise.resolve(this.\" + this.$$method.get[name] + \"());\"\n        );\n\n        return code;\n      }\n\n      code.push(\"if(this.\", store.runtime[name], \"!==undefined)\");\n      code.push(\"return this.\", store.runtime[name], \";\");\n\n      if (config.inheritable) {\n        code.push(\"else if(this.\", store.inherit[name], \"!==undefined)\");\n        code.push(\"return this.\", store.inherit[name], \";\");\n        code.push(\"else \");\n      }\n\n      code.push(\"if(this.\", store.user[name], \"!==undefined)\");\n      code.push(\"return this.\", store.user[name], \";\");\n\n      if (config.themeable) {\n        code.push(\"else if(this.\", store.theme[name], \"!==undefined)\");\n        code.push(\"return this.\", store.theme[name], \";\");\n      }\n\n      if (config.deferredInit && config.init === undefined) {\n        code.push(\"else if(this.\", store.init[name], \"!==undefined)\");\n        code.push(\"return this.\", store.init[name], \";\");\n      }\n\n      code.push(\"else \");\n\n      if (config.init !== undefined) {\n        if (config.inheritable) {\n          code.push(\"var init=this.\", store.init[name], \";\");\n\n          if (config.nullable) {\n            code.push(\"if(init==qx.core.Property.$$inherit)init=null;\");\n          }\n\n          code.push(\"return init;\");\n        } else {\n          code.push(\"return this.\", store.init[name], \";\");\n        }\n      } else if (config.inheritable || config.nullable) {\n        code.push(\"return null;\");\n      } else {\n        code.push(\n          'throw new Error(\"Property ',\n          name,\n          \" of an instance of \",\n          clazz.classname,\n          ' is not (yet) ready!\");'\n        );\n      }\n\n      return code;\n    },\n\n    /**\n     * Generates the optimized setter\n     * Supported variants: set, reset, init, refresh, style, unstyle\n     *\n     * @param instance {Object} the instance which calls the method\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @param args {arguments} Incoming arguments of wrapper method\n     * @return {var} Execute return value of apply generated function, generally the incoming value\n     */\n    executeOptimizedSetter(instance, clazz, name, variant, args) {\n      var code = this.__compileSetter(clazz, name, variant);\n      var members = clazz.prototype;\n      return this.__unwrapFunctionFromCode(\n        instance,\n        members,\n        name,\n        variant,\n        code,\n        args\n      );\n    },\n\n    /**\n     * Installs a setter into the class prototype, without executing it\n     * Supported variants: set\n     *\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @return {var} Return value of the generated function\n     */\n    __installOptimizedSetter(clazz, name, variant) {\n      var code = this.__compileSetter(clazz, name, variant);\n      return this.__installFunctionFromCode(clazz, name, variant, code);\n    },\n\n    /**\n     * Compiles a setter into a string builder array\n     * Supported variants: set, setThemed, setRuntime, init\n     *\n     * @param instance {Object} the instance which calls the method\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @return {String[]} the string builder array\n     */\n    __compileSetter(clazz, name, variant) {\n      var config = clazz.$$properties[name];\n      var members = clazz.prototype;\n      var code = [];\n\n      var upname = qx.lang.String.firstUp(name);\n      if (variant == \"setAsync\") {\n        code.push(\n          \"return qx.Promise.resolve(this.$$set\" +\n            upname +\n            \"Impl.apply(this, arguments));\"\n        );\n\n        return code;\n      } else if (variant == \"set\") {\n        code.push(\n          \"this.$$set\" + upname + \"Impl.apply(this, arguments);\",\n          \"return value;\"\n        );\n\n        return code;\n      }\n\n      var incomingValue =\n        variant === \"setImpl\" ||\n        variant === \"setThemed\" ||\n        variant === \"setRuntime\" ||\n        (variant === \"init\" && config.init === undefined);\n      var hasCallback = config.apply || config.event || config.inheritable;\n\n      var store = this.__getStore(variant, name);\n\n      this.__emitIsEqualFunction(code, clazz, config, name);\n\n      this.__emitSetterPreConditions(\n        code,\n        config,\n        name,\n        variant,\n        incomingValue\n      );\n\n      if (incomingValue || hasCallback) {\n        this.__emitOldValue(code, config, name);\n      }\n\n      if (incomingValue) {\n        this.__emitIncomingValueTransformation(code, clazz, config, name);\n      }\n\n      if (hasCallback) {\n        this.__emitOldNewComparison(code, incomingValue, store, variant);\n      }\n\n      if (config.inheritable) {\n        code.push(\"var inherit=prop.$$inherit;\");\n      }\n\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        if (incomingValue) {\n          this.__emitIncomingValueValidation(\n            code,\n            config,\n            clazz,\n            name,\n            variant\n          );\n        }\n      }\n\n      if (!hasCallback) {\n        this.__emitStoreValue(code, name, variant, incomingValue);\n      } else {\n        this.__emitStoreComputedValue(\n          code,\n          config,\n          name,\n          variant,\n          incomingValue\n        );\n      }\n\n      if (config.inheritable) {\n        this.__emitStoreInheritedPropertyValue(code, config, name, variant);\n      } else if (hasCallback) {\n        this.__emitNormalizeUndefinedValues(code, config, name, variant);\n      }\n\n      if (hasCallback) {\n        // Emit callback and event firing; Refreshing children (5th parameter) requires the parent/children interface\n        this.__emitCallCallback(\n          code,\n          config,\n          name,\n          variant,\n          !!(config.inheritable && members._getChildren)\n        );\n      }\n\n      // Return value\n      if (incomingValue) {\n        code.unshift(\"function set(value){\");\n        code.push(\"}\");\n        if (\n          qx.core.Environment.get(\"qx.promise\") &&\n          (!config.check || config.check != \"qx.Promise\")\n        ) {\n          code.push(\n            \"var promise;\",\n            \"if (qx.Promise.isPromise(value)) \",\n            \"promise = value.then(set.bind(this));\",\n            \"else \",\n            \"promise = set.apply(this, arguments);\"\n          );\n\n          if (variant == \"setImpl\") {\n            code.push(\"return promise;\");\n          } else {\n            code.push(\"return value;\");\n          }\n        } else {\n          code.push(\"set.apply(this, arguments);\", \"return value;\");\n        }\n      }\n\n      return code;\n    },\n\n    /**\n     * Get the object to store the value for the given variant\n     *\n     * @param variant {String} Method variant.\n     * @param name {String} name of the property\n     *\n     * @return {Object} the value store\n     */\n    __getStore(variant, name) {\n      if (variant === \"setRuntime\" || variant === \"resetRuntime\") {\n        var store = this.$$store.runtime[name];\n      } else if (variant === \"setThemed\" || variant === \"resetThemed\") {\n        store = this.$$store.theme[name];\n      } else if (variant === \"init\") {\n        store = this.$$store.init[name];\n      } else {\n        store = this.$$store.user[name];\n      }\n\n      return store;\n    },\n\n    /**\n     * Emit code for the equality check evaluation\n     *\n     * @param code {String[]} String array to append the code to\n     * @param clazz {Class} the class which originally defined the property\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     */\n    __emitIsEqualFunction(code, clazz, config, name) {\n      code.push(\"var equ=\");\n\n      if (typeof config.isEqual === \"function\") {\n        code.push(\n          \"function(a,b){return !!\",\n          clazz.classname,\n          \".$$properties.\",\n          name,\n          \".isEqual.call(this,a,b);};\"\n        );\n      } else if (typeof config.isEqual === \"string\") {\n        var members = clazz.prototype;\n        // Name of member?\n        if (members[config.isEqual] !== undefined) {\n          code.push(\"this.\", config.isEqual, \";\");\n        }\n        // 'inline' code\n        else {\n          code.push(\"function(a,b){return !!(\", config.isEqual, \");};\");\n        }\n      } else if (typeof config.isEqual === \"undefined\") {\n        code.push(\"function(a,b){return a===b;};\");\n      } else {\n        throw new Error(\n          \"Invalid type for 'isEqual' attribute \" +\n            \"of property '\" +\n            name +\n            \"' in class '\" +\n            clazz.classname +\n            \"'\"\n        );\n      }\n    },\n\n    /**\n     * Emit code to check the arguments preconditions\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\n     */\n    __emitSetterPreConditions(code, config, name, variant, incomingValue) {\n      if (qx.core.Environment.get(\"qx.debug\")) {\n        code.push(\"var prop=qx.core.Property;\");\n\n        if (variant === \"init\") {\n          code.push(\n            'if(this.$$initialized)prop.error(this,0,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n        }\n\n        if (variant === \"refresh\") {\n          // do nothing\n          // refresh() is internal => no arguments test\n          // also note that refresh() supports \"undefined\" values\n        } else if (incomingValue) {\n          // Check argument length\n          code.push(\n            'if(arguments.length!==1)prop.error(this,1,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n\n          // Undefined check\n          code.push(\n            'if(value===undefined)prop.error(this,2,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n        } else {\n          // Check argument length\n          code.push(\n            'if(arguments.length!==0)prop.error(this,3,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n        }\n      } else {\n        if (!config.nullable || config.check || config.inheritable) {\n          code.push(\"var prop=qx.core.Property;\");\n        }\n\n        // Undefined check\n        if (variant === \"setImpl\") {\n          code.push(\n            'if(value===undefined)prop.error(this,2,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n        }\n      }\n    },\n\n    /**\n     * Emit code to apply the \"validate\" and \"transform\" config keys.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param clazz {Class} the class which originally defined the property\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     */\n    __emitIncomingValueTransformation(code, clazz, config, name) {\n      // Call user-provided transform method, if one is provided.  Transform\n      // method should either throw an error or return the new value.\n      if (config.transform) {\n        code.push(\"value=this.\", config.transform, \"(value, old);\");\n      }\n\n      // Call user-provided validate method, if one is provided.  Validate\n      // method should either throw an error or do nothing.\n      if (config.validate) {\n        // if it is a string\n        if (typeof config.validate === \"string\") {\n          code.push(\"this.\", config.validate, \"(value);\");\n          // if its a function otherwise\n        } else if (config.validate instanceof Function) {\n          code.push(clazz.classname, \".$$properties.\", name);\n          code.push(\".validate.call(this, value);\");\n        }\n      }\n    },\n\n    /**\n     * Emit code, which returns if the incoming value equals the current value.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\n     * @param store {Object} The data store to use for the incoming value\n     * @param variant {String} Method variant.\n     */\n    __emitOldNewComparison(code, incomingValue, store, variant) {\n      var resetValue =\n        variant === \"reset\" ||\n        variant === \"resetThemed\" ||\n        variant === \"resetRuntime\";\n\n      if (incomingValue) {\n        code.push(\"if(equ.call(this,this.\", store, \",value))return value;\");\n      } else if (resetValue) {\n        code.push(\"if(this.\", store, \"===undefined)return;\");\n      }\n    },\n\n    /**\n     * Emit code, which performs validation of the incoming value according to\n     * the \"nullable\", \"check\" and \"inheritable\" config keys.\n     *\n     * @signature function(code, config, clazz, name, variant)\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param clazz {Class} the class which originally defined the property\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     */\n    __emitIncomingValueValidation: qx.core.Environment.select(\"qx.debug\", {\n      true(code, config, clazz, name, variant) {\n        // Null check\n        if (!config.nullable) {\n          code.push(\n            'if(value===null)prop.error(this,4,\"',\n            name,\n            '\",\"',\n            variant,\n            '\",value);'\n          );\n        }\n\n        // Processing check definition\n        if (config.check !== undefined) {\n          code.push(\n            \"var msg = \\\"Invalid incoming value for property '\" +\n              name +\n              \"' of class '\" +\n              clazz.classname +\n              \"'\\\";\"\n          );\n\n          // Accept \"null\"\n          if (config.nullable) {\n            code.push(\"if(value!==null)\");\n          }\n\n          // Inheritable properties always accept \"inherit\" as value\n          if (config.inheritable) {\n            code.push(\"if(value!==inherit)\");\n          }\n\n          code.push(\"if(\");\n\n          if (this.__checks[config.check] !== undefined) {\n            code.push(\"!(\", this.__checks[config.check], \")\");\n          } else if (qx.Class.isDefined(config.check)) {\n            code.push(\n              'qx.core.Assert.assertInstance(value, qx.Class.getByName(\"',\n              config.check,\n              '\"), msg)'\n            );\n          } else if (qx.Interface && qx.Interface.isDefined(config.check)) {\n            code.push(\n              'qx.core.Assert.assertInterface(value, qx.Interface.getByName(\"',\n              config.check,\n              '\"), msg)'\n            );\n          } else if (typeof config.check === \"function\") {\n            code.push(\"!\", clazz.classname, \".$$properties.\", name);\n            code.push(\".check.call(this, value)\");\n          } else if (typeof config.check === \"string\") {\n            code.push(\"!(\", config.check, \")\");\n          } else if (config.check instanceof Array) {\n            code.push(\n              \"qx.core.Assert.assertInArray(value, \",\n              clazz.classname,\n              \".$$properties.\",\n              name,\n              \".check, msg)\"\n            );\n          } else {\n            throw new Error(\n              \"Could not add check to property \" +\n                name +\n                \" of class \" +\n                clazz.classname\n            );\n          }\n\n          code.push(')prop.error(this,5,\"', name, '\",\"', variant, '\",value);');\n        }\n      },\n\n      false: undefined\n    }),\n\n    /**\n     * Emit code to store the incoming value\n     *\n     * @param code {String[]} String array to append the code to\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\n     */\n    __emitStoreValue(code, name, variant, incomingValue) {\n      if (variant === \"setRuntime\") {\n        code.push(\"this.\", this.$$store.runtime[name], \"=value;\");\n      } else if (variant === \"resetRuntime\") {\n        code.push(\"if(this.\", this.$$store.runtime[name], \"!==undefined)\");\n        code.push(\"delete this.\", this.$$store.runtime[name], \";\");\n      } else if (variant === \"setImpl\") {\n        code.push(\"this.\", this.$$store.user[name], \"=value;\");\n      } else if (variant === \"reset\") {\n        code.push(\"if(this.\", this.$$store.user[name], \"!==undefined)\");\n        code.push(\"delete this.\", this.$$store.user[name], \";\");\n      } else if (variant === \"setThemed\") {\n        code.push(\"this.\", this.$$store.theme[name], \"=value;\");\n      } else if (variant === \"resetThemed\") {\n        code.push(\"if(this.\", this.$$store.theme[name], \"!==undefined)\");\n        code.push(\"delete this.\", this.$$store.theme[name], \";\");\n      } else if (variant === \"init\" && incomingValue) {\n        code.push(\"this.\", this.$$store.init[name], \"=value;\");\n      }\n    },\n\n    /**\n     * Emit code to store the incoming value and compute the \"old\" and \"computed\"\n     * values.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     * @param incomingValue {Boolean} Whether the setter has an incoming value\n     */\n    __emitStoreComputedValue(code, config, name, variant, incomingValue) {\n      code.push(\"var computed;\");\n\n      // OLD = RUNTIME VALUE\n      code.push(\"if(this.\", this.$$store.runtime[name], \"!==undefined){\");\n\n      if (variant === \"setRuntime\") {\n        // Replace it with new value\n        code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\n      } else if (variant === \"resetRuntime\") {\n        // Delete field\n        code.push(\"delete this.\", this.$$store.runtime[name], \";\");\n\n        // Complex computation of new value\n        code.push(\"if(this.\", this.$$store.user[name], \"!==undefined)\");\n        code.push(\"computed=this.\", this.$$store.user[name], \";\");\n        code.push(\"else if(this.\", this.$$store.theme[name], \"!==undefined)\");\n        code.push(\"computed=this.\", this.$$store.theme[name], \";\");\n        code.push(\"else if(this.\", this.$$store.init[name], \"!==undefined){\");\n        code.push(\"computed=this.\", this.$$store.init[name], \";\");\n        code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\n        code.push(\"}\");\n      } else {\n        // Use runtime value as it has higher priority\n        code.push(\"computed=this.\", this.$$store.runtime[name], \";\");\n\n        // Store incoming value\n        if (variant === \"setImpl\") {\n          code.push(\"this.\", this.$$store.user[name], \"=value;\");\n        } else if (variant === \"reset\") {\n          code.push(\"delete this.\", this.$$store.user[name], \";\");\n        } else if (variant === \"setThemed\") {\n          code.push(\"this.\", this.$$store.theme[name], \"=value;\");\n        } else if (variant === \"resetThemed\") {\n          code.push(\"delete this.\", this.$$store.theme[name], \";\");\n        } else if (variant === \"init\" && incomingValue) {\n          code.push(\"this.\", this.$$store.init[name], \"=value;\");\n        }\n      }\n\n      code.push(\"}\");\n\n      // OLD = USER VALUE\n      code.push(\"else if(this.\", this.$$store.user[name], \"!==undefined){\");\n\n      if (variant === \"setImpl\") {\n        // Replace it with new value\n        code.push(\"computed=this.\", this.$$store.user[name], \"=value;\");\n      } else if (variant === \"reset\") {\n        // Delete field\n        code.push(\"delete this.\", this.$$store.user[name], \";\");\n\n        // Complex computation of new value\n        code.push(\"if(this.\", this.$$store.runtime[name], \"!==undefined)\");\n        code.push(\"computed=this.\", this.$$store.runtime[name], \";\");\n        code.push(\"if(this.\", this.$$store.theme[name], \"!==undefined)\");\n        code.push(\"computed=this.\", this.$$store.theme[name], \";\");\n        code.push(\"else if(this.\", this.$$store.init[name], \"!==undefined){\");\n        code.push(\"computed=this.\", this.$$store.init[name], \";\");\n        code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\n        code.push(\"}\");\n      } else {\n        if (variant === \"setRuntime\") {\n          // Use runtime value where it has higher priority\n          code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\n        } else if (config.inheritable) {\n          // Use user value where it has higher priority\n          code.push(\"computed=this.\", this.$$store.user[name], \";\");\n        } else {\n          // Use user value where it has higher priority\n          code.push(\"computed=this.\", this.$$store.user[name], \";\");\n        }\n\n        // Store incoming value\n        if (variant === \"setThemed\") {\n          code.push(\"this.\", this.$$store.theme[name], \"=value;\");\n        } else if (variant === \"resetThemed\") {\n          code.push(\"delete this.\", this.$$store.theme[name], \";\");\n        } else if (variant === \"init\" && incomingValue) {\n          code.push(\"this.\", this.$$store.init[name], \"=value;\");\n        }\n      }\n\n      code.push(\"}\");\n\n      // OLD = THEMED VALUE\n      if (config.themeable) {\n        code.push(\"else if(this.\", this.$$store.theme[name], \"!==undefined){\");\n\n        if (variant === \"setRuntime\") {\n          code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\n        } else if (variant === \"setImpl\") {\n          code.push(\"computed=this.\", this.$$store.user[name], \"=value;\");\n        }\n\n        // reset() is impossible, because the user has higher priority than\n        // the themed value, so the themed value has no chance to ever get used,\n        // when there is an user value, too.\n        else if (variant === \"setThemed\") {\n          code.push(\"computed=this.\", this.$$store.theme[name], \"=value;\");\n        } else if (variant === \"resetThemed\") {\n          // Delete entry\n          code.push(\"delete this.\", this.$$store.theme[name], \";\");\n\n          // Fallback to init value\n          code.push(\"if(this.\", this.$$store.init[name], \"!==undefined){\");\n          code.push(\"computed=this.\", this.$$store.init[name], \";\");\n          code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\n          code.push(\"}\");\n        } else if (variant === \"init\") {\n          if (incomingValue) {\n            code.push(\"this.\", this.$$store.init[name], \"=value;\");\n          }\n\n          code.push(\"computed=this.\", this.$$store.theme[name], \";\");\n        } else if (variant === \"refresh\") {\n          code.push(\"computed=this.\", this.$$store.theme[name], \";\");\n        }\n\n        code.push(\"}\");\n      }\n\n      // OLD = INIT VALUE\n      code.push(\"else if(this.\", this.$$store.useinit[name], \"){\");\n\n      if (variant === \"init\") {\n        if (incomingValue) {\n          code.push(\"computed=this.\", this.$$store.init[name], \"=value;\");\n        } else {\n          code.push(\"computed=this.\", this.$$store.init[name], \";\");\n        }\n\n        // useinit flag is already initialized\n      }\n\n      // reset(), resetRuntime() and resetStyle() are impossible, because the user and themed values have a\n      // higher priority than the init value, so the init value has no chance to ever get used,\n      // when there is an user or themed value, too.\n      else if (\n        variant === \"setImpl\" ||\n        variant === \"setRuntime\" ||\n        variant === \"setThemed\" ||\n        variant === \"refresh\"\n      ) {\n        code.push(\"delete this.\", this.$$store.useinit[name], \";\");\n\n        if (variant === \"setRuntime\") {\n          code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\n        } else if (variant === \"setImpl\") {\n          code.push(\"computed=this.\", this.$$store.user[name], \"=value;\");\n        } else if (variant === \"setThemed\") {\n          code.push(\"computed=this.\", this.$$store.theme[name], \"=value;\");\n        } else if (variant === \"refresh\") {\n          code.push(\"computed=this.\", this.$$store.init[name], \";\");\n        }\n      }\n\n      code.push(\"}\");\n\n      // OLD = NONE\n\n      // reset(), resetRuntime() and resetStyle() are impossible because otherwise there\n      // is already an old value\n      if (\n        variant === \"setImpl\" ||\n        variant === \"setRuntime\" ||\n        variant === \"setThemed\" ||\n        variant === \"init\"\n      ) {\n        code.push(\"else{\");\n\n        if (variant === \"setRuntime\") {\n          code.push(\"computed=this.\", this.$$store.runtime[name], \"=value;\");\n        } else if (variant === \"setImpl\") {\n          code.push(\"computed=this.\", this.$$store.user[name], \"=value;\");\n        } else if (variant === \"setThemed\") {\n          code.push(\"computed=this.\", this.$$store.theme[name], \"=value;\");\n        } else if (variant === \"init\") {\n          if (incomingValue) {\n            code.push(\"computed=this.\", this.$$store.init[name], \"=value;\");\n          } else {\n            code.push(\"computed=this.\", this.$$store.init[name], \";\");\n          }\n\n          code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\n        }\n\n        // refresh() will work with the undefined value, later\n        code.push(\"}\");\n      }\n    },\n\n    /**\n     * Emit code to compute the \"old\" value.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     */\n    __emitOldValue(code, config, name) {\n      if (config.inheritable) {\n        code.push(\"var old=this.\", this.$$store.inherit[name], \";\");\n      } else {\n        code.push(\"var old;\");\n      }\n\n      // OLD = RUNTIME VALUE\n      code.push(\"if(this.\", this.$$store.runtime[name], \"!==undefined){\");\n      code.push(\"old=this.\", this.$$store.runtime[name], \";\");\n      code.push(\"}\");\n\n      // OLD = USER VALUE\n      if (!config.inheritable) {\n        code.push(\"else if(this.\", this.$$store.user[name], \"!==undefined){\");\n        code.push(\"old=this.\", this.$$store.user[name], \";\");\n        code.push(\"}\");\n\n        // OLD = THEMED VALUE\n        if (config.themeable) {\n          code.push(\n            \"else if(this.\",\n            this.$$store.theme[name],\n            \"!==undefined){\"\n          );\n\n          code.push(\"old=this.\", this.$$store.theme[name], \";\");\n          code.push(\"}\");\n        }\n\n        // OLD = INIT VALUE\n        code.push(\"else if(this.\", this.$$store.useinit[name], \"){\");\n        code.push(\"old=this.\", this.$$store.init[name], \";\");\n        code.push(\"}\");\n      }\n    },\n\n    /**\n     * Emit code to store the value of an inheritable property\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     */\n    __emitStoreInheritedPropertyValue(code, config, name, variant) {\n      code.push(\"if(computed===undefined||computed===inherit){\");\n\n      if (variant === \"refresh\") {\n        code.push(\"computed=value;\");\n      } else {\n        code.push(\n          \"var pa=this.getLayoutParent();if(pa)computed=pa.\",\n          this.$$store.inherit[name],\n          \";\"\n        );\n      }\n\n      // Fallback to init value if inheritance was unsuccessful\n      code.push(\"if((computed===undefined||computed===inherit)&&\");\n      code.push(\"this.\", this.$$store.init[name], \"!==undefined&&\");\n      code.push(\"this.\", this.$$store.init[name], \"!==inherit){\");\n      code.push(\"computed=this.\", this.$$store.init[name], \";\");\n      code.push(\"this.\", this.$$store.useinit[name], \"=true;\");\n      code.push(\"}else{\");\n      code.push(\"delete this.\", this.$$store.useinit[name], \";}\");\n\n      code.push(\"}\");\n\n      // Compare old/new computed value\n      code.push(\"if(equ.call(this,old,computed))return value;\");\n\n      // Note: At this point computed can be \"inherit\" or \"undefined\".\n\n      // Normalize \"inherit\" to undefined and delete inherited value\n      code.push(\"if(computed===inherit){\");\n      code.push(\n        \"computed=undefined;delete this.\",\n        this.$$store.inherit[name],\n        \";\"\n      );\n\n      code.push(\"}\");\n\n      // Only delete inherited value\n      code.push(\"else if(computed===undefined)\");\n      code.push(\"delete this.\", this.$$store.inherit[name], \";\");\n\n      // Store inherited value\n      code.push(\"else this.\", this.$$store.inherit[name], \"=computed;\");\n\n      // Protect against normalization\n      code.push(\"var backup=computed;\");\n\n      // After storage finally normalize computed and old value\n      if (config.init !== undefined && variant !== \"init\") {\n        code.push(\"if(old===undefined)old=this.\", this.$$store.init[name], \";\");\n      } else {\n        code.push(\"if(old===undefined)old=null;\");\n      }\n      code.push(\"if(computed===undefined||computed==inherit)computed=null;\");\n    },\n\n    /**\n     * Emit code to normalize the old and incoming values from undefined to\n     * <code>null</code>.\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} Method variant.\n     */\n    __emitNormalizeUndefinedValues(code, config, name, variant) {\n      // Properties which are not inheritable have no possibility to get\n      // undefined at this position. (Hint: set(), setRuntime() and setThemed() only allow non undefined values)\n      if (\n        variant !== \"setImpl\" &&\n        variant !== \"setRuntime\" &&\n        variant !== \"setThemed\"\n      ) {\n        code.push(\"if(computed===undefined)computed=null;\");\n      }\n\n      // Compare old/new computed value\n      code.push(\"if(equ.call(this,old,computed))return value;\");\n\n      // Normalize old value\n      if (config.init !== undefined && variant !== \"init\") {\n        code.push(\"if(old===undefined)old=this.\", this.$$store.init[name], \";\");\n      } else {\n        code.push(\"if(old===undefined)old=null;\");\n      }\n    },\n\n    /**\n     * Emit code to call the apply method and fire the change event\n     *\n     * @param code {String[]} String array to append the code to\n     * @param config {Object} The property configuration map\n     * @param name {String} name of the property\n     * @param variant {String} variant of the method e.g. setThemed\n     * @param refresh {Boolean} if true, emit code to update the inherited values of child objects\n     */\n    __emitCallCallback(code, config, name, variant, refresh) {\n      // Execute user configured setter\n      code.push(\"var self=this;\", \"var promise;\");\n      if (config.apply) {\n        code.push(\n          \"promise = this.\",\n          config.apply,\n          '(computed, old, \"',\n          name,\n          '\", \"',\n          variant,\n          '\");'\n        );\n      }\n\n      if (config.async) {\n        code.push(\n          \"function fire() {\",\n          \"var promiseData = qx.Promise.resolve(computed);\",\n          \"var promise = promiseData;\"\n        );\n\n        // Fire event\n        if (config.event) {\n          code.push(\n            \"var reg=qx.event.Registration;\",\n            \"if(reg.hasListener(self, '\",\n            config.event,\n            \"')) {\",\n            \"promise = reg.fireEventAsync(self, '\",\n            config.event,\n            \"', qx.event.type.Data, [computed, old]\",\n            \");\",\n            \"promise = promise.then(function() { return computed; });\",\n            \"}\",\n            \"if(reg.hasListener(self, '\",\n            config.event,\n            \"Async'))\",\n            \"promise = promise.then(function() {\",\n            \"return reg.fireEventAsync(self, '\",\n            config.event,\n            \"Async', qx.event.type.Data, [promiseData, old]\",\n            \");\",\n            \"});\"\n          );\n        }\n\n        // Emit code to update the inherited values of child objects\n        if (refresh) {\n          code.push(\n            \"var a=self._getChildren();\",\n            \"if(a)\",\n            \"for(var i=0,l=a.length;i<l;i++){\",\n            \"if(a[i].\",\n            this.$$method.refresh[name],\n            \")\",\n            \"a[i].\",\n            this.$$method.refresh[name],\n            \"(backup);\",\n            \"}\"\n          );\n        }\n\n        code.push(\"return promise;\", \"}\");\n      } else {\n        code.push(\"function fire() {\", \"  var tracker={};\");\n\n        // Fire event\n        if (config.event) {\n          code.push(\n            \"var reg=qx.event.Registration;\",\n\n            \"if(reg.hasListener(self, '\",\n            config.event,\n            \"'))\",\n            \"qx.event.Utils.track(tracker, reg.fireEvent(self, '\",\n            config.event,\n            \"', qx.event.type.Data, [computed, old]\",\n            \"));\"\n          );\n\n          if (qx.core.Environment.get(\"qx.promise\")) {\n            code.push(\n              \"if(reg.hasListener(self, '\",\n              config.event,\n              \"Async'))\",\n              \"qx.event.Utils.then(tracker, function() {\\n\" +\n                \"  return reg.fireEventAsync(self, '\",\n              config.event,\n              \"Async', qx.event.type.Data, [qx.Promise.resolve(computed), old]\",\n              \");\\n\" + \"});\"\n            );\n          }\n        }\n        // Emit code to update the inherited values of child objects\n        if (refresh) {\n          code.push(\n            \"var a=self._getChildren();\",\n            \"if(a)\",\n            \"for(var i=0,l=a.length;i<l;i++){\",\n            \"if(a[i].\",\n            this.$$method.refresh[name],\n            \")\",\n            \"a[i].\",\n            this.$$method.refresh[name],\n            \"(backup);\",\n            \"}\"\n          );\n        }\n\n        code.push(\n          \"if (tracker.promise)\\n\",\n          \"  return tracker.promise.then(function() { return computed; });\",\n          \"return computed;\",\n          \"}\"\n        );\n      }\n\n      if (qx.core.Environment.get(\"qx.promise\")) {\n        code.push(\n          \"if(qx.Promise.isPromise(promise)) \" + \"return promise.then(fire); \"\n        );\n      }\n      code.push(\"return fire();\");\n    }\n  }\n});\n"
  ]
}