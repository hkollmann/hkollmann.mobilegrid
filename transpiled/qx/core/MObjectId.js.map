{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/core/MObjectId.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "Mixin",
    "define",
    "properties",
    "qxOwner",
    "init",
    "check",
    "nullable",
    "apply",
    "qxObjectId",
    "value",
    "indexOf",
    "members",
    "__ownedQxObjects",
    "__changingQxOwner",
    "_applyQxOwner",
    "oldValue",
    "Error",
    "_applyQxObjectId",
    "owner",
    "getQxOwner",
    "__onOwnedObjectIdChange",
    "_cascadeQxObjectIdChanges",
    "obj",
    "newId",
    "oldId",
    "getContentElement",
    "contentElement",
    "updateObjectId",
    "name",
    "core",
    "Object",
    "getQxObject",
    "id",
    "undefined",
    "controlId",
    "pos",
    "substring",
    "result",
    "segs",
    "split",
    "target",
    "found",
    "every",
    "seg",
    "length",
    "tmp",
    "_createQxObject",
    "childControl",
    "getChildControl",
    "_createQxObjectImpl",
    "addOwnedQxObject",
    "thatOwner",
    "__removeOwnedQxObjectImpl",
    "getQxObjectId",
    "setQxOwner",
    "setQxObjectId",
    "removeOwnedQxObject",
    "args",
    "getOwnedQxObjects",
    "values",
    "MObjectId"
  ],
  "mappings": "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",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2017 Zenesis Limited, http://www.zenesis.com\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * John Spackman (john.spackman@zenesis.com, @johnspackman)\n\n************************************************************************ */\n\n/**\n * A mixin providing objects by ID and owners.\n *\n * The typical use of IDs is to override the `_createQxObjectImpl` method and create\n * new instances on demand; all code should access these instances by calling\n * `getQxObject`.\n */\nqx.Mixin.define(\"qx.core.MObjectId\", {\n  /*\n   * ****************************************************************************\n   * PROPERTIES\n   * ****************************************************************************\n   */\n\n  properties: {\n    /** The owning object */\n    qxOwner: {\n      init: null,\n      check: \"qx.core.Object\",\n      nullable: true,\n      apply: \"_applyQxOwner\"\n    },\n\n    /** {String} The ID of the object.  */\n    qxObjectId: {\n      init: null,\n      check(value) {\n        return (\n          value === null || (typeof value == \"string\" && value.indexOf(\"/\") < 0)\n        );\n      },\n      nullable: true,\n      apply: \"_applyQxObjectId\"\n    }\n  },\n\n  /*\n   * ****************************************************************************\n   * MEMBERS\n   * ****************************************************************************\n   */\n\n  members: {\n    __ownedQxObjects: null,\n    __changingQxOwner: false,\n\n    /**\n     * Apply owner\n     */\n    _applyQxOwner(value, oldValue) {\n      if (!this.__changingQxOwner) {\n        throw new Error(\n          \"Please use API methods to change owner, not the property\"\n        );\n      }\n    },\n\n    /**\n     * Apply objectId\n     */\n    _applyQxObjectId(value, oldValue) {\n      if (!this.__changingQxOwner) {\n        var owner = this.getQxOwner();\n        if (owner) {\n          owner.__onOwnedObjectIdChange(this, value, oldValue);\n        }\n        this._cascadeQxObjectIdChanges();\n      }\n    },\n\n    /**\n     * Called when a child's objectId changes\n     */\n    __onOwnedObjectIdChange(obj, newId, oldId) {\n      delete this.__ownedQxObjects[oldId];\n      this.__ownedQxObjects[newId] = obj;\n    },\n\n    /**\n     * Reflect changes to IDs or owners\n     */\n    _cascadeQxObjectIdChanges() {\n      if (typeof this.getContentElement == \"function\") {\n        var contentElement = this.getContentElement();\n        if (contentElement) {\n          contentElement.updateObjectId();\n        }\n      }\n      if (this.__ownedQxObjects) {\n        for (var name in this.__ownedQxObjects) {\n          var obj = this.__ownedQxObjects[name];\n          if (obj instanceof qx.core.Object) {\n            obj._cascadeQxObjectIdChanges();\n          }\n        }\n      }\n    },\n\n    /**\n     * Returns the object with the specified ID\n     *\n     * @param id\n     *          {String} ID of the object\n     * @return {qx.core.Object?} the found object\n     */\n    getQxObject(id) {\n      if (this.__ownedQxObjects) {\n        var obj = this.__ownedQxObjects[id];\n        if (obj !== undefined) {\n          return obj;\n        }\n      }\n\n      // Separate out the child control ID\n      var controlId = null;\n      var pos = id.indexOf(\"#\");\n      if (pos > -1) {\n        controlId = id.substring(pos + 1);\n        id = id.substring(0, pos);\n      }\n\n      var result = undefined;\n\n      // Handle paths\n      if (id.indexOf(\"/\") > -1) {\n        var segs = id.split(\"/\");\n        var target = this;\n        var found = segs.every(function (seg) {\n          if (!seg.length) {\n            return true;\n          }\n          if (!target) {\n            return false;\n          }\n          var tmp = target.getQxObject(seg);\n          if (tmp !== undefined) {\n            target = tmp;\n            return true;\n          }\n        });\n        if (found) {\n          result = target;\n        }\n      } else {\n        // No object, creating the object\n        result = this._createQxObject(id);\n      }\n\n      if (result && controlId) {\n        var childControl = result.getChildControl(controlId);\n        return childControl;\n      }\n\n      return result;\n    },\n\n    /**\n     * Creates the object and adds it to a list; most classes are expected to\n     * override `_createQxObjectImpl` NOT this method.\n     *\n     * @param id {String} ID of the object\n     * @return {qx.core.Object?} the created object\n     */\n    _createQxObject(id) {\n      var result = this._createQxObjectImpl(id);\n      if (result !== undefined) {\n        this.addOwnedQxObject(result, id);\n      }\n      return result;\n    },\n\n    /**\n     * Creates the object, intended to be overridden. Null is a valid return\n     * value and will be cached by `getQxObject`, however `undefined` is NOT a\n     * valid value and so will not be cached meaning that `_createQxObjectImpl`\n     * will be called multiple times until a valid value is returned.\n     *\n     * @param id {String} ID of the object\n     * @return {qx.core.Object?} the created object\n     */\n    _createQxObjectImpl(id) {\n      return undefined;\n    },\n\n    /**\n     * Adds an object as owned by this object\n     *\n     * @param obj {qx.core.Object} the object to register\n     * @param id {String?} the id to set when registering the object\n     */\n    addOwnedQxObject(obj, id) {\n      if (!this.__ownedQxObjects) {\n        this.__ownedQxObjects = {};\n      }\n\n      if (!(obj instanceof qx.core.Object)) {\n        if (!id) {\n          throw new Error(\n            \"Cannot register an object that has no ID, obj=\" + obj\n          );\n        }\n        if (this.__ownedQxObjects[id]) {\n          throw new Error(\n            \"Cannot register an object with ID '\" +\n              id +\n              \"' because that ID is already in use, this=\" +\n              this +\n              \", obj=\" +\n              obj\n          );\n        }\n        this.__ownedQxObjects[id] = obj;\n        return;\n      }\n\n      var thatOwner = obj.getQxOwner();\n      if (thatOwner === this) {\n        return;\n      }\n      obj.__changingQxOwner = true;\n      try {\n        if (thatOwner) {\n          thatOwner.__removeOwnedQxObjectImpl(obj);\n        }\n        if (id === undefined) {\n          id = obj.getQxObjectId();\n        }\n        if (!id) {\n          throw new Error(\n            \"Cannot register an object that has no ID, obj=\" + obj\n          );\n        }\n        if (this.__ownedQxObjects[id]) {\n          throw new Error(\n            \"Cannot register an object with ID '\" +\n              id +\n              \"' because that ID is already in use, this=\" +\n              this +\n              \", obj=\" +\n              obj\n          );\n        }\n        if (obj.getQxOwner() != null) {\n          throw new Error(\n            \"Cannot register an object with ID '\" +\n              id +\n              \"' because it is already owned by another object this=\" +\n              this +\n              \", obj=\" +\n              obj\n          );\n        }\n        obj.setQxOwner(this);\n        obj.setQxObjectId(id);\n        obj._cascadeQxObjectIdChanges();\n      } finally {\n        obj.__changingQxOwner = false;\n      }\n      this.__ownedQxObjects[id] = obj;\n    },\n\n    /**\n     * Discards an object from the list of owned objects; note that this does\n     * not dispose of the object, simply forgets it if it exists.\n     *\n     * @param args {String|Object} the ID of the object to discard, or the object itself\n     */\n    removeOwnedQxObject(args) {\n      if (!this.__ownedQxObjects) {\n        throw new Error(\n          \"Cannot discard object because it is not owned by this, this=\" +\n            this +\n            \", object=\" +\n            obj\n        );\n      }\n\n      var id;\n      var obj;\n      if (typeof args === \"string\") {\n        if (args.indexOf(\"/\") > -1) {\n          throw new Error(\"Cannot discard owned objects based on a path\");\n        }\n        id = args;\n        obj = this.__ownedQxObjects[id];\n        if (obj === undefined) {\n          return;\n        }\n      } else {\n        obj = args;\n        if (!(obj instanceof qx.core.Object)) {\n          throw new Error(\n            \"Cannot discard object by reference because it is not a Qooxdoo object, please remove it using the original ID; object=\" +\n              obj\n          );\n        }\n        id = obj.getQxObjectId();\n        if (this.__ownedQxObjects[id] !== obj) {\n          throw new Error(\n            \"Cannot discard object because it is not owned by this, this=\" +\n              this +\n              \", object=\" +\n              obj\n          );\n        }\n      }\n\n      if (obj !== null) {\n        if (!(obj instanceof qx.core.Object)) {\n          this.__removeOwnedQxObjectImpl(obj);\n          delete this.__ownedQxObjects[id];\n        } else {\n          obj.__changingQxOwner = true;\n          try {\n            this.__removeOwnedQxObjectImpl(obj);\n            obj._cascadeQxObjectIdChanges();\n          } finally {\n            obj.__changingQxOwner = false;\n          }\n        }\n      }\n    },\n\n    /**\n     * Removes an owned object\n     *\n     * @param obj {qx.core.Object} the object\n     */\n    __removeOwnedQxObjectImpl(obj) {\n      if (obj !== null) {\n        var id = obj.getQxObjectId();\n        obj.setQxOwner(null);\n        delete this.__ownedQxObjects[id];\n      }\n    },\n\n    /**\n     * Returns an array of objects that are owned by this object, or an empty\n     * array if none exists.\n     *\n     * @return {Array}\n     */\n    getOwnedQxObjects() {\n      return this.__ownedQxObjects ? Object.values(this.__ownedQxObjects) : [];\n    }\n  }\n});\n"
  ]
}