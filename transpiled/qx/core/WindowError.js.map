{
  "version": 3,
  "sources": [
    "/home/runner/work/hkollmann.mobilegrid/hkollmann.mobilegrid/node_modules/@qooxdoo/framework/source/class/qx/core/WindowError.js"
  ],
  "names": [
    "qx",
    "Bootstrap",
    "executePendingDefers",
    "$$dbClassInfo",
    "define",
    "extend",
    "Error",
    "construct",
    "failMessage",
    "uri",
    "lineNumber",
    "columnNumber",
    "sourceException",
    "inst",
    "call",
    "stack",
    "stacktrace",
    "__failMessage",
    "__uri",
    "__lineNumber",
    "undefined",
    "__columnNumber",
    "__sourceException",
    "members",
    "toString",
    "getUri",
    "getLineNumber",
    "getColumnNumber",
    "getSourceException",
    "core",
    "WindowError"
  ],
  "mappings": ";;;;;;;;;AAAAA,EAAAA,EAAE,CAACC,SAAH,CAAaC,oBAAb,CAAkCC,aAAlC;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAH,EAAAA,EAAE,CAACC,SAAH,CAAaG,MAAb,CAAoB,qBAApB,EAA2C;AACzCC,IAAAA,MAAM,EAAEC,KADiC;;AAGzC;AACF;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACEC,IAAAA,SAhByC,qBAgB/BC,WAhB+B,EAgBlBC,GAhBkB,EAgBbC,UAhBa,EAgBDC,YAhBC,EAgBaC,eAhBb,EAgB8B;AACrE,UAAIC,IAAI,GAAGD,eAAe,IAAIN,KAAK,CAACQ,IAAN,CAAW,IAAX,EAAiBN,WAAjB,CAA9B,CADqE,CAErE;;AACA,UAAIK,IAAI,CAACE,KAAT,EAAgB;AACd,aAAKA,KAAL,GAAaF,IAAI,CAACE,KAAlB;AACD;;AACD,UAAIF,IAAI,CAACG,UAAT,EAAqB;AACnB,aAAKA,UAAL,GAAkBH,IAAI,CAACG,UAAvB;AACD;;AAED,WAAKC,SAAL,GAAqBT,WAArB;AACA,WAAKU,SAAL,GAAaT,GAAG,IAAI,EAApB;AACA,WAAKU,SAAL,GAAoBT,UAAU,KAAKU,SAAf,GAA2B,CAAC,CAA5B,GAAgCV,UAApD;AACA,WAAKW,SAAL,GAAsBV,YAAY,KAAKS,SAAjB,GAA6B,CAAC,CAA9B,GAAkCT,YAAxD;AACA,WAAKW,SAAL,GAAyBV,eAAzB;AACD,KA/BwC;;AAiCzC;AACF;AACA;AACA;AACA;AAEEW,IAAAA,OAAO,EAAE;AACPN,MAAAA,SAAa,EAAE,IADR;AAEPC,MAAAA,SAAK,EAAE,IAFA;AAGPC,MAAAA,SAAY,EAAE,IAHP;AAIPE,MAAAA,SAAc,EAAE,IAJT;AAKPC,MAAAA,SAAiB,EAAE,IALZ;;AAOP;AACJ;AACA;AACA;AACA;AACIE,MAAAA,QAZO,sBAYI;AACT,eAAO,KAAKP,SAAZ;AACD,OAdM;;AAgBP;AACJ;AACA;AACA;AACA;AACIQ,MAAAA,MArBO,oBAqBE;AACP,eAAO,KAAKP,SAAZ;AACD,OAvBM;;AAyBP;AACJ;AACA;AACA;AACA;AACIQ,MAAAA,aA9BO,2BA8BS;AACd,eAAO,KAAKP,SAAZ;AACD,OAhCM;;AAkCP;AACJ;AACA;AACA;AACA;AACIQ,MAAAA,eAvCO,6BAuCW;AAChB,eAAO,KAAKN,SAAZ;AACD,OAzCM;;AA2CP;AACJ;AACA;AACA;AACA;AACIO,MAAAA,kBAhDO,gCAgDc;AACnB,eAAO,KAAKN,SAAZ;AACD;AAlDM;AAvCgC,GAA3C;AAtBAtB,EAAAA,EAAE,CAAC6B,IAAH,CAAQC,WAAR,CAAoB3B,aAApB,GAAoCA,aAApC",
  "sourcesContent": [
    "/* ************************************************************************\n\n   qooxdoo - the new era of web development\n\n   http://qooxdoo.org\n\n   Copyright:\n     2007-2008 1&1 Internet AG, Germany, http://www.1und1.de\n\n   License:\n     MIT: https://opensource.org/licenses/MIT\n     See the LICENSE file in the project's top-level directory for details.\n\n   Authors:\n     * Fabian Jakobs (fjakobs)\n\n************************************************************************ */\n\n/**\n * This exception is thrown by the {@link qx.event.GlobalError} handler if a\n * <code>window.onerror</code> event occurs in the browser.\n */\nqx.Bootstrap.define(\"qx.core.WindowError\", {\n  extend: Error,\n\n  /*\n  *****************************************************************************\n     CONSTRUCTOR\n  *****************************************************************************\n  */\n\n  /**\n   * @param failMessage {String} The error message\n   * @param uri {String} URI where error was raised\n   * @param lineNumber {Integer} The line number where the error was raised\n   * @param columnNumber {Integer} The column number where the error was raised\n   * @param sourceException {Error} orginal error\n   */\n  construct(failMessage, uri, lineNumber, columnNumber, sourceException) {\n    var inst = sourceException || Error.call(this, failMessage);\n    // map stack trace properties since they're not added by Error's constructor\n    if (inst.stack) {\n      this.stack = inst.stack;\n    }\n    if (inst.stacktrace) {\n      this.stacktrace = inst.stacktrace;\n    }\n\n    this.__failMessage = failMessage;\n    this.__uri = uri || \"\";\n    this.__lineNumber = lineNumber === undefined ? -1 : lineNumber;\n    this.__columnNumber = columnNumber === undefined ? -1 : columnNumber;\n    this.__sourceException = sourceException;\n  },\n\n  /*\n  *****************************************************************************\n     MEMBERS\n  *****************************************************************************\n  */\n\n  members: {\n    __failMessage: null,\n    __uri: null,\n    __lineNumber: null,\n    __columnNumber: null,\n    __sourceException: null,\n\n    /**\n     * Returns the error message.\n     *\n     * @return {String} error message\n     */\n    toString() {\n      return this.__failMessage;\n    },\n\n    /**\n     * Get the URI where error was raised\n     *\n     * @return {String} URI where error was raised\n     */\n    getUri() {\n      return this.__uri;\n    },\n\n    /**\n     * Get the line number where the error was raised\n     *\n     * @return {Integer} The line number where the error was raised\n     */\n    getLineNumber() {\n      return this.__lineNumber;\n    },\n\n    /**\n     * Get the column number where the error was raised\n     *\n     * @return {Integer} The line number where the error was raised\n     */\n    getColumnNumber() {\n      return this.__columnNumber;\n    },\n\n    /**\n     * Get the source exception\n     *\n     * @return {Error} The source error\n     */\n    getSourceException() {\n      return this.__sourceException;\n    }\n  }\n});\n"
  ]
}